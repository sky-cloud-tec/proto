// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/grpc/auth.proto

// 命名尽量不要和grpc包冲突

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	auth "github.com/sky-cloud-tec/proto/v1/auth"
	common "github.com/sky-cloud-tec/proto/v1/common"
	eventti "github.com/sky-cloud-tec/proto/v1/eventti"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// http request identity
type ByHttpIdentityRequest struct {
	Token                string   `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	Method               string   `protobuf:"bytes,20,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string   `protobuf:"bytes,30,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByHttpIdentityRequest) Reset()         { *m = ByHttpIdentityRequest{} }
func (m *ByHttpIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*ByHttpIdentityRequest) ProtoMessage()    {}
func (*ByHttpIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{0}
}

func (m *ByHttpIdentityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByHttpIdentityRequest.Unmarshal(m, b)
}
func (m *ByHttpIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByHttpIdentityRequest.Marshal(b, m, deterministic)
}
func (m *ByHttpIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByHttpIdentityRequest.Merge(m, src)
}
func (m *ByHttpIdentityRequest) XXX_Size() int {
	return xxx_messageInfo_ByHttpIdentityRequest.Size(m)
}
func (m *ByHttpIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByHttpIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByHttpIdentityRequest proto.InternalMessageInfo

func (m *ByHttpIdentityRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ByHttpIdentityRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *ByHttpIdentityRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// example code
type ByHttpIdentity struct {
	Token                string   `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	Method               string   `protobuf:"bytes,20,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string   `protobuf:"bytes,30,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByHttpIdentity) Reset()         { *m = ByHttpIdentity{} }
func (m *ByHttpIdentity) String() string { return proto.CompactTextString(m) }
func (*ByHttpIdentity) ProtoMessage()    {}
func (*ByHttpIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{1}
}

func (m *ByHttpIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByHttpIdentity.Unmarshal(m, b)
}
func (m *ByHttpIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByHttpIdentity.Marshal(b, m, deterministic)
}
func (m *ByHttpIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByHttpIdentity.Merge(m, src)
}
func (m *ByHttpIdentity) XXX_Size() int {
	return xxx_messageInfo_ByHttpIdentity.Size(m)
}
func (m *ByHttpIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_ByHttpIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_ByHttpIdentity proto.InternalMessageInfo

func (m *ByHttpIdentity) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ByHttpIdentity) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *ByHttpIdentity) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type CheckPermResponse struct {
	Ok                   bool     `protobuf:"varint,10,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckPermResponse) Reset()         { *m = CheckPermResponse{} }
func (m *CheckPermResponse) String() string { return proto.CompactTextString(m) }
func (*CheckPermResponse) ProtoMessage()    {}
func (*CheckPermResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{2}
}

func (m *CheckPermResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPermResponse.Unmarshal(m, b)
}
func (m *CheckPermResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPermResponse.Marshal(b, m, deterministic)
}
func (m *CheckPermResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPermResponse.Merge(m, src)
}
func (m *CheckPermResponse) XXX_Size() int {
	return xxx_messageInfo_CheckPermResponse.Size(m)
}
func (m *CheckPermResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPermResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPermResponse proto.InternalMessageInfo

func (m *CheckPermResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

// example code
type PermOk struct {
	Ok                   bool     `protobuf:"varint,10,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermOk) Reset()         { *m = PermOk{} }
func (m *PermOk) String() string { return proto.CompactTextString(m) }
func (*PermOk) ProtoMessage()    {}
func (*PermOk) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{3}
}

func (m *PermOk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermOk.Unmarshal(m, b)
}
func (m *PermOk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermOk.Marshal(b, m, deterministic)
}
func (m *PermOk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermOk.Merge(m, src)
}
func (m *PermOk) XXX_Size() int {
	return xxx_messageInfo_PermOk.Size(m)
}
func (m *PermOk) XXX_DiscardUnknown() {
	xxx_messageInfo_PermOk.DiscardUnknown(m)
}

var xxx_messageInfo_PermOk proto.InternalMessageInfo

func (m *PermOk) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

// example code
type PermOK struct {
	Ok                   bool     `protobuf:"varint,10,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermOK) Reset()         { *m = PermOK{} }
func (m *PermOK) String() string { return proto.CompactTextString(m) }
func (*PermOK) ProtoMessage()    {}
func (*PermOK) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{4}
}

func (m *PermOK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermOK.Unmarshal(m, b)
}
func (m *PermOK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermOK.Marshal(b, m, deterministic)
}
func (m *PermOK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermOK.Merge(m, src)
}
func (m *PermOK) XXX_Size() int {
	return xxx_messageInfo_PermOK.Size(m)
}
func (m *PermOK) XXX_DiscardUnknown() {
	xxx_messageInfo_PermOK.DiscardUnknown(m)
}

var xxx_messageInfo_PermOK proto.InternalMessageInfo

func (m *PermOK) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ByUsernameRequest struct {
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByUsernameRequest) Reset()         { *m = ByUsernameRequest{} }
func (m *ByUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*ByUsernameRequest) ProtoMessage()    {}
func (*ByUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{5}
}

func (m *ByUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByUsernameRequest.Unmarshal(m, b)
}
func (m *ByUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByUsernameRequest.Marshal(b, m, deterministic)
}
func (m *ByUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByUsernameRequest.Merge(m, src)
}
func (m *ByUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_ByUsernameRequest.Size(m)
}
func (m *ByUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByUsernameRequest proto.InternalMessageInfo

func (m *ByUsernameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListUserRolesResponse struct {
	Username             string   `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	Roles                []string `protobuf:"bytes,20,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserRolesResponse) Reset()         { *m = ListUserRolesResponse{} }
func (m *ListUserRolesResponse) String() string { return proto.CompactTextString(m) }
func (*ListUserRolesResponse) ProtoMessage()    {}
func (*ListUserRolesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{6}
}

func (m *ListUserRolesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUserRolesResponse.Unmarshal(m, b)
}
func (m *ListUserRolesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUserRolesResponse.Marshal(b, m, deterministic)
}
func (m *ListUserRolesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserRolesResponse.Merge(m, src)
}
func (m *ListUserRolesResponse) XXX_Size() int {
	return xxx_messageInfo_ListUserRolesResponse.Size(m)
}
func (m *ListUserRolesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserRolesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserRolesResponse proto.InternalMessageInfo

func (m *ListUserRolesResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ListUserRolesResponse) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

type ListPermResponse struct {
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Roles                []string `protobuf:"bytes,20,rep,name=roles,proto3" json:"roles,omitempty"`
	Implementer          string   `protobuf:"bytes,30,opt,name=implementer,proto3" json:"implementer,omitempty"`
	Descriptions         []string `protobuf:"bytes,40,rep,name=descriptions,proto3" json:"descriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPermResponse) Reset()         { *m = ListPermResponse{} }
func (m *ListPermResponse) String() string { return proto.CompactTextString(m) }
func (*ListPermResponse) ProtoMessage()    {}
func (*ListPermResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{7}
}

func (m *ListPermResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPermResponse.Unmarshal(m, b)
}
func (m *ListPermResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPermResponse.Marshal(b, m, deterministic)
}
func (m *ListPermResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPermResponse.Merge(m, src)
}
func (m *ListPermResponse) XXX_Size() int {
	return xxx_messageInfo_ListPermResponse.Size(m)
}
func (m *ListPermResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPermResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPermResponse proto.InternalMessageInfo

func (m *ListPermResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListPermResponse) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *ListPermResponse) GetImplementer() string {
	if m != nil {
		return m.Implementer
	}
	return ""
}

func (m *ListPermResponse) GetDescriptions() []string {
	if m != nil {
		return m.Descriptions
	}
	return nil
}

type ByNameRequest struct {
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByNameRequest) Reset()         { *m = ByNameRequest{} }
func (m *ByNameRequest) String() string { return proto.CompactTextString(m) }
func (*ByNameRequest) ProtoMessage()    {}
func (*ByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{8}
}

func (m *ByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByNameRequest.Unmarshal(m, b)
}
func (m *ByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByNameRequest.Marshal(b, m, deterministic)
}
func (m *ByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByNameRequest.Merge(m, src)
}
func (m *ByNameRequest) XXX_Size() int {
	return xxx_messageInfo_ByNameRequest.Size(m)
}
func (m *ByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByNameRequest proto.InternalMessageInfo

func (m *ByNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 映射关系必须是一对一的，即使看起来有冗余的结构
type SearchUserResponse struct {
	Usernames            []string `protobuf:"bytes,10,rep,name=usernames,proto3" json:"usernames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchUserResponse) Reset()         { *m = SearchUserResponse{} }
func (m *SearchUserResponse) String() string { return proto.CompactTextString(m) }
func (*SearchUserResponse) ProtoMessage()    {}
func (*SearchUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{9}
}

func (m *SearchUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchUserResponse.Unmarshal(m, b)
}
func (m *SearchUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchUserResponse.Marshal(b, m, deterministic)
}
func (m *SearchUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchUserResponse.Merge(m, src)
}
func (m *SearchUserResponse) XXX_Size() int {
	return xxx_messageInfo_SearchUserResponse.Size(m)
}
func (m *SearchUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchUserResponse proto.InternalMessageInfo

func (m *SearchUserResponse) GetUsernames() []string {
	if m != nil {
		return m.Usernames
	}
	return nil
}

type SearchUserGroupResponse struct {
	GroupNames           []string `protobuf:"bytes,10,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchUserGroupResponse) Reset()         { *m = SearchUserGroupResponse{} }
func (m *SearchUserGroupResponse) String() string { return proto.CompactTextString(m) }
func (*SearchUserGroupResponse) ProtoMessage()    {}
func (*SearchUserGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{10}
}

func (m *SearchUserGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchUserGroupResponse.Unmarshal(m, b)
}
func (m *SearchUserGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchUserGroupResponse.Marshal(b, m, deterministic)
}
func (m *SearchUserGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchUserGroupResponse.Merge(m, src)
}
func (m *SearchUserGroupResponse) XXX_Size() int {
	return xxx_messageInfo_SearchUserGroupResponse.Size(m)
}
func (m *SearchUserGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchUserGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchUserGroupResponse proto.InternalMessageInfo

func (m *SearchUserGroupResponse) GetGroupNames() []string {
	if m != nil {
		return m.GroupNames
	}
	return nil
}

// 服务名和用户角色请求
type ByRoleAndAppRequest struct {
	App                  string   `protobuf:"bytes,10,opt,name=app,proto3" json:"app,omitempty"`
	Role                 string   `protobuf:"bytes,20,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByRoleAndAppRequest) Reset()         { *m = ByRoleAndAppRequest{} }
func (m *ByRoleAndAppRequest) String() string { return proto.CompactTextString(m) }
func (*ByRoleAndAppRequest) ProtoMessage()    {}
func (*ByRoleAndAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{11}
}

func (m *ByRoleAndAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByRoleAndAppRequest.Unmarshal(m, b)
}
func (m *ByRoleAndAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByRoleAndAppRequest.Marshal(b, m, deterministic)
}
func (m *ByRoleAndAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByRoleAndAppRequest.Merge(m, src)
}
func (m *ByRoleAndAppRequest) XXX_Size() int {
	return xxx_messageInfo_ByRoleAndAppRequest.Size(m)
}
func (m *ByRoleAndAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByRoleAndAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByRoleAndAppRequest proto.InternalMessageInfo

func (m *ByRoleAndAppRequest) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *ByRoleAndAppRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type ByEventRequest struct {
	AuthRoleChangedMsg   *eventti.AuthRoleChangedMsg `protobuf:"bytes,10,opt,name=auth_role_changed_msg,json=authRoleChangedMsg,proto3" json:"auth_role_changed_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ByEventRequest) Reset()         { *m = ByEventRequest{} }
func (m *ByEventRequest) String() string { return proto.CompactTextString(m) }
func (*ByEventRequest) ProtoMessage()    {}
func (*ByEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{12}
}

func (m *ByEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByEventRequest.Unmarshal(m, b)
}
func (m *ByEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByEventRequest.Marshal(b, m, deterministic)
}
func (m *ByEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByEventRequest.Merge(m, src)
}
func (m *ByEventRequest) XXX_Size() int {
	return xxx_messageInfo_ByEventRequest.Size(m)
}
func (m *ByEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByEventRequest proto.InternalMessageInfo

func (m *ByEventRequest) GetAuthRoleChangedMsg() *eventti.AuthRoleChangedMsg {
	if m != nil {
		return m.AuthRoleChangedMsg
	}
	return nil
}

type WithAppInfoRequest struct {
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Roles                []string `protobuf:"bytes,20,rep,name=roles,proto3" json:"roles,omitempty"`
	Descriptions         []string `protobuf:"bytes,30,rep,name=descriptions,proto3" json:"descriptions,omitempty"`
	Implementer          string   `protobuf:"bytes,40,opt,name=implementer,proto3" json:"implementer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithAppInfoRequest) Reset()         { *m = WithAppInfoRequest{} }
func (m *WithAppInfoRequest) String() string { return proto.CompactTextString(m) }
func (*WithAppInfoRequest) ProtoMessage()    {}
func (*WithAppInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{13}
}

func (m *WithAppInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithAppInfoRequest.Unmarshal(m, b)
}
func (m *WithAppInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithAppInfoRequest.Marshal(b, m, deterministic)
}
func (m *WithAppInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithAppInfoRequest.Merge(m, src)
}
func (m *WithAppInfoRequest) XXX_Size() int {
	return xxx_messageInfo_WithAppInfoRequest.Size(m)
}
func (m *WithAppInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithAppInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithAppInfoRequest proto.InternalMessageInfo

func (m *WithAppInfoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WithAppInfoRequest) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *WithAppInfoRequest) GetDescriptions() []string {
	if m != nil {
		return m.Descriptions
	}
	return nil
}

func (m *WithAppInfoRequest) GetImplementer() string {
	if m != nil {
		return m.Implementer
	}
	return ""
}

type ByNamesRequest struct {
	Names                []string `protobuf:"bytes,10,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByNamesRequest) Reset()         { *m = ByNamesRequest{} }
func (m *ByNamesRequest) String() string { return proto.CompactTextString(m) }
func (*ByNamesRequest) ProtoMessage()    {}
func (*ByNamesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{14}
}

func (m *ByNamesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByNamesRequest.Unmarshal(m, b)
}
func (m *ByNamesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByNamesRequest.Marshal(b, m, deterministic)
}
func (m *ByNamesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByNamesRequest.Merge(m, src)
}
func (m *ByNamesRequest) XXX_Size() int {
	return xxx_messageInfo_ByNamesRequest.Size(m)
}
func (m *ByNamesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByNamesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByNamesRequest proto.InternalMessageInfo

func (m *ByNamesRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type ListUserAndUserGroupResponse struct {
	UsersRoles           []*auth.UserRoles      `protobuf:"bytes,10,rep,name=users_roles,json=usersRoles,proto3" json:"users_roles,omitempty"`
	UserGroupsRoles      []*auth.UserGroupRoles `protobuf:"bytes,20,rep,name=user_groups_roles,json=userGroupsRoles,proto3" json:"user_groups_roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListUserAndUserGroupResponse) Reset()         { *m = ListUserAndUserGroupResponse{} }
func (m *ListUserAndUserGroupResponse) String() string { return proto.CompactTextString(m) }
func (*ListUserAndUserGroupResponse) ProtoMessage()    {}
func (*ListUserAndUserGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_62122fdffbbebf5a, []int{15}
}

func (m *ListUserAndUserGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUserAndUserGroupResponse.Unmarshal(m, b)
}
func (m *ListUserAndUserGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUserAndUserGroupResponse.Marshal(b, m, deterministic)
}
func (m *ListUserAndUserGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserAndUserGroupResponse.Merge(m, src)
}
func (m *ListUserAndUserGroupResponse) XXX_Size() int {
	return xxx_messageInfo_ListUserAndUserGroupResponse.Size(m)
}
func (m *ListUserAndUserGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserAndUserGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserAndUserGroupResponse proto.InternalMessageInfo

func (m *ListUserAndUserGroupResponse) GetUsersRoles() []*auth.UserRoles {
	if m != nil {
		return m.UsersRoles
	}
	return nil
}

func (m *ListUserAndUserGroupResponse) GetUserGroupsRoles() []*auth.UserGroupRoles {
	if m != nil {
		return m.UserGroupsRoles
	}
	return nil
}

func init() {
	proto.RegisterType((*ByHttpIdentityRequest)(nil), "rpc.ByHttpIdentityRequest")
	proto.RegisterType((*ByHttpIdentity)(nil), "rpc.ByHttpIdentity")
	proto.RegisterType((*CheckPermResponse)(nil), "rpc.CheckPermResponse")
	proto.RegisterType((*PermOk)(nil), "rpc.PermOk")
	proto.RegisterType((*PermOK)(nil), "rpc.PermOK")
	proto.RegisterType((*ByUsernameRequest)(nil), "rpc.ByUsernameRequest")
	proto.RegisterType((*ListUserRolesResponse)(nil), "rpc.ListUserRolesResponse")
	proto.RegisterType((*ListPermResponse)(nil), "rpc.ListPermResponse")
	proto.RegisterType((*ByNameRequest)(nil), "rpc.ByNameRequest")
	proto.RegisterType((*SearchUserResponse)(nil), "rpc.SearchUserResponse")
	proto.RegisterType((*SearchUserGroupResponse)(nil), "rpc.SearchUserGroupResponse")
	proto.RegisterType((*ByRoleAndAppRequest)(nil), "rpc.ByRoleAndAppRequest")
	proto.RegisterType((*ByEventRequest)(nil), "rpc.ByEventRequest")
	proto.RegisterType((*WithAppInfoRequest)(nil), "rpc.WithAppInfoRequest")
	proto.RegisterType((*ByNamesRequest)(nil), "rpc.ByNamesRequest")
	proto.RegisterType((*ListUserAndUserGroupResponse)(nil), "rpc.ListUserAndUserGroupResponse")
}

func init() { proto.RegisterFile("src/grpc/auth.proto", fileDescriptor_62122fdffbbebf5a) }

var fileDescriptor_62122fdffbbebf5a = []byte{
	// 776 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcd, 0x4f, 0xdb, 0x48,
	0x14, 0x4f, 0xc8, 0x2e, 0x82, 0xe7, 0x5d, 0x3e, 0x26, 0x09, 0x78, 0xbd, 0x88, 0x65, 0x07, 0xed,
	0x2e, 0x17, 0x9c, 0xdd, 0xec, 0xa1, 0x52, 0x39, 0xd0, 0x24, 0x45, 0x85, 0x7e, 0x50, 0x14, 0x84,
	0x90, 0x7a, 0x49, 0x83, 0x3d, 0x8d, 0xad, 0xc4, 0xf6, 0x74, 0x66, 0x8c, 0x94, 0x6b, 0xd5, 0x4b,
	0x8f, 0xed, 0x7f, 0xdb, 0x5b, 0xf5, 0xc6, 0x76, 0xe2, 0xc4, 0xa1, 0x48, 0xe5, 0x94, 0x79, 0xbf,
	0x37, 0xbf, 0x9f, 0xdf, 0xe7, 0x04, 0xaa, 0x52, 0x38, 0x8d, 0x81, 0xe0, 0x4e, 0xa3, 0x1f, 0x2b,
	0xcf, 0xe6, 0x22, 0x52, 0x11, 0xa9, 0x08, 0xee, 0x58, 0xda, 0x83, 0x60, 0xce, 0x63, 0xfd, 0x86,
	0x20, 0xbb, 0x65, 0xa1, 0x52, 0x7e, 0xf6, 0x9b, 0xba, 0xea, 0xe8, 0x72, 0xa2, 0x20, 0x88, 0xc2,
	0x46, 0x20, 0x07, 0x32, 0x81, 0xe9, 0x35, 0xd4, 0xdb, 0xe3, 0x53, 0xa5, 0xf8, 0x99, 0xcb, 0x42,
	0xe5, 0xab, 0x71, 0x97, 0xbd, 0x8f, 0x99, 0x54, 0xa4, 0x06, 0x3f, 0xab, 0x68, 0xc8, 0x42, 0x13,
	0xf6, 0xca, 0x07, 0xab, 0xdd, 0xc4, 0x20, 0x5b, 0xb0, 0x1c, 0x30, 0xe5, 0x45, 0xae, 0x59, 0xd3,
	0x70, 0x6a, 0x91, 0x0d, 0xa8, 0xc4, 0x62, 0x64, 0xee, 0x6a, 0x10, 0x8f, 0xf4, 0x02, 0xd6, 0x66,
	0x85, 0x1f, 0xac, 0xb8, 0x0f, 0x9b, 0x1d, 0x8f, 0x39, 0xc3, 0x0b, 0x26, 0x82, 0x2e, 0x93, 0x3c,
	0x0a, 0x25, 0x23, 0x6b, 0xb0, 0x14, 0x0d, 0xb5, 0xe2, 0x4a, 0x77, 0x29, 0x1a, 0x52, 0x13, 0x96,
	0xd1, 0xff, 0x7a, 0x78, 0xa7, 0xe7, 0x45, 0xc1, 0xf3, 0x0f, 0x6c, 0xb6, 0xc7, 0x57, 0x92, 0x89,
	0xb0, 0x1f, 0xb0, 0x2c, 0x7f, 0x02, 0x3f, 0xa1, 0x99, 0x06, 0xab, 0xcf, 0xf4, 0x0c, 0xea, 0x2f,
	0x7d, 0xa9, 0xf0, 0x6a, 0x37, 0x1a, 0x31, 0x39, 0x89, 0xc2, 0x82, 0x95, 0x38, 0xe5, 0xa7, 0x84,
	0x89, 0x8d, 0x69, 0x0b, 0xbc, 0x6c, 0xd6, 0xf6, 0x2a, 0x98, 0xb6, 0x36, 0xe8, 0x87, 0x32, 0x6c,
	0xa0, 0xd6, 0x4c, 0x32, 0x0b, 0xbe, 0xb9, 0x98, 0x4e, 0xf6, 0xc0, 0xf0, 0x03, 0x3e, 0x62, 0x01,
	0x0b, 0x15, 0x13, 0x69, 0x95, 0xf2, 0x10, 0xa1, 0xf0, 0x8b, 0xcb, 0xa4, 0x23, 0x7c, 0xae, 0xfc,
	0x28, 0x94, 0xe6, 0x81, 0xa6, 0xcf, 0x60, 0x74, 0x1f, 0x7e, 0x6d, 0x8f, 0xcf, 0xef, 0x49, 0xba,
	0x09, 0xe4, 0x92, 0xf5, 0x85, 0xe3, 0xe9, 0xb4, 0xb3, 0x50, 0x77, 0x60, 0x35, 0xcb, 0x50, 0x9a,
	0xa0, 0xb5, 0xa7, 0x00, 0x7d, 0x0c, 0xdb, 0x53, 0xce, 0x33, 0x11, 0xc5, 0x7c, 0x42, 0xfc, 0x03,
	0x8c, 0x01, 0x02, 0xbd, 0x3c, 0x15, 0x34, 0x74, 0xae, 0xb9, 0x47, 0x50, 0x6d, 0x8f, 0xb1, 0xbc,
	0xad, 0xd0, 0x6d, 0x71, 0x9e, 0x85, 0xb6, 0x01, 0x95, 0x3e, 0xe7, 0x69, 0x64, 0x78, 0xc4, 0x60,
	0xb1, 0x18, 0xe9, 0xdc, 0xe8, 0x33, 0x7d, 0x8b, 0x53, 0x77, 0x82, 0x83, 0x9f, 0xf1, 0xce, 0xa1,
	0x8e, 0x0b, 0xd2, 0x43, 0x77, 0xcf, 0xf1, 0xfa, 0xe1, 0x80, 0xb9, 0xbd, 0x40, 0x0e, 0xb4, 0x92,
	0xd1, 0xfc, 0xdd, 0xce, 0xd6, 0xa4, 0x15, 0x2b, 0x0f, 0x3f, 0xdb, 0x49, 0xee, 0xbc, 0x92, 0x83,
	0x2e, 0xe9, 0x17, 0x30, 0xfa, 0xb1, 0x0c, 0xe4, 0xda, 0x57, 0x5e, 0x8b, 0xf3, 0xb3, 0xf0, 0x5d,
	0xf4, 0x9d, 0xca, 0xdd, 0xd1, 0xba, 0xf9, 0xc6, 0xec, 0x16, 0x1b, 0x33, 0xdf, 0xde, 0x83, 0x42,
	0x7b, 0xe9, 0xdf, 0x98, 0xa8, 0x2e, 0x58, 0x6e, 0x61, 0xf3, 0x25, 0x4d, 0x0c, 0xfa, 0xa5, 0x0c,
	0x3b, 0xd9, 0xcc, 0xb6, 0x42, 0xb7, 0xd8, 0x8f, 0x7f, 0xc1, 0xc0, 0xbe, 0xc9, 0x5e, 0x12, 0x2a,
	0x92, 0x8d, 0xe6, 0xba, 0xad, 0x1f, 0x95, 0xe9, 0xa0, 0x83, 0xbe, 0xa3, 0xcf, 0xe4, 0x09, 0x6c,
	0xa2, 0xd5, 0xd3, 0x3d, 0xcb, 0x78, 0x35, 0xcd, 0xab, 0x4d, 0x79, 0xc9, 0x57, 0x34, 0x79, 0x3d,
	0xce, 0xec, 0x44, 0xa1, 0xf9, 0xa9, 0x0c, 0x06, 0x0e, 0xfe, 0x25, 0x13, 0xb7, 0xbe, 0xc3, 0x48,
	0x0b, 0x56, 0x27, 0x9b, 0x4d, 0x2c, 0x5b, 0x70, 0xc7, 0x5e, 0xf8, 0x28, 0x59, 0x5b, 0xda, 0x57,
	0x78, 0x05, 0x68, 0x89, 0x3c, 0x82, 0x95, 0x6c, 0x9d, 0x08, 0x49, 0x15, 0x72, 0x93, 0x6d, 0xd5,
	0x35, 0x36, 0xbf, 0x71, 0xb4, 0xd4, 0xfc, 0x5c, 0x06, 0x03, 0xe3, 0xcd, 0x62, 0x39, 0x02, 0x98,
	0x8e, 0xee, 0x42, 0xa9, 0x6d, 0x8d, 0x15, 0x77, 0x82, 0x96, 0xc8, 0x09, 0xac, 0xcf, 0xcd, 0xfd,
	0x42, 0x85, 0x9d, 0x39, 0x85, 0x99, 0x8e, 0xd0, 0x52, 0xf3, 0xeb, 0x12, 0x18, 0x58, 0xa9, 0x2c,
	0xa6, 0x2b, 0xa8, 0x2d, 0xea, 0x21, 0x31, 0x53, 0xed, 0xc2, 0xb6, 0x58, 0x7f, 0x4e, 0xd2, 0xbd,
	0xab, 0xf1, 0xb4, 0x44, 0x8e, 0x01, 0xae, 0xb8, 0xdb, 0x57, 0x0c, 0xf9, 0xa4, 0x9a, 0x8a, 0xe5,
	0xb7, 0xc7, 0xb2, 0xec, 0xe4, 0x2f, 0xc3, 0xbe, 0xd4, 0xc3, 0xf7, 0x5c, 0x46, 0x61, 0x4e, 0xa0,
	0x03, 0xd0, 0x11, 0x2c, 0x13, 0x48, 0xea, 0x52, 0xdc, 0x8d, 0xfb, 0x45, 0x9e, 0xb2, 0x11, 0x7b,
	0x98, 0xc8, 0x29, 0x54, 0x93, 0x54, 0x66, 0x46, 0xef, 0x07, 0x72, 0x6a, 0x1f, 0xc3, 0x56, 0xc8,
	0x94, 0x2d, 0x87, 0x63, 0x67, 0x14, 0xc5, 0x6e, 0xf2, 0x37, 0x89, 0x32, 0x6f, 0xfe, 0x1a, 0xf8,
	0xca, 0x8b, 0x6f, 0x90, 0xdd, 0x90, 0xc3, 0xf1, 0xa1, 0xf6, 0x1f, 0x2a, 0xe6, 0x34, 0xf4, 0x9d,
	0xc6, 0xed, 0x7f, 0x0d, 0xc1, 0x9d, 0x9b, 0x65, 0x6d, 0xfd, 0xff, 0x2d, 0x00, 0x00, 0xff, 0xff,
	0x47, 0x2d, 0x8d, 0x53, 0xbb, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PermServiceClient is the client API for PermService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PermServiceClient interface {
	// DISCUSSION
	// style 1
	// CheckPermission -> CheckPerm -> Check
	// 在PermService下的Check，自然带有 CheckPerm的意思，所以Perm可以省略
	// 但是加上的话，读起来会更连贯, 准确
	CheckPerm(ctx context.Context, in *ByHttpIdentityRequest, opts ...grpc.CallOption) (*CheckPermResponse, error)
	ListPerm(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*ListPermResponse, error)
}

type permServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPermServiceClient(cc grpc.ClientConnInterface) PermServiceClient {
	return &permServiceClient{cc}
}

func (c *permServiceClient) CheckPerm(ctx context.Context, in *ByHttpIdentityRequest, opts ...grpc.CallOption) (*CheckPermResponse, error) {
	out := new(CheckPermResponse)
	err := c.cc.Invoke(ctx, "/rpc.PermService/CheckPerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permServiceClient) ListPerm(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*ListPermResponse, error) {
	out := new(ListPermResponse)
	err := c.cc.Invoke(ctx, "/rpc.PermService/ListPerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PermServiceServer is the server API for PermService service.
type PermServiceServer interface {
	// DISCUSSION
	// style 1
	// CheckPermission -> CheckPerm -> Check
	// 在PermService下的Check，自然带有 CheckPerm的意思，所以Perm可以省略
	// 但是加上的话，读起来会更连贯, 准确
	CheckPerm(context.Context, *ByHttpIdentityRequest) (*CheckPermResponse, error)
	ListPerm(context.Context, *ByNameRequest) (*ListPermResponse, error)
}

// UnimplementedPermServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPermServiceServer struct {
}

func (*UnimplementedPermServiceServer) CheckPerm(ctx context.Context, req *ByHttpIdentityRequest) (*CheckPermResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPerm not implemented")
}
func (*UnimplementedPermServiceServer) ListPerm(ctx context.Context, req *ByNameRequest) (*ListPermResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPerm not implemented")
}

func RegisterPermServiceServer(s *grpc.Server, srv PermServiceServer) {
	s.RegisterService(&_PermService_serviceDesc, srv)
}

func _PermService_CheckPerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByHttpIdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermServiceServer).CheckPerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PermService/CheckPerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermServiceServer).CheckPerm(ctx, req.(*ByHttpIdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermService_ListPerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermServiceServer).ListPerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PermService/ListPerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermServiceServer).ListPerm(ctx, req.(*ByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PermService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.PermService",
	HandlerType: (*PermServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckPerm",
			Handler:    _PermService_CheckPerm_Handler,
		},
		{
			MethodName: "ListPerm",
			Handler:    _PermService_ListPerm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/auth.proto",
}

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	// 根据用户名字模糊查询用户
	SearchUser(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*SearchUserResponse, error)
	// 根据用户组名模糊查询
	SearchUserGroup(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*SearchUserGroupResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) SearchUser(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*SearchUserResponse, error) {
	out := new(SearchUserResponse)
	err := c.cc.Invoke(ctx, "/rpc.UserService/SearchUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SearchUserGroup(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*SearchUserGroupResponse, error) {
	out := new(SearchUserGroupResponse)
	err := c.cc.Invoke(ctx, "/rpc.UserService/SearchUserGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	// 根据用户名字模糊查询用户
	SearchUser(context.Context, *ByNameRequest) (*SearchUserResponse, error)
	// 根据用户组名模糊查询
	SearchUserGroup(context.Context, *ByNameRequest) (*SearchUserGroupResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) SearchUser(ctx context.Context, req *ByNameRequest) (*SearchUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUser not implemented")
}
func (*UnimplementedUserServiceServer) SearchUserGroup(ctx context.Context, req *ByNameRequest) (*SearchUserGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUserGroup not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_SearchUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SearchUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/SearchUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SearchUser(ctx, req.(*ByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SearchUserGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SearchUserGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/SearchUserGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SearchUserGroup(ctx, req.(*ByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchUser",
			Handler:    _UserService_SearchUser_Handler,
		},
		{
			MethodName: "SearchUserGroup",
			Handler:    _UserService_SearchUserGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/auth.proto",
}

// RoleServiceClient is the client API for RoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoleServiceClient interface {
	// 根据服务名和用户角色展示用户和用户组信息
	ListUserAndUserGroup(ctx context.Context, in *ByRoleAndAppRequest, opts ...grpc.CallOption) (*ListUserAndUserGroupResponse, error)
	// 更新用户请求权限
	UpdateRole(ctx context.Context, in *ByEventRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	CreateRole(ctx context.Context, in *WithAppInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	DeleteRole(ctx context.Context, in *WithAppInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	UpdateUserGroupRole(ctx context.Context, in *ByEventRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
}

type roleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoleServiceClient(cc grpc.ClientConnInterface) RoleServiceClient {
	return &roleServiceClient{cc}
}

func (c *roleServiceClient) ListUserAndUserGroup(ctx context.Context, in *ByRoleAndAppRequest, opts ...grpc.CallOption) (*ListUserAndUserGroupResponse, error) {
	out := new(ListUserAndUserGroupResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/ListUserAndUserGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdateRole(ctx context.Context, in *ByEventRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/UpdateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) CreateRole(ctx context.Context, in *WithAppInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteRole(ctx context.Context, in *WithAppInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/DeleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdateUserGroupRole(ctx context.Context, in *ByEventRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/UpdateUserGroupRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoleServiceServer is the server API for RoleService service.
type RoleServiceServer interface {
	// 根据服务名和用户角色展示用户和用户组信息
	ListUserAndUserGroup(context.Context, *ByRoleAndAppRequest) (*ListUserAndUserGroupResponse, error)
	// 更新用户请求权限
	UpdateRole(context.Context, *ByEventRequest) (*common.SimpleJsonResponse, error)
	CreateRole(context.Context, *WithAppInfoRequest) (*common.SimpleJsonResponse, error)
	DeleteRole(context.Context, *WithAppInfoRequest) (*common.SimpleJsonResponse, error)
	UpdateUserGroupRole(context.Context, *ByEventRequest) (*common.SimpleJsonResponse, error)
}

// UnimplementedRoleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoleServiceServer struct {
}

func (*UnimplementedRoleServiceServer) ListUserAndUserGroup(ctx context.Context, req *ByRoleAndAppRequest) (*ListUserAndUserGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUserAndUserGroup not implemented")
}
func (*UnimplementedRoleServiceServer) UpdateRole(ctx context.Context, req *ByEventRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRole not implemented")
}
func (*UnimplementedRoleServiceServer) CreateRole(ctx context.Context, req *WithAppInfoRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedRoleServiceServer) DeleteRole(ctx context.Context, req *WithAppInfoRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (*UnimplementedRoleServiceServer) UpdateUserGroupRole(ctx context.Context, req *ByEventRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserGroupRole not implemented")
}

func RegisterRoleServiceServer(s *grpc.Server, srv RoleServiceServer) {
	s.RegisterService(&_RoleService_serviceDesc, srv)
}

func _RoleService_ListUserAndUserGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByRoleAndAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).ListUserAndUserGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/ListUserAndUserGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).ListUserAndUserGroup(ctx, req.(*ByRoleAndAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).UpdateRole(ctx, req.(*ByEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithAppInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).CreateRole(ctx, req.(*WithAppInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithAppInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteRole(ctx, req.(*WithAppInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_UpdateUserGroupRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).UpdateUserGroupRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/UpdateUserGroupRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).UpdateUserGroupRole(ctx, req.(*ByEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.RoleService",
	HandlerType: (*RoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListUserAndUserGroup",
			Handler:    _RoleService_ListUserAndUserGroup_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _RoleService_UpdateRole_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _RoleService_CreateRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _RoleService_DeleteRole_Handler,
		},
		{
			MethodName: "UpdateUserGroupRole",
			Handler:    _RoleService_UpdateUserGroupRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/auth.proto",
}
