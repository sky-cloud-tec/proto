// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.4
// source: src/grpc/auth.proto

// 命名尽量不要和grpc包冲突

package rpc

import (
	context "context"
	auth "github.com/sky-cloud-tec/proto/v1/auth"
	common "github.com/sky-cloud-tec/proto/v1/common"
	eventti "github.com/sky-cloud-tec/proto/v1/eventti"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// http request identity
type ByHttpIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	Method string `protobuf:"bytes,20,opt,name=method,proto3" json:"method,omitempty"` // http method
	Url    string `protobuf:"bytes,30,opt,name=url,proto3" json:"url,omitempty"`       // request url
}

func (x *ByHttpIdentityRequest) Reset() {
	*x = ByHttpIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByHttpIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByHttpIdentityRequest) ProtoMessage() {}

func (x *ByHttpIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByHttpIdentityRequest.ProtoReflect.Descriptor instead.
func (*ByHttpIdentityRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{0}
}

func (x *ByHttpIdentityRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ByHttpIdentityRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ByHttpIdentityRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// example code
type ByHttpIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	Method string `protobuf:"bytes,20,opt,name=method,proto3" json:"method,omitempty"` // http method
	Url    string `protobuf:"bytes,30,opt,name=url,proto3" json:"url,omitempty"`       // request url
}

func (x *ByHttpIdentity) Reset() {
	*x = ByHttpIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByHttpIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByHttpIdentity) ProtoMessage() {}

func (x *ByHttpIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByHttpIdentity.ProtoReflect.Descriptor instead.
func (*ByHttpIdentity) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{1}
}

func (x *ByHttpIdentity) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ByHttpIdentity) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ByHttpIdentity) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CheckPermResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,10,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CheckPermResponse) Reset() {
	*x = CheckPermResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermResponse) ProtoMessage() {}

func (x *CheckPermResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermResponse.ProtoReflect.Descriptor instead.
func (*CheckPermResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{2}
}

func (x *CheckPermResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// example code
type PermOk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,10,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *PermOk) Reset() {
	*x = PermOk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermOk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermOk) ProtoMessage() {}

func (x *PermOk) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermOk.ProtoReflect.Descriptor instead.
func (*PermOk) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{3}
}

func (x *PermOk) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

// example code
type PermOK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,10,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *PermOK) Reset() {
	*x = PermOK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermOK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermOK) ProtoMessage() {}

func (x *PermOK) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermOK.ProtoReflect.Descriptor instead.
func (*PermOK) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{4}
}

func (x *PermOK) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ByUsernameRequest) Reset() {
	*x = ByUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByUsernameRequest) ProtoMessage() {}

func (x *ByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByUsernameRequest.ProtoReflect.Descriptor instead.
func (*ByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{5}
}

func (x *ByUsernameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListUserRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string   `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	Roles    []string `protobuf:"bytes,20,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ListUserRolesResponse) Reset() {
	*x = ListUserRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRolesResponse) ProtoMessage() {}

func (x *ListUserRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRolesResponse.ProtoReflect.Descriptor instead.
func (*ListUserRolesResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{6}
}

func (x *ListUserRolesResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListUserRolesResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type ListPermResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Roles        []string `protobuf:"bytes,20,rep,name=roles,proto3" json:"roles,omitempty"`
	Implementer  string   `protobuf:"bytes,30,opt,name=implementer,proto3" json:"implementer,omitempty"`
	Descriptions []string `protobuf:"bytes,40,rep,name=descriptions,proto3" json:"descriptions,omitempty"`
}

func (x *ListPermResponse) Reset() {
	*x = ListPermResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPermResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermResponse) ProtoMessage() {}

func (x *ListPermResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermResponse.ProtoReflect.Descriptor instead.
func (*ListPermResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{7}
}

func (x *ListPermResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPermResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ListPermResponse) GetImplementer() string {
	if x != nil {
		return x.Implementer
	}
	return ""
}

func (x *ListPermResponse) GetDescriptions() []string {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

type ByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"` // contains(name)
}

func (x *ByNameRequest) Reset() {
	*x = ByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNameRequest) ProtoMessage() {}

func (x *ByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNameRequest.ProtoReflect.Descriptor instead.
func (*ByNameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{8}
}

func (x *ByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 映射关系必须是一对一的，即使看起来有冗余的结构
type SearchUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usernames []string `protobuf:"bytes,10,rep,name=usernames,proto3" json:"usernames,omitempty"` // user names
}

func (x *SearchUserResponse) Reset() {
	*x = SearchUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserResponse) ProtoMessage() {}

func (x *SearchUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserResponse.ProtoReflect.Descriptor instead.
func (*SearchUserResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{9}
}

func (x *SearchUserResponse) GetUsernames() []string {
	if x != nil {
		return x.Usernames
	}
	return nil
}

type SearchUserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupNames []string `protobuf:"bytes,10,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"` // group names
}

func (x *SearchUserGroupResponse) Reset() {
	*x = SearchUserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserGroupResponse) ProtoMessage() {}

func (x *SearchUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserGroupResponse.ProtoReflect.Descriptor instead.
func (*SearchUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{10}
}

func (x *SearchUserGroupResponse) GetGroupNames() []string {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

// 服务名和用户角色请求
type ByRoleAndAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App  string `protobuf:"bytes,10,opt,name=app,proto3" json:"app,omitempty"`   // app name, service太常见了, 用app来区分
	Role string `protobuf:"bytes,20,opt,name=role,proto3" json:"role,omitempty"` // role name
}

func (x *ByRoleAndAppRequest) Reset() {
	*x = ByRoleAndAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByRoleAndAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByRoleAndAppRequest) ProtoMessage() {}

func (x *ByRoleAndAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByRoleAndAppRequest.ProtoReflect.Descriptor instead.
func (*ByRoleAndAppRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{11}
}

func (x *ByRoleAndAppRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *ByRoleAndAppRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ByEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRoleChangedMsg *eventti.AuthRoleChangedMsg `protobuf:"bytes,10,opt,name=auth_role_changed_msg,json=authRoleChangedMsg,proto3" json:"auth_role_changed_msg,omitempty"`
}

func (x *ByEventRequest) Reset() {
	*x = ByEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByEventRequest) ProtoMessage() {}

func (x *ByEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByEventRequest.ProtoReflect.Descriptor instead.
func (*ByEventRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{12}
}

func (x *ByEventRequest) GetAuthRoleChangedMsg() *eventti.AuthRoleChangedMsg {
	if x != nil {
		return x.AuthRoleChangedMsg
	}
	return nil
}

type WithAppInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`                 // app name
	Roles        []string `protobuf:"bytes,20,rep,name=roles,proto3" json:"roles,omitempty"`               // app roles
	Descriptions []string `protobuf:"bytes,30,rep,name=descriptions,proto3" json:"descriptions,omitempty"` // role descriptions, 1:1 mapping to roles
	Implementer  string   `protobuf:"bytes,40,opt,name=implementer,proto3" json:"implementer,omitempty"`   // app implementer
}

func (x *WithAppInfoRequest) Reset() {
	*x = WithAppInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithAppInfoRequest) ProtoMessage() {}

func (x *WithAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithAppInfoRequest.ProtoReflect.Descriptor instead.
func (*WithAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{13}
}

func (x *WithAppInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WithAppInfoRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *WithAppInfoRequest) GetDescriptions() []string {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

func (x *WithAppInfoRequest) GetImplementer() string {
	if x != nil {
		return x.Implementer
	}
	return ""
}

type ByNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,10,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *ByNamesRequest) Reset() {
	*x = ByNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNamesRequest) ProtoMessage() {}

func (x *ByNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNamesRequest.ProtoReflect.Descriptor instead.
func (*ByNamesRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{14}
}

func (x *ByNamesRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type ListUserAndUserGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersRoles      []*auth.UserRoles      `protobuf:"bytes,10,rep,name=users_roles,json=usersRoles,proto3" json:"users_roles,omitempty"`
	UserGroupsRoles []*auth.UserGroupRoles `protobuf:"bytes,20,rep,name=user_groups_roles,json=userGroupsRoles,proto3" json:"user_groups_roles,omitempty"`
}

func (x *ListUserAndUserGroupResponse) Reset() {
	*x = ListUserAndUserGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserAndUserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserAndUserGroupResponse) ProtoMessage() {}

func (x *ListUserAndUserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserAndUserGroupResponse.ProtoReflect.Descriptor instead.
func (*ListUserAndUserGroupResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_auth_proto_rawDescGZIP(), []int{15}
}

func (x *ListUserAndUserGroupResponse) GetUsersRoles() []*auth.UserRoles {
	if x != nil {
		return x.UsersRoles
	}
	return nil
}

func (x *ListUserAndUserGroupResponse) GetUserGroupsRoles() []*auth.UserGroupRoles {
	if x != nil {
		return x.UserGroupsRoles
	}
	return nil
}

var File_src_grpc_auth_proto protoreflect.FileDescriptor

var file_src_grpc_auth_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a, 0x13, 0x73, 0x72, 0x63, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x73, 0x72, 0x63, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x74, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x72, 0x63, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x57, 0x0a, 0x15, 0x42, 0x79, 0x48, 0x74, 0x74, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x50, 0x0a, 0x0e, 0x42, 0x79,
	0x48, 0x74, 0x74, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x23, 0x0a, 0x11,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x22, 0x18, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x6d, 0x4f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x18, 0x0a, 0x06, 0x50,
	0x65, 0x72, 0x6d, 0x4f, 0x4b, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x27, 0x0a, 0x11, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x23,
	0x0a, 0x0d, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x13, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0x60, 0x0a, 0x0e, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4e, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x12,
	0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4d,
	0x73, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x26, 0x0a, 0x0e, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x92, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x32, 0x89, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x65, 0x72, 0x6d, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x48, 0x74, 0x74, 0x70,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x08, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0x91, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xf9, 0x02, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x3f, 0x0a, 0x16, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x6b, 0x79, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x25, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6b, 0x79, 0x2d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2d, 0x74, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_grpc_auth_proto_rawDescOnce sync.Once
	file_src_grpc_auth_proto_rawDescData = file_src_grpc_auth_proto_rawDesc
)

func file_src_grpc_auth_proto_rawDescGZIP() []byte {
	file_src_grpc_auth_proto_rawDescOnce.Do(func() {
		file_src_grpc_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_grpc_auth_proto_rawDescData)
	})
	return file_src_grpc_auth_proto_rawDescData
}

var file_src_grpc_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_src_grpc_auth_proto_goTypes = []interface{}{
	(*ByHttpIdentityRequest)(nil),        // 0: rpc.ByHttpIdentityRequest
	(*ByHttpIdentity)(nil),               // 1: rpc.ByHttpIdentity
	(*CheckPermResponse)(nil),            // 2: rpc.CheckPermResponse
	(*PermOk)(nil),                       // 3: rpc.PermOk
	(*PermOK)(nil),                       // 4: rpc.PermOK
	(*ByUsernameRequest)(nil),            // 5: rpc.ByUsernameRequest
	(*ListUserRolesResponse)(nil),        // 6: rpc.ListUserRolesResponse
	(*ListPermResponse)(nil),             // 7: rpc.ListPermResponse
	(*ByNameRequest)(nil),                // 8: rpc.ByNameRequest
	(*SearchUserResponse)(nil),           // 9: rpc.SearchUserResponse
	(*SearchUserGroupResponse)(nil),      // 10: rpc.SearchUserGroupResponse
	(*ByRoleAndAppRequest)(nil),          // 11: rpc.ByRoleAndAppRequest
	(*ByEventRequest)(nil),               // 12: rpc.ByEventRequest
	(*WithAppInfoRequest)(nil),           // 13: rpc.WithAppInfoRequest
	(*ByNamesRequest)(nil),               // 14: rpc.ByNamesRequest
	(*ListUserAndUserGroupResponse)(nil), // 15: rpc.ListUserAndUserGroupResponse
	(*eventti.AuthRoleChangedMsg)(nil),   // 16: eventti.AuthRoleChangedMsg
	(*auth.UserRoles)(nil),               // 17: auth.UserRoles
	(*auth.UserGroupRoles)(nil),          // 18: auth.UserGroupRoles
	(*common.SimpleJsonResponse)(nil),    // 19: common.SimpleJsonResponse
}
var file_src_grpc_auth_proto_depIdxs = []int32{
	16, // 0: rpc.ByEventRequest.auth_role_changed_msg:type_name -> eventti.AuthRoleChangedMsg
	17, // 1: rpc.ListUserAndUserGroupResponse.users_roles:type_name -> auth.UserRoles
	18, // 2: rpc.ListUserAndUserGroupResponse.user_groups_roles:type_name -> auth.UserGroupRoles
	0,  // 3: rpc.PermService.CheckPerm:input_type -> rpc.ByHttpIdentityRequest
	8,  // 4: rpc.PermService.ListPerm:input_type -> rpc.ByNameRequest
	8,  // 5: rpc.UserService.SearchUser:input_type -> rpc.ByNameRequest
	8,  // 6: rpc.UserService.SearchUserGroup:input_type -> rpc.ByNameRequest
	11, // 7: rpc.RoleService.ListUserAndUserGroup:input_type -> rpc.ByRoleAndAppRequest
	12, // 8: rpc.RoleService.UpdateRole:input_type -> rpc.ByEventRequest
	13, // 9: rpc.RoleService.CreateRole:input_type -> rpc.WithAppInfoRequest
	13, // 10: rpc.RoleService.DeleteRole:input_type -> rpc.WithAppInfoRequest
	12, // 11: rpc.RoleService.UpdateUserGroupRole:input_type -> rpc.ByEventRequest
	2,  // 12: rpc.PermService.CheckPerm:output_type -> rpc.CheckPermResponse
	7,  // 13: rpc.PermService.ListPerm:output_type -> rpc.ListPermResponse
	9,  // 14: rpc.UserService.SearchUser:output_type -> rpc.SearchUserResponse
	10, // 15: rpc.UserService.SearchUserGroup:output_type -> rpc.SearchUserGroupResponse
	15, // 16: rpc.RoleService.ListUserAndUserGroup:output_type -> rpc.ListUserAndUserGroupResponse
	19, // 17: rpc.RoleService.UpdateRole:output_type -> common.SimpleJsonResponse
	19, // 18: rpc.RoleService.CreateRole:output_type -> common.SimpleJsonResponse
	19, // 19: rpc.RoleService.DeleteRole:output_type -> common.SimpleJsonResponse
	19, // 20: rpc.RoleService.UpdateUserGroupRole:output_type -> common.SimpleJsonResponse
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_src_grpc_auth_proto_init() }
func file_src_grpc_auth_proto_init() {
	if File_src_grpc_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_grpc_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByHttpIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByHttpIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermOk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermOK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPermResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByRoleAndAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithAppInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserAndUserGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_grpc_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_src_grpc_auth_proto_goTypes,
		DependencyIndexes: file_src_grpc_auth_proto_depIdxs,
		MessageInfos:      file_src_grpc_auth_proto_msgTypes,
	}.Build()
	File_src_grpc_auth_proto = out.File
	file_src_grpc_auth_proto_rawDesc = nil
	file_src_grpc_auth_proto_goTypes = nil
	file_src_grpc_auth_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PermServiceClient is the client API for PermService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PermServiceClient interface {
	// DISCUSSION
	// style 1
	// CheckPermission -> CheckPerm -> Check
	// 在PermService下的Check，自然带有 CheckPerm的意思，所以Perm可以省略
	// 但是加上的话，读起来会更连贯, 准确
	CheckPerm(ctx context.Context, in *ByHttpIdentityRequest, opts ...grpc.CallOption) (*CheckPermResponse, error)
	ListPerm(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*ListPermResponse, error)
}

type permServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPermServiceClient(cc grpc.ClientConnInterface) PermServiceClient {
	return &permServiceClient{cc}
}

func (c *permServiceClient) CheckPerm(ctx context.Context, in *ByHttpIdentityRequest, opts ...grpc.CallOption) (*CheckPermResponse, error) {
	out := new(CheckPermResponse)
	err := c.cc.Invoke(ctx, "/rpc.PermService/CheckPerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permServiceClient) ListPerm(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*ListPermResponse, error) {
	out := new(ListPermResponse)
	err := c.cc.Invoke(ctx, "/rpc.PermService/ListPerm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PermServiceServer is the server API for PermService service.
type PermServiceServer interface {
	// DISCUSSION
	// style 1
	// CheckPermission -> CheckPerm -> Check
	// 在PermService下的Check，自然带有 CheckPerm的意思，所以Perm可以省略
	// 但是加上的话，读起来会更连贯, 准确
	CheckPerm(context.Context, *ByHttpIdentityRequest) (*CheckPermResponse, error)
	ListPerm(context.Context, *ByNameRequest) (*ListPermResponse, error)
}

// UnimplementedPermServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPermServiceServer struct {
}

func (*UnimplementedPermServiceServer) CheckPerm(context.Context, *ByHttpIdentityRequest) (*CheckPermResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPerm not implemented")
}
func (*UnimplementedPermServiceServer) ListPerm(context.Context, *ByNameRequest) (*ListPermResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPerm not implemented")
}

func RegisterPermServiceServer(s *grpc.Server, srv PermServiceServer) {
	s.RegisterService(&_PermService_serviceDesc, srv)
}

func _PermService_CheckPerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByHttpIdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermServiceServer).CheckPerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PermService/CheckPerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermServiceServer).CheckPerm(ctx, req.(*ByHttpIdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermService_ListPerm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermServiceServer).ListPerm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PermService/ListPerm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermServiceServer).ListPerm(ctx, req.(*ByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PermService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.PermService",
	HandlerType: (*PermServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckPerm",
			Handler:    _PermService_CheckPerm_Handler,
		},
		{
			MethodName: "ListPerm",
			Handler:    _PermService_ListPerm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/auth.proto",
}

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	// 根据用户名字模糊查询用户
	SearchUser(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*SearchUserResponse, error)
	// 根据用户组名模糊查询
	SearchUserGroup(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*SearchUserGroupResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) SearchUser(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*SearchUserResponse, error) {
	out := new(SearchUserResponse)
	err := c.cc.Invoke(ctx, "/rpc.UserService/SearchUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SearchUserGroup(ctx context.Context, in *ByNameRequest, opts ...grpc.CallOption) (*SearchUserGroupResponse, error) {
	out := new(SearchUserGroupResponse)
	err := c.cc.Invoke(ctx, "/rpc.UserService/SearchUserGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	// 根据用户名字模糊查询用户
	SearchUser(context.Context, *ByNameRequest) (*SearchUserResponse, error)
	// 根据用户组名模糊查询
	SearchUserGroup(context.Context, *ByNameRequest) (*SearchUserGroupResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) SearchUser(context.Context, *ByNameRequest) (*SearchUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUser not implemented")
}
func (*UnimplementedUserServiceServer) SearchUserGroup(context.Context, *ByNameRequest) (*SearchUserGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUserGroup not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_SearchUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SearchUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/SearchUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SearchUser(ctx, req.(*ByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SearchUserGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SearchUserGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UserService/SearchUserGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SearchUserGroup(ctx, req.(*ByNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchUser",
			Handler:    _UserService_SearchUser_Handler,
		},
		{
			MethodName: "SearchUserGroup",
			Handler:    _UserService_SearchUserGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/auth.proto",
}

// RoleServiceClient is the client API for RoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoleServiceClient interface {
	// 根据服务名和用户角色展示用户和用户组信息
	ListUserAndUserGroup(ctx context.Context, in *ByRoleAndAppRequest, opts ...grpc.CallOption) (*ListUserAndUserGroupResponse, error)
	// 更新用户请求权限
	UpdateRole(ctx context.Context, in *ByEventRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	CreateRole(ctx context.Context, in *WithAppInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	DeleteRole(ctx context.Context, in *WithAppInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	UpdateUserGroupRole(ctx context.Context, in *ByEventRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
}

type roleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoleServiceClient(cc grpc.ClientConnInterface) RoleServiceClient {
	return &roleServiceClient{cc}
}

func (c *roleServiceClient) ListUserAndUserGroup(ctx context.Context, in *ByRoleAndAppRequest, opts ...grpc.CallOption) (*ListUserAndUserGroupResponse, error) {
	out := new(ListUserAndUserGroupResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/ListUserAndUserGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdateRole(ctx context.Context, in *ByEventRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/UpdateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) CreateRole(ctx context.Context, in *WithAppInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteRole(ctx context.Context, in *WithAppInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/DeleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) UpdateUserGroupRole(ctx context.Context, in *ByEventRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.RoleService/UpdateUserGroupRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoleServiceServer is the server API for RoleService service.
type RoleServiceServer interface {
	// 根据服务名和用户角色展示用户和用户组信息
	ListUserAndUserGroup(context.Context, *ByRoleAndAppRequest) (*ListUserAndUserGroupResponse, error)
	// 更新用户请求权限
	UpdateRole(context.Context, *ByEventRequest) (*common.SimpleJsonResponse, error)
	CreateRole(context.Context, *WithAppInfoRequest) (*common.SimpleJsonResponse, error)
	DeleteRole(context.Context, *WithAppInfoRequest) (*common.SimpleJsonResponse, error)
	UpdateUserGroupRole(context.Context, *ByEventRequest) (*common.SimpleJsonResponse, error)
}

// UnimplementedRoleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoleServiceServer struct {
}

func (*UnimplementedRoleServiceServer) ListUserAndUserGroup(context.Context, *ByRoleAndAppRequest) (*ListUserAndUserGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUserAndUserGroup not implemented")
}
func (*UnimplementedRoleServiceServer) UpdateRole(context.Context, *ByEventRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRole not implemented")
}
func (*UnimplementedRoleServiceServer) CreateRole(context.Context, *WithAppInfoRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedRoleServiceServer) DeleteRole(context.Context, *WithAppInfoRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (*UnimplementedRoleServiceServer) UpdateUserGroupRole(context.Context, *ByEventRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserGroupRole not implemented")
}

func RegisterRoleServiceServer(s *grpc.Server, srv RoleServiceServer) {
	s.RegisterService(&_RoleService_serviceDesc, srv)
}

func _RoleService_ListUserAndUserGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByRoleAndAppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).ListUserAndUserGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/ListUserAndUserGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).ListUserAndUserGroup(ctx, req.(*ByRoleAndAppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).UpdateRole(ctx, req.(*ByEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithAppInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).CreateRole(ctx, req.(*WithAppInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithAppInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteRole(ctx, req.(*WithAppInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_UpdateUserGroupRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).UpdateUserGroupRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RoleService/UpdateUserGroupRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).UpdateUserGroupRole(ctx, req.(*ByEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.RoleService",
	HandlerType: (*RoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListUserAndUserGroup",
			Handler:    _RoleService_ListUserAndUserGroup_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _RoleService_UpdateRole_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _RoleService_CreateRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _RoleService_DeleteRole_Handler,
		},
		{
			MethodName: "UpdateUserGroupRole",
			Handler:    _RoleService_UpdateUserGroupRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/auth.proto",
}
