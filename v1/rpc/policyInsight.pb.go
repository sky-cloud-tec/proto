// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/grpc/policyInsight.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AnalyzeState int32

const (
	AnalyzeState_SUCCESS AnalyzeState = 0
	AnalyzeState_ERROR   AnalyzeState = 1
)

var AnalyzeState_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR",
}

var AnalyzeState_value = map[string]int32{
	"SUCCESS": 0,
	"ERROR":   1,
}

func (x AnalyzeState) String() string {
	return proto.EnumName(AnalyzeState_name, int32(x))
}

func (AnalyzeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{0}
}

type MergeStrategy int32

const (
	// 根据连续性合并
	// 比如: 80, 81, 82, 83, 84 是连续的，可以合并成 80-84
	MergeStrategy_CONSEQUENT MergeStrategy = 0
	// 根据最长公共前缀合并
	// 比如: 192.168.1.1, 192.168.1.34, 可以合并成 192.168.1.0/24
	MergeStrategy_LPM MergeStrategy = 20
)

var MergeStrategy_name = map[int32]string{
	0:  "CONSEQUENT",
	20: "LPM",
}

var MergeStrategy_value = map[string]int32{
	"CONSEQUENT": 0,
	"LPM":        20,
}

func (x MergeStrategy) String() string {
	return proto.EnumName(MergeStrategy_name, int32(x))
}

func (MergeStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{1}
}

type ByDeviceRequest struct {
	Device               string   `protobuf:"bytes,10,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByDeviceRequest) Reset()         { *m = ByDeviceRequest{} }
func (m *ByDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*ByDeviceRequest) ProtoMessage()    {}
func (*ByDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{0}
}

func (m *ByDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByDeviceRequest.Unmarshal(m, b)
}
func (m *ByDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByDeviceRequest.Marshal(b, m, deterministic)
}
func (m *ByDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByDeviceRequest.Merge(m, src)
}
func (m *ByDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_ByDeviceRequest.Size(m)
}
func (m *ByDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByDeviceRequest proto.InternalMessageInfo

func (m *ByDeviceRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type AnalyzeResponse struct {
	Message              string       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	State                AnalyzeState `protobuf:"varint,2,opt,name=state,proto3,enum=rpc.AnalyzeState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AnalyzeResponse) Reset()         { *m = AnalyzeResponse{} }
func (m *AnalyzeResponse) String() string { return proto.CompactTextString(m) }
func (*AnalyzeResponse) ProtoMessage()    {}
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{1}
}

func (m *AnalyzeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeResponse.Unmarshal(m, b)
}
func (m *AnalyzeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeResponse.Marshal(b, m, deterministic)
}
func (m *AnalyzeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeResponse.Merge(m, src)
}
func (m *AnalyzeResponse) XXX_Size() int {
	return xxx_messageInfo_AnalyzeResponse.Size(m)
}
func (m *AnalyzeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeResponse proto.InternalMessageInfo

func (m *AnalyzeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AnalyzeResponse) GetState() AnalyzeState {
	if m != nil {
		return m.State
	}
	return AnalyzeState_SUCCESS
}

type Quintuple struct {
	// ipv4
	SrcAddr              uint32   `protobuf:"varint,10,opt,name=src_addr,json=srcAddr,proto3" json:"src_addr,omitempty"`
	DstAddr              uint32   `protobuf:"varint,20,opt,name=dst_addr,json=dstAddr,proto3" json:"dst_addr,omitempty"`
	Protocol             uint32   `protobuf:"varint,30,opt,name=protocol,proto3" json:"protocol,omitempty"`
	SrcPort              uint32   `protobuf:"varint,40,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort              uint32   `protobuf:"varint,50,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Quintuple) Reset()         { *m = Quintuple{} }
func (m *Quintuple) String() string { return proto.CompactTextString(m) }
func (*Quintuple) ProtoMessage()    {}
func (*Quintuple) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{2}
}

func (m *Quintuple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quintuple.Unmarshal(m, b)
}
func (m *Quintuple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quintuple.Marshal(b, m, deterministic)
}
func (m *Quintuple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quintuple.Merge(m, src)
}
func (m *Quintuple) XXX_Size() int {
	return xxx_messageInfo_Quintuple.Size(m)
}
func (m *Quintuple) XXX_DiscardUnknown() {
	xxx_messageInfo_Quintuple.DiscardUnknown(m)
}

var xxx_messageInfo_Quintuple proto.InternalMessageInfo

func (m *Quintuple) GetSrcAddr() uint32 {
	if m != nil {
		return m.SrcAddr
	}
	return 0
}

func (m *Quintuple) GetDstAddr() uint32 {
	if m != nil {
		return m.DstAddr
	}
	return 0
}

func (m *Quintuple) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *Quintuple) GetSrcPort() uint32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *Quintuple) GetDstPort() uint32 {
	if m != nil {
		return m.DstPort
	}
	return 0
}

type Weight struct {
	WSrcAddr             float32  `protobuf:"fixed32,21,opt,name=w_src_addr,json=wSrcAddr,proto3" json:"w_src_addr,omitempty"`
	WDstAddr             float32  `protobuf:"fixed32,22,opt,name=w_dst_addr,json=wDstAddr,proto3" json:"w_dst_addr,omitempty"`
	WProtocol            float32  `protobuf:"fixed32,23,opt,name=w_protocol,json=wProtocol,proto3" json:"w_protocol,omitempty"`
	WSrcPort             float32  `protobuf:"fixed32,24,opt,name=w_src_port,json=wSrcPort,proto3" json:"w_src_port,omitempty"`
	WDstPort             float32  `protobuf:"fixed32,25,opt,name=w_dst_port,json=wDstPort,proto3" json:"w_dst_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Weight) Reset()         { *m = Weight{} }
func (m *Weight) String() string { return proto.CompactTextString(m) }
func (*Weight) ProtoMessage()    {}
func (*Weight) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{3}
}

func (m *Weight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Weight.Unmarshal(m, b)
}
func (m *Weight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Weight.Marshal(b, m, deterministic)
}
func (m *Weight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Weight.Merge(m, src)
}
func (m *Weight) XXX_Size() int {
	return xxx_messageInfo_Weight.Size(m)
}
func (m *Weight) XXX_DiscardUnknown() {
	xxx_messageInfo_Weight.DiscardUnknown(m)
}

var xxx_messageInfo_Weight proto.InternalMessageInfo

func (m *Weight) GetWSrcAddr() float32 {
	if m != nil {
		return m.WSrcAddr
	}
	return 0
}

func (m *Weight) GetWDstAddr() float32 {
	if m != nil {
		return m.WDstAddr
	}
	return 0
}

func (m *Weight) GetWProtocol() float32 {
	if m != nil {
		return m.WProtocol
	}
	return 0
}

func (m *Weight) GetWSrcPort() float32 {
	if m != nil {
		return m.WSrcPort
	}
	return 0
}

func (m *Weight) GetWDstPort() float32 {
	if m != nil {
		return m.WDstPort
	}
	return 0
}

type BySessionsAndParameters struct {
	Sessions []*Quintuple `protobuf:"bytes,10,rep,name=sessions,proto3" json:"sessions,omitempty"`
	Cluster  int32        `protobuf:"varint,20,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Weight   *Weight      `protobuf:"bytes,30,opt,name=weight,proto3" json:"weight,omitempty"`
	// 合并策略 默认使用连续性合并
	Strategy             MergeStrategy `protobuf:"varint,40,opt,name=strategy,proto3,enum=rpc.MergeStrategy" json:"strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BySessionsAndParameters) Reset()         { *m = BySessionsAndParameters{} }
func (m *BySessionsAndParameters) String() string { return proto.CompactTextString(m) }
func (*BySessionsAndParameters) ProtoMessage()    {}
func (*BySessionsAndParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{4}
}

func (m *BySessionsAndParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BySessionsAndParameters.Unmarshal(m, b)
}
func (m *BySessionsAndParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BySessionsAndParameters.Marshal(b, m, deterministic)
}
func (m *BySessionsAndParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BySessionsAndParameters.Merge(m, src)
}
func (m *BySessionsAndParameters) XXX_Size() int {
	return xxx_messageInfo_BySessionsAndParameters.Size(m)
}
func (m *BySessionsAndParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_BySessionsAndParameters.DiscardUnknown(m)
}

var xxx_messageInfo_BySessionsAndParameters proto.InternalMessageInfo

func (m *BySessionsAndParameters) GetSessions() []*Quintuple {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func (m *BySessionsAndParameters) GetCluster() int32 {
	if m != nil {
		return m.Cluster
	}
	return 0
}

func (m *BySessionsAndParameters) GetWeight() *Weight {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *BySessionsAndParameters) GetStrategy() MergeStrategy {
	if m != nil {
		return m.Strategy
	}
	return MergeStrategy_CONSEQUENT
}

type Observations struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Observations) Reset()         { *m = Observations{} }
func (m *Observations) String() string { return proto.CompactTextString(m) }
func (*Observations) ProtoMessage()    {}
func (*Observations) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{5}
}

func (m *Observations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Observations.Unmarshal(m, b)
}
func (m *Observations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Observations.Marshal(b, m, deterministic)
}
func (m *Observations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Observations.Merge(m, src)
}
func (m *Observations) XXX_Size() int {
	return xxx_messageInfo_Observations.Size(m)
}
func (m *Observations) XXX_DiscardUnknown() {
	xxx_messageInfo_Observations.DiscardUnknown(m)
}

var xxx_messageInfo_Observations proto.InternalMessageInfo

type Cluster struct {
	Center               *Quintuple   `protobuf:"bytes,10,opt,name=center,proto3" json:"center,omitempty"`
	Observations         []*Quintuple `protobuf:"bytes,30,rep,name=observations,proto3" json:"observations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{6}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetCenter() *Quintuple {
	if m != nil {
		return m.Center
	}
	return nil
}

func (m *Cluster) GetObservations() []*Quintuple {
	if m != nil {
		return m.Observations
	}
	return nil
}

type PermissivePolicyClusteringResponse struct {
	Clusters             []*Cluster `protobuf:"bytes,10,rep,name=clusters,proto3" json:"clusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PermissivePolicyClusteringResponse) Reset()         { *m = PermissivePolicyClusteringResponse{} }
func (m *PermissivePolicyClusteringResponse) String() string { return proto.CompactTextString(m) }
func (*PermissivePolicyClusteringResponse) ProtoMessage()    {}
func (*PermissivePolicyClusteringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf0e9c862eb5e5a4, []int{7}
}

func (m *PermissivePolicyClusteringResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissivePolicyClusteringResponse.Unmarshal(m, b)
}
func (m *PermissivePolicyClusteringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissivePolicyClusteringResponse.Marshal(b, m, deterministic)
}
func (m *PermissivePolicyClusteringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissivePolicyClusteringResponse.Merge(m, src)
}
func (m *PermissivePolicyClusteringResponse) XXX_Size() int {
	return xxx_messageInfo_PermissivePolicyClusteringResponse.Size(m)
}
func (m *PermissivePolicyClusteringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissivePolicyClusteringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PermissivePolicyClusteringResponse proto.InternalMessageInfo

func (m *PermissivePolicyClusteringResponse) GetClusters() []*Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func init() {
	proto.RegisterEnum("rpc.AnalyzeState", AnalyzeState_name, AnalyzeState_value)
	proto.RegisterEnum("rpc.MergeStrategy", MergeStrategy_name, MergeStrategy_value)
	proto.RegisterType((*ByDeviceRequest)(nil), "rpc.ByDeviceRequest")
	proto.RegisterType((*AnalyzeResponse)(nil), "rpc.AnalyzeResponse")
	proto.RegisterType((*Quintuple)(nil), "rpc.Quintuple")
	proto.RegisterType((*Weight)(nil), "rpc.Weight")
	proto.RegisterType((*BySessionsAndParameters)(nil), "rpc.BySessionsAndParameters")
	proto.RegisterType((*Observations)(nil), "rpc.Observations")
	proto.RegisterType((*Cluster)(nil), "rpc.Cluster")
	proto.RegisterType((*PermissivePolicyClusteringResponse)(nil), "rpc.PermissivePolicyClusteringResponse")
}

func init() { proto.RegisterFile("src/grpc/policyInsight.proto", fileDescriptor_bf0e9c862eb5e5a4) }

var fileDescriptor_bf0e9c862eb5e5a4 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdf, 0x4e, 0xdb, 0x4a,
	0x10, 0xc6, 0x63, 0x10, 0xf9, 0x33, 0x09, 0x21, 0x67, 0x95, 0x03, 0x26, 0xe2, 0xa0, 0xc8, 0x47,
	0x85, 0x14, 0x89, 0x44, 0x75, 0x2f, 0x7a, 0x59, 0x41, 0xc8, 0x45, 0xa5, 0x42, 0x82, 0x0d, 0xaa,
	0xd4, 0x1b, 0xe4, 0xac, 0x47, 0xc1, 0x25, 0xb1, 0xdd, 0xdd, 0x4d, 0xa2, 0xd0, 0xc7, 0xe8, 0x03,
	0xf4, 0x25, 0xfa, 0x80, 0x95, 0xc7, 0x6b, 0xf3, 0x47, 0x54, 0xbd, 0xe9, 0xe5, 0xec, 0x6f, 0xf2,
	0xcd, 0x37, 0x5f, 0x76, 0x0d, 0x7b, 0x52, 0xf0, 0xde, 0x44, 0xc4, 0xbc, 0x17, 0x47, 0xd3, 0x80,
	0xaf, 0x3e, 0x84, 0x32, 0x98, 0xdc, 0xaa, 0x6e, 0x2c, 0x22, 0x15, 0xb1, 0x75, 0x11, 0x73, 0xeb,
	0x35, 0x6c, 0x9d, 0xae, 0xce, 0x70, 0x11, 0x70, 0x74, 0xf0, 0xeb, 0x1c, 0xa5, 0x62, 0xdb, 0x50,
	0xf4, 0xe9, 0xc0, 0x84, 0xb6, 0xd1, 0xa9, 0x38, 0xba, 0xb2, 0xae, 0x60, 0xeb, 0x24, 0xf4, 0xa6,
	0xab, 0x7b, 0x74, 0x50, 0xc6, 0x51, 0x28, 0x91, 0x99, 0x50, 0x9a, 0xa1, 0x94, 0xde, 0x04, 0x4d,
	0x83, 0x7a, 0xb3, 0x92, 0x1d, 0xc2, 0x86, 0x54, 0x9e, 0x42, 0x73, 0xad, 0x6d, 0x74, 0xea, 0xf6,
	0x3f, 0x5d, 0x11, 0xf3, 0xae, 0xfe, 0xb9, 0x9b, 0x00, 0x27, 0xe5, 0xd6, 0x77, 0x03, 0x2a, 0x97,
	0xf3, 0x20, 0x54, 0xf3, 0x78, 0x8a, 0x6c, 0x17, 0xca, 0x52, 0xf0, 0x1b, 0xcf, 0xf7, 0x05, 0x4d,
	0xdf, 0x74, 0x4a, 0x52, 0xf0, 0x13, 0xdf, 0x17, 0x09, 0xf2, 0xa5, 0x4a, 0x51, 0x33, 0x45, 0xbe,
	0x54, 0x84, 0x5a, 0x50, 0xa6, 0x95, 0x78, 0x34, 0x35, 0xf7, 0x09, 0xe5, 0x75, 0xa6, 0x18, 0x47,
	0x42, 0x99, 0x9d, 0x5c, 0x71, 0x14, 0x09, 0x95, 0x29, 0x12, 0xb2, 0x73, 0xc5, 0x04, 0x59, 0x3f,
	0x0c, 0x28, 0x7e, 0xc2, 0x24, 0x2c, 0xb6, 0x07, 0xb0, 0xbc, 0xc9, 0x4d, 0xfd, 0xdb, 0x36, 0x3a,
	0x6b, 0x4e, 0x79, 0xe9, 0x6a, 0x57, 0x44, 0x73, 0x5f, 0xdb, 0x9a, 0x9e, 0x69, 0x63, 0xff, 0x25,
	0x34, 0xb7, 0xb6, 0x43, 0xb4, 0xb2, 0x1c, 0x65, 0xde, 0x72, 0x69, 0xb2, 0x60, 0x3e, 0x48, 0x93,
	0xbd, 0x5c, 0x9a, 0xe8, 0xee, 0x83, 0x34, 0x39, 0xfc, 0x69, 0xc0, 0xce, 0xe9, 0xca, 0x45, 0x29,
	0x83, 0x28, 0x94, 0x27, 0xa1, 0x3f, 0xf2, 0x84, 0x37, 0x43, 0x85, 0x42, 0xb2, 0x23, 0x28, 0x4b,
	0x0d, 0x4c, 0x68, 0xaf, 0x77, 0xaa, 0x76, 0x9d, 0xf2, 0xcf, 0x73, 0x76, 0x72, 0x9e, 0xfc, 0x85,
	0x7c, 0x3a, 0x97, 0x0a, 0xd3, 0x54, 0x37, 0x9c, 0xac, 0x64, 0xff, 0x43, 0x71, 0x49, 0x11, 0x50,
	0xa6, 0x55, 0xbb, 0x4a, 0x1a, 0x69, 0x2a, 0x8e, 0x46, 0xac, 0x0b, 0x65, 0xa9, 0x84, 0xa7, 0x70,
	0xb2, 0xa2, 0x78, 0xeb, 0x36, 0xa3, 0xb6, 0x73, 0x14, 0x13, 0x74, 0x35, 0x71, 0xf2, 0x1e, 0xab,
	0x0e, 0xb5, 0xe1, 0x58, 0xa2, 0x58, 0x78, 0x2a, 0x19, 0x6f, 0x21, 0x94, 0xfa, 0x7a, 0xde, 0x01,
	0x14, 0x39, 0x86, 0x89, 0x11, 0xa0, 0x79, 0xcf, 0x3d, 0x6b, 0xca, 0x6c, 0xa8, 0x45, 0x8f, 0x24,
	0xcc, 0xfd, 0x17, 0x37, 0x7c, 0xd2, 0x63, 0x5d, 0x80, 0x35, 0x42, 0x31, 0x0b, 0xa4, 0x0c, 0x16,
	0x38, 0xa2, 0xc7, 0xa0, 0xc7, 0x06, 0xe1, 0x24, 0xbf, 0xce, 0x1d, 0x28, 0xeb, 0xe5, 0xb3, 0xdc,
	0x6a, 0xa4, 0xaa, 0x5b, 0x9d, 0x9c, 0x1e, 0x1d, 0x40, 0xed, 0xf1, 0x65, 0x66, 0x55, 0x28, 0xb9,
	0xd7, 0xfd, 0xfe, 0xc0, 0x75, 0x1b, 0x05, 0x56, 0x81, 0x8d, 0x81, 0xe3, 0x0c, 0x9d, 0x86, 0x71,
	0xd4, 0x81, 0xcd, 0x27, 0x49, 0xb0, 0x3a, 0x40, 0x7f, 0x78, 0xe1, 0x0e, 0x2e, 0xaf, 0x07, 0x17,
	0x57, 0x8d, 0x02, 0x2b, 0xc1, 0xfa, 0xc7, 0xd1, 0x79, 0xa3, 0x69, 0x0f, 0xa1, 0x39, 0x1c, 0x7f,
	0x41, 0xae, 0x32, 0x5d, 0x14, 0xc9, 0xab, 0x63, 0xef, 0xa0, 0xa4, 0x4f, 0x58, 0x93, 0xcc, 0x3c,
	0x7b, 0xae, 0xad, 0xe6, 0xe3, 0xa7, 0x95, 0xad, 0x62, 0x15, 0xec, 0x6f, 0xc0, 0xd2, 0x45, 0x87,
	0xb1, 0x0a, 0x66, 0xc1, 0x3d, 0x25, 0xc1, 0x10, 0x5a, 0xbf, 0x0f, 0x82, 0xed, 0xe9, 0x09, 0x2f,
	0x5e, 0xab, 0xd6, 0x21, 0xd1, 0x3f, 0xe7, 0x68, 0x15, 0x92, 0x6d, 0x52, 0xfa, 0x97, 0xb6, 0x39,
	0x7d, 0x0f, 0xdb, 0x21, 0xaa, 0xae, 0xbc, 0x5b, 0xf1, 0x69, 0x34, 0xf7, 0xd3, 0x4f, 0x58, 0xd2,
	0xfb, 0xf9, 0xd5, 0x24, 0x50, 0xb7, 0xf3, 0x71, 0x97, 0x47, 0xb3, 0x9e, 0xbc, 0x5b, 0x1d, 0x13,
	0x3f, 0x56, 0xc8, 0x7b, 0xd4, 0xd3, 0x5b, 0xbc, 0xe9, 0x89, 0x98, 0x8f, 0x8b, 0x54, 0xbd, 0xfd,
	0x15, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x8d, 0x12, 0x62, 0x14, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ObjectAnalyzeServiceClient is the client API for ObjectAnalyzeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ObjectAnalyzeServiceClient interface {
	Analyze(ctx context.Context, in *ByDeviceRequest, opts ...grpc.CallOption) (*AnalyzeResponse, error)
}

type objectAnalyzeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewObjectAnalyzeServiceClient(cc grpc.ClientConnInterface) ObjectAnalyzeServiceClient {
	return &objectAnalyzeServiceClient{cc}
}

func (c *objectAnalyzeServiceClient) Analyze(ctx context.Context, in *ByDeviceRequest, opts ...grpc.CallOption) (*AnalyzeResponse, error) {
	out := new(AnalyzeResponse)
	err := c.cc.Invoke(ctx, "/rpc.ObjectAnalyzeService/Analyze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ObjectAnalyzeServiceServer is the server API for ObjectAnalyzeService service.
type ObjectAnalyzeServiceServer interface {
	Analyze(context.Context, *ByDeviceRequest) (*AnalyzeResponse, error)
}

// UnimplementedObjectAnalyzeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedObjectAnalyzeServiceServer struct {
}

func (*UnimplementedObjectAnalyzeServiceServer) Analyze(ctx context.Context, req *ByDeviceRequest) (*AnalyzeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Analyze not implemented")
}

func RegisterObjectAnalyzeServiceServer(s *grpc.Server, srv ObjectAnalyzeServiceServer) {
	s.RegisterService(&_ObjectAnalyzeService_serviceDesc, srv)
}

func _ObjectAnalyzeService_Analyze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ObjectAnalyzeServiceServer).Analyze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ObjectAnalyzeService/Analyze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ObjectAnalyzeServiceServer).Analyze(ctx, req.(*ByDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ObjectAnalyzeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.ObjectAnalyzeService",
	HandlerType: (*ObjectAnalyzeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Analyze",
			Handler:    _ObjectAnalyzeService_Analyze_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/policyInsight.proto",
}

// PolicyOptimizationClient is the client API for PolicyOptimization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PolicyOptimizationClient interface {
	PermissivePolicyClustering(ctx context.Context, in *BySessionsAndParameters, opts ...grpc.CallOption) (*PermissivePolicyClusteringResponse, error)
}

type policyOptimizationClient struct {
	cc grpc.ClientConnInterface
}

func NewPolicyOptimizationClient(cc grpc.ClientConnInterface) PolicyOptimizationClient {
	return &policyOptimizationClient{cc}
}

func (c *policyOptimizationClient) PermissivePolicyClustering(ctx context.Context, in *BySessionsAndParameters, opts ...grpc.CallOption) (*PermissivePolicyClusteringResponse, error) {
	out := new(PermissivePolicyClusteringResponse)
	err := c.cc.Invoke(ctx, "/rpc.PolicyOptimization/PermissivePolicyClustering", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PolicyOptimizationServer is the server API for PolicyOptimization service.
type PolicyOptimizationServer interface {
	PermissivePolicyClustering(context.Context, *BySessionsAndParameters) (*PermissivePolicyClusteringResponse, error)
}

// UnimplementedPolicyOptimizationServer can be embedded to have forward compatible implementations.
type UnimplementedPolicyOptimizationServer struct {
}

func (*UnimplementedPolicyOptimizationServer) PermissivePolicyClustering(ctx context.Context, req *BySessionsAndParameters) (*PermissivePolicyClusteringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermissivePolicyClustering not implemented")
}

func RegisterPolicyOptimizationServer(s *grpc.Server, srv PolicyOptimizationServer) {
	s.RegisterService(&_PolicyOptimization_serviceDesc, srv)
}

func _PolicyOptimization_PermissivePolicyClustering_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BySessionsAndParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyOptimizationServer).PermissivePolicyClustering(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PolicyOptimization/PermissivePolicyClustering",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyOptimizationServer).PermissivePolicyClustering(ctx, req.(*BySessionsAndParameters))
	}
	return interceptor(ctx, in, info, handler)
}

var _PolicyOptimization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.PolicyOptimization",
	HandlerType: (*PolicyOptimizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PermissivePolicyClustering",
			Handler:    _PolicyOptimization_PermissivePolicyClustering_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/policyInsight.proto",
}

// PolicyAnalyzeServiceClient is the client API for PolicyAnalyzeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PolicyAnalyzeServiceClient interface {
	Analyze(ctx context.Context, in *ByDeviceRequest, opts ...grpc.CallOption) (*AnalyzeResponse, error)
}

type policyAnalyzeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPolicyAnalyzeServiceClient(cc grpc.ClientConnInterface) PolicyAnalyzeServiceClient {
	return &policyAnalyzeServiceClient{cc}
}

func (c *policyAnalyzeServiceClient) Analyze(ctx context.Context, in *ByDeviceRequest, opts ...grpc.CallOption) (*AnalyzeResponse, error) {
	out := new(AnalyzeResponse)
	err := c.cc.Invoke(ctx, "/rpc.PolicyAnalyzeService/Analyze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PolicyAnalyzeServiceServer is the server API for PolicyAnalyzeService service.
type PolicyAnalyzeServiceServer interface {
	Analyze(context.Context, *ByDeviceRequest) (*AnalyzeResponse, error)
}

// UnimplementedPolicyAnalyzeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPolicyAnalyzeServiceServer struct {
}

func (*UnimplementedPolicyAnalyzeServiceServer) Analyze(ctx context.Context, req *ByDeviceRequest) (*AnalyzeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Analyze not implemented")
}

func RegisterPolicyAnalyzeServiceServer(s *grpc.Server, srv PolicyAnalyzeServiceServer) {
	s.RegisterService(&_PolicyAnalyzeService_serviceDesc, srv)
}

func _PolicyAnalyzeService_Analyze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyAnalyzeServiceServer).Analyze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.PolicyAnalyzeService/Analyze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyAnalyzeServiceServer).Analyze(ctx, req.(*ByDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PolicyAnalyzeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.PolicyAnalyzeService",
	HandlerType: (*PolicyAnalyzeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Analyze",
			Handler:    _PolicyAnalyzeService_Analyze_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/policyInsight.proto",
}
