// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: src/grpc/policyInsight.proto

package rpc

import (
	common "github.com/sky-cloud-tec/proto/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnalyzeState int32

const (
	AnalyzeState_SUCCESS AnalyzeState = 0
	AnalyzeState_ERROR   AnalyzeState = 1
)

// Enum value maps for AnalyzeState.
var (
	AnalyzeState_name = map[int32]string{
		0: "SUCCESS",
		1: "ERROR",
	}
	AnalyzeState_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   1,
	}
)

func (x AnalyzeState) Enum() *AnalyzeState {
	p := new(AnalyzeState)
	*p = x
	return p
}

func (x AnalyzeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnalyzeState) Descriptor() protoreflect.EnumDescriptor {
	return file_src_grpc_policyInsight_proto_enumTypes[0].Descriptor()
}

func (AnalyzeState) Type() protoreflect.EnumType {
	return &file_src_grpc_policyInsight_proto_enumTypes[0]
}

func (x AnalyzeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnalyzeState.Descriptor instead.
func (AnalyzeState) EnumDescriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{0}
}

type MergeStrategy int32

const (
	// 根据连续性合并
	// 比如: 80, 81, 82, 83, 84 是连续的，可以合并成 80-84
	MergeStrategy_CONSEQUENT MergeStrategy = 0
	// 根据最长公共前缀合并
	// 比如: 192.168.1.1, 192.168.1.34, 可以合并成 192.168.1.0/24
	MergeStrategy_LPM MergeStrategy = 20
)

// Enum value maps for MergeStrategy.
var (
	MergeStrategy_name = map[int32]string{
		0:  "CONSEQUENT",
		20: "LPM",
	}
	MergeStrategy_value = map[string]int32{
		"CONSEQUENT": 0,
		"LPM":        20,
	}
)

func (x MergeStrategy) Enum() *MergeStrategy {
	p := new(MergeStrategy)
	*p = x
	return p
}

func (x MergeStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MergeStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_src_grpc_policyInsight_proto_enumTypes[1].Descriptor()
}

func (MergeStrategy) Type() protoreflect.EnumType {
	return &file_src_grpc_policyInsight_proto_enumTypes[1]
}

func (x MergeStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MergeStrategy.Descriptor instead.
func (MergeStrategy) EnumDescriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{1}
}

type ByDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device string `protobuf:"bytes,10,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *ByDeviceRequest) Reset() {
	*x = ByDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_policyInsight_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByDeviceRequest) ProtoMessage() {}

func (x *ByDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_policyInsight_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByDeviceRequest.ProtoReflect.Descriptor instead.
func (*ByDeviceRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{0}
}

func (x *ByDeviceRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type AnalyzeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	State   AnalyzeState `protobuf:"varint,2,opt,name=state,proto3,enum=rpc.AnalyzeState" json:"state,omitempty"`
}

func (x *AnalyzeResponse) Reset() {
	*x = AnalyzeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_policyInsight_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse) ProtoMessage() {}

func (x *AnalyzeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_policyInsight_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{1}
}

func (x *AnalyzeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AnalyzeResponse) GetState() AnalyzeState {
	if x != nil {
		return x.State
	}
	return AnalyzeState_SUCCESS
}

type Quintuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ipv4
	SrcAddr  uint32 `protobuf:"varint,10,opt,name=src_addr,json=srcAddr,proto3" json:"src_addr,omitempty"`
	DstAddr  uint32 `protobuf:"varint,20,opt,name=dst_addr,json=dstAddr,proto3" json:"dst_addr,omitempty"`
	Protocol uint32 `protobuf:"varint,30,opt,name=protocol,proto3" json:"protocol,omitempty"`
	SrcPort  uint32 `protobuf:"varint,40,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort  uint32 `protobuf:"varint,50,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
}

func (x *Quintuple) Reset() {
	*x = Quintuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_policyInsight_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quintuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quintuple) ProtoMessage() {}

func (x *Quintuple) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_policyInsight_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quintuple.ProtoReflect.Descriptor instead.
func (*Quintuple) Descriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{2}
}

func (x *Quintuple) GetSrcAddr() uint32 {
	if x != nil {
		return x.SrcAddr
	}
	return 0
}

func (x *Quintuple) GetDstAddr() uint32 {
	if x != nil {
		return x.DstAddr
	}
	return 0
}

func (x *Quintuple) GetProtocol() uint32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *Quintuple) GetSrcPort() uint32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *Quintuple) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

type Weight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WSrcAddr  float32 `protobuf:"fixed32,21,opt,name=w_src_addr,json=wSrcAddr,proto3" json:"w_src_addr,omitempty"`
	WDstAddr  float32 `protobuf:"fixed32,22,opt,name=w_dst_addr,json=wDstAddr,proto3" json:"w_dst_addr,omitempty"`
	WProtocol float32 `protobuf:"fixed32,23,opt,name=w_protocol,json=wProtocol,proto3" json:"w_protocol,omitempty"`
	WSrcPort  float32 `protobuf:"fixed32,24,opt,name=w_src_port,json=wSrcPort,proto3" json:"w_src_port,omitempty"`
	WDstPort  float32 `protobuf:"fixed32,25,opt,name=w_dst_port,json=wDstPort,proto3" json:"w_dst_port,omitempty"`
}

func (x *Weight) Reset() {
	*x = Weight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_policyInsight_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Weight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weight) ProtoMessage() {}

func (x *Weight) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_policyInsight_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weight.ProtoReflect.Descriptor instead.
func (*Weight) Descriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{3}
}

func (x *Weight) GetWSrcAddr() float32 {
	if x != nil {
		return x.WSrcAddr
	}
	return 0
}

func (x *Weight) GetWDstAddr() float32 {
	if x != nil {
		return x.WDstAddr
	}
	return 0
}

func (x *Weight) GetWProtocol() float32 {
	if x != nil {
		return x.WProtocol
	}
	return 0
}

func (x *Weight) GetWSrcPort() float32 {
	if x != nil {
		return x.WSrcPort
	}
	return 0
}

func (x *Weight) GetWDstPort() float32 {
	if x != nil {
		return x.WDstPort
	}
	return 0
}

type BySessionsAndParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*Quintuple `protobuf:"bytes,10,rep,name=sessions,proto3" json:"sessions,omitempty"`
	Cluster  int32        `protobuf:"varint,20,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Weight   *Weight      `protobuf:"bytes,30,opt,name=weight,proto3" json:"weight,omitempty"`
	// 合并策略 默认使用连续性合并
	Strategy MergeStrategy `protobuf:"varint,40,opt,name=strategy,proto3,enum=rpc.MergeStrategy" json:"strategy,omitempty"`
}

func (x *BySessionsAndParameters) Reset() {
	*x = BySessionsAndParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_policyInsight_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BySessionsAndParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BySessionsAndParameters) ProtoMessage() {}

func (x *BySessionsAndParameters) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_policyInsight_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BySessionsAndParameters.ProtoReflect.Descriptor instead.
func (*BySessionsAndParameters) Descriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{4}
}

func (x *BySessionsAndParameters) GetSessions() []*Quintuple {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *BySessionsAndParameters) GetCluster() int32 {
	if x != nil {
		return x.Cluster
	}
	return 0
}

func (x *BySessionsAndParameters) GetWeight() *Weight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *BySessionsAndParameters) GetStrategy() MergeStrategy {
	if x != nil {
		return x.Strategy
	}
	return MergeStrategy_CONSEQUENT
}

type Observations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Observations) Reset() {
	*x = Observations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_policyInsight_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Observations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observations) ProtoMessage() {}

func (x *Observations) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_policyInsight_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observations.ProtoReflect.Descriptor instead.
func (*Observations) Descriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{5}
}

type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Center       *Quintuple   `protobuf:"bytes,10,opt,name=center,proto3" json:"center,omitempty"`
	Observations []*Quintuple `protobuf:"bytes,30,rep,name=observations,proto3" json:"observations,omitempty"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_policyInsight_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_policyInsight_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{6}
}

func (x *Cluster) GetCenter() *Quintuple {
	if x != nil {
		return x.Center
	}
	return nil
}

func (x *Cluster) GetObservations() []*Quintuple {
	if x != nil {
		return x.Observations
	}
	return nil
}

type PermissivePolicyClusteringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*Cluster `protobuf:"bytes,10,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *PermissivePolicyClusteringResponse) Reset() {
	*x = PermissivePolicyClusteringResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_policyInsight_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissivePolicyClusteringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissivePolicyClusteringResponse) ProtoMessage() {}

func (x *PermissivePolicyClusteringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_policyInsight_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissivePolicyClusteringResponse.ProtoReflect.Descriptor instead.
func (*PermissivePolicyClusteringResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_policyInsight_proto_rawDescGZIP(), []int{7}
}

func (x *PermissivePolicyClusteringResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

var File_src_grpc_policyInsight_proto protoreflect.FileDescriptor

var file_src_grpc_policyInsight_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x72, 0x70, 0x63, 0x1a, 0x15, 0x73, 0x72, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x72, 0x63, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29,
	0x0a, 0x0f, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x93, 0x01, 0x0a, 0x09, 0x51, 0x75, 0x69, 0x6e, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x72, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x73, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1c, 0x0a, 0x0a, 0x77, 0x5f, 0x73, 0x72, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x77, 0x53, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c,
	0x0a, 0x0a, 0x77, 0x5f, 0x64, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x77, 0x44, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x77, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x77, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x0a, 0x77,
	0x5f, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x77, 0x53, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x77, 0x5f, 0x64,
	0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x77,
	0x44, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x17, 0x42, 0x79, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75, 0x69, 0x6e,
	0x74, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2e,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x0e,
	0x0a, 0x0c, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x65,
	0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x51, 0x75, 0x69, 0x6e, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x0c, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x51, 0x75,
	0x69, 0x6e, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0c, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4e, 0x0a, 0x22, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2a, 0x26, 0x0a, 0x0c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x2a, 0x28, 0x0a,
	0x0d, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x0e,
	0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x50, 0x4d, 0x10, 0x14, 0x32, 0x4f, 0x0a, 0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x37, 0x0a, 0x07, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12, 0x14, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x7b, 0x0a, 0x12, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65,
	0x0a, 0x1a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x6e, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x27, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x4f, 0x0a, 0x14, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a,
	0x07, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x59, 0x0a, 0x18, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x32, 0x53, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a,
	0x07, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x0a, 0x16, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x6b,
	0x79, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x70, 0x63,
	0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6b, 0x79,
	0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x74, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_grpc_policyInsight_proto_rawDescOnce sync.Once
	file_src_grpc_policyInsight_proto_rawDescData = file_src_grpc_policyInsight_proto_rawDesc
)

func file_src_grpc_policyInsight_proto_rawDescGZIP() []byte {
	file_src_grpc_policyInsight_proto_rawDescOnce.Do(func() {
		file_src_grpc_policyInsight_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_grpc_policyInsight_proto_rawDescData)
	})
	return file_src_grpc_policyInsight_proto_rawDescData
}

var file_src_grpc_policyInsight_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_src_grpc_policyInsight_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_src_grpc_policyInsight_proto_goTypes = []interface{}{
	(AnalyzeState)(0),                          // 0: rpc.AnalyzeState
	(MergeStrategy)(0),                         // 1: rpc.MergeStrategy
	(*ByDeviceRequest)(nil),                    // 2: rpc.ByDeviceRequest
	(*AnalyzeResponse)(nil),                    // 3: rpc.AnalyzeResponse
	(*Quintuple)(nil),                          // 4: rpc.Quintuple
	(*Weight)(nil),                             // 5: rpc.Weight
	(*BySessionsAndParameters)(nil),            // 6: rpc.BySessionsAndParameters
	(*Observations)(nil),                       // 7: rpc.Observations
	(*Cluster)(nil),                            // 8: rpc.Cluster
	(*PermissivePolicyClusteringResponse)(nil), // 9: rpc.PermissivePolicyClusteringResponse
	(*ByIdRequest)(nil),                        // 10: rpc.ByIdRequest
	(*common.SimpleJsonResponse)(nil),          // 11: common.SimpleJsonResponse
}
var file_src_grpc_policyInsight_proto_depIdxs = []int32{
	0,  // 0: rpc.AnalyzeResponse.state:type_name -> rpc.AnalyzeState
	4,  // 1: rpc.BySessionsAndParameters.sessions:type_name -> rpc.Quintuple
	5,  // 2: rpc.BySessionsAndParameters.weight:type_name -> rpc.Weight
	1,  // 3: rpc.BySessionsAndParameters.strategy:type_name -> rpc.MergeStrategy
	4,  // 4: rpc.Cluster.center:type_name -> rpc.Quintuple
	4,  // 5: rpc.Cluster.observations:type_name -> rpc.Quintuple
	8,  // 6: rpc.PermissivePolicyClusteringResponse.clusters:type_name -> rpc.Cluster
	2,  // 7: rpc.ObjectAnalyzeService.Analyze:input_type -> rpc.ByDeviceRequest
	6,  // 8: rpc.PolicyOptimization.PermissivePolicyClustering:input_type -> rpc.BySessionsAndParameters
	2,  // 9: rpc.PolicyAnalyzeService.Analyze:input_type -> rpc.ByDeviceRequest
	10, // 10: rpc.PolicyConvergenceService.Convergence:input_type -> rpc.ByIdRequest
	2,  // 11: rpc.ComplianceAnalyzeService.Analyze:input_type -> rpc.ByDeviceRequest
	3,  // 12: rpc.ObjectAnalyzeService.Analyze:output_type -> rpc.AnalyzeResponse
	9,  // 13: rpc.PolicyOptimization.PermissivePolicyClustering:output_type -> rpc.PermissivePolicyClusteringResponse
	3,  // 14: rpc.PolicyAnalyzeService.Analyze:output_type -> rpc.AnalyzeResponse
	11, // 15: rpc.PolicyConvergenceService.Convergence:output_type -> common.SimpleJsonResponse
	3,  // 16: rpc.ComplianceAnalyzeService.Analyze:output_type -> rpc.AnalyzeResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_src_grpc_policyInsight_proto_init() }
func file_src_grpc_policyInsight_proto_init() {
	if File_src_grpc_policyInsight_proto != nil {
		return
	}
	file_src_grpc_nap_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_src_grpc_policyInsight_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_policyInsight_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_policyInsight_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quintuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_policyInsight_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Weight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_policyInsight_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BySessionsAndParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_policyInsight_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Observations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_policyInsight_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_policyInsight_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissivePolicyClusteringResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_grpc_policyInsight_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_src_grpc_policyInsight_proto_goTypes,
		DependencyIndexes: file_src_grpc_policyInsight_proto_depIdxs,
		EnumInfos:         file_src_grpc_policyInsight_proto_enumTypes,
		MessageInfos:      file_src_grpc_policyInsight_proto_msgTypes,
	}.Build()
	File_src_grpc_policyInsight_proto = out.File
	file_src_grpc_policyInsight_proto_rawDesc = nil
	file_src_grpc_policyInsight_proto_goTypes = nil
	file_src_grpc_policyInsight_proto_depIdxs = nil
}
