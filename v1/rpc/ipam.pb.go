// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/grpc/ipam.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	ipam "github.com/sky-cloud-tec/proto/v1/ipam"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ByIpRequest struct {
	Ip                   string   `protobuf:"bytes,10,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByIpRequest) Reset()         { *m = ByIpRequest{} }
func (m *ByIpRequest) String() string { return proto.CompactTextString(m) }
func (*ByIpRequest) ProtoMessage()    {}
func (*ByIpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98adb44cfe9ead2b, []int{0}
}

func (m *ByIpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByIpRequest.Unmarshal(m, b)
}
func (m *ByIpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByIpRequest.Marshal(b, m, deterministic)
}
func (m *ByIpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByIpRequest.Merge(m, src)
}
func (m *ByIpRequest) XXX_Size() int {
	return xxx_messageInfo_ByIpRequest.Size(m)
}
func (m *ByIpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByIpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByIpRequest proto.InternalMessageInfo

func (m *ByIpRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type ByEmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByEmptyRequest) Reset()         { *m = ByEmptyRequest{} }
func (m *ByEmptyRequest) String() string { return proto.CompactTextString(m) }
func (*ByEmptyRequest) ProtoMessage()    {}
func (*ByEmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98adb44cfe9ead2b, []int{1}
}

func (m *ByEmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByEmptyRequest.Unmarshal(m, b)
}
func (m *ByEmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByEmptyRequest.Marshal(b, m, deterministic)
}
func (m *ByEmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByEmptyRequest.Merge(m, src)
}
func (m *ByEmptyRequest) XXX_Size() int {
	return xxx_messageInfo_ByEmptyRequest.Size(m)
}
func (m *ByEmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByEmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByEmptyRequest proto.InternalMessageInfo

type GetDeviceMsgResponse struct {
	IpamItem             *ipam.IpamItem `protobuf:"bytes,10,opt,name=ipam_item,json=ipamItem,proto3" json:"ipam_item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetDeviceMsgResponse) Reset()         { *m = GetDeviceMsgResponse{} }
func (m *GetDeviceMsgResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceMsgResponse) ProtoMessage()    {}
func (*GetDeviceMsgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98adb44cfe9ead2b, []int{2}
}

func (m *GetDeviceMsgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceMsgResponse.Unmarshal(m, b)
}
func (m *GetDeviceMsgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceMsgResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceMsgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceMsgResponse.Merge(m, src)
}
func (m *GetDeviceMsgResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceMsgResponse.Size(m)
}
func (m *GetDeviceMsgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceMsgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceMsgResponse proto.InternalMessageInfo

func (m *GetDeviceMsgResponse) GetIpamItem() *ipam.IpamItem {
	if m != nil {
		return m.IpamItem
	}
	return nil
}

type ListDeviceMsgResponse struct {
	Up                   string           `protobuf:"bytes,10,opt,name=up,proto3" json:"up,omitempty"`
	Down                 string           `protobuf:"bytes,20,opt,name=down,proto3" json:"down,omitempty"`
	Total                string           `protobuf:"bytes,30,opt,name=total,proto3" json:"total,omitempty"`
	IpamItems            []*ipam.IpamItem `protobuf:"bytes,40,rep,name=ipam_items,json=ipamItems,proto3" json:"ipam_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListDeviceMsgResponse) Reset()         { *m = ListDeviceMsgResponse{} }
func (m *ListDeviceMsgResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeviceMsgResponse) ProtoMessage()    {}
func (*ListDeviceMsgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98adb44cfe9ead2b, []int{3}
}

func (m *ListDeviceMsgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceMsgResponse.Unmarshal(m, b)
}
func (m *ListDeviceMsgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceMsgResponse.Marshal(b, m, deterministic)
}
func (m *ListDeviceMsgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceMsgResponse.Merge(m, src)
}
func (m *ListDeviceMsgResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeviceMsgResponse.Size(m)
}
func (m *ListDeviceMsgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceMsgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceMsgResponse proto.InternalMessageInfo

func (m *ListDeviceMsgResponse) GetUp() string {
	if m != nil {
		return m.Up
	}
	return ""
}

func (m *ListDeviceMsgResponse) GetDown() string {
	if m != nil {
		return m.Down
	}
	return ""
}

func (m *ListDeviceMsgResponse) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

func (m *ListDeviceMsgResponse) GetIpamItems() []*ipam.IpamItem {
	if m != nil {
		return m.IpamItems
	}
	return nil
}

type GetDeviceSubnetResponse struct {
	Subnets              []string `protobuf:"bytes,10,rep,name=subnets,proto3" json:"subnets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceSubnetResponse) Reset()         { *m = GetDeviceSubnetResponse{} }
func (m *GetDeviceSubnetResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceSubnetResponse) ProtoMessage()    {}
func (*GetDeviceSubnetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98adb44cfe9ead2b, []int{4}
}

func (m *GetDeviceSubnetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceSubnetResponse.Unmarshal(m, b)
}
func (m *GetDeviceSubnetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceSubnetResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceSubnetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceSubnetResponse.Merge(m, src)
}
func (m *GetDeviceSubnetResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceSubnetResponse.Size(m)
}
func (m *GetDeviceSubnetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceSubnetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceSubnetResponse proto.InternalMessageInfo

func (m *GetDeviceSubnetResponse) GetSubnets() []string {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func init() {
	proto.RegisterType((*ByIpRequest)(nil), "rpc.ByIpRequest")
	proto.RegisterType((*ByEmptyRequest)(nil), "rpc.ByEmptyRequest")
	proto.RegisterType((*GetDeviceMsgResponse)(nil), "rpc.GetDeviceMsgResponse")
	proto.RegisterType((*ListDeviceMsgResponse)(nil), "rpc.ListDeviceMsgResponse")
	proto.RegisterType((*GetDeviceSubnetResponse)(nil), "rpc.GetDeviceSubnetResponse")
}

func init() { proto.RegisterFile("src/grpc/ipam.proto", fileDescriptor_98adb44cfe9ead2b) }

var fileDescriptor_98adb44cfe9ead2b = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x5f, 0x4f, 0xfa, 0x30,
	0x14, 0x65, 0xf0, 0xfb, 0xa9, 0xbb, 0xc8, 0x24, 0x05, 0x75, 0x2e, 0x6a, 0x48, 0x13, 0x93, 0x25,
	0x86, 0x2d, 0xc2, 0xb3, 0x31, 0xe2, 0xbf, 0x90, 0xe8, 0xcb, 0x7c, 0xf3, 0xc5, 0x40, 0x69, 0xb0,
	0x81, 0x6d, 0xb5, 0xed, 0x30, 0x7b, 0xf3, 0x6b, 0xfa, 0x6d, 0xcc, 0xca, 0x58, 0x86, 0xd9, 0x53,
	0xef, 0x3d, 0xf7, 0xde, 0xd3, 0x73, 0x4f, 0x0b, 0x1d, 0x29, 0x88, 0x3f, 0x17, 0x9c, 0xf8, 0x8c,
	0x4f, 0x42, 0x8f, 0x8b, 0x58, 0xc5, 0xa8, 0x21, 0x38, 0x71, 0x74, 0x25, 0x03, 0x4b, 0x15, 0x7c,
	0x06, 0xcd, 0x51, 0x3a, 0xe6, 0x01, 0xfd, 0x4c, 0xa8, 0x54, 0xc8, 0x82, 0x3a, 0xe3, 0x36, 0xf4,
	0x0c, 0xd7, 0x0c, 0xea, 0x8c, 0xe3, 0x36, 0x58, 0xa3, 0xf4, 0x21, 0xe4, 0x2a, 0xcd, 0x3b, 0xf0,
	0x1d, 0x74, 0x9f, 0xa8, 0xba, 0xa7, 0x2b, 0x46, 0xe8, 0x8b, 0x9c, 0x07, 0x54, 0xf2, 0x38, 0x92,
	0x14, 0x5d, 0x82, 0x99, 0xd1, 0xbe, 0x33, 0x45, 0x43, 0x4d, 0xd0, 0x1c, 0x58, 0x9e, 0xbe, 0x68,
	0xcc, 0x27, 0xe1, 0x58, 0xd1, 0x30, 0xd8, 0x63, 0x79, 0x84, 0xbf, 0x0d, 0x38, 0x7c, 0x66, 0xb2,
	0x82, 0xc6, 0x82, 0x7a, 0x52, 0x08, 0x48, 0x38, 0x42, 0xf0, 0x6f, 0x16, 0x7f, 0x45, 0x76, 0x57,
	0x23, 0x3a, 0x46, 0x5d, 0xf8, 0xaf, 0x62, 0x35, 0x59, 0xda, 0xe7, 0x1a, 0x5c, 0x27, 0xa8, 0x0f,
	0x50, 0x08, 0x90, 0xb6, 0xdb, 0x6b, 0x54, 0x28, 0x30, 0x37, 0x0a, 0x24, 0x1e, 0xc2, 0x71, 0xb1,
	0xc7, 0x6b, 0x32, 0x8d, 0xa8, 0x2a, 0x34, 0xd8, 0xb0, 0x2b, 0x35, 0x22, 0x6d, 0xe8, 0x35, 0x5c,
	0x33, 0xd8, 0xa4, 0x83, 0x1f, 0x03, 0x5a, 0xf9, 0x08, 0x15, 0xd9, 0x81, 0xae, 0x61, 0xbf, 0x6c,
	0x07, 0x6a, 0x7b, 0x82, 0x13, 0xaf, 0x64, 0xa9, 0x73, 0xa2, 0x91, 0x2a, 0xcf, 0x70, 0x0d, 0xdd,
	0x42, 0x6b, 0xcb, 0x87, 0x8a, 0x79, 0x47, 0x23, 0x95, 0x6e, 0xe1, 0x9a, 0x6b, 0xa0, 0x47, 0x38,
	0xf8, 0xb3, 0x08, 0xea, 0xe4, 0x24, 0xe5, 0x87, 0x73, 0x4e, 0xb7, 0x75, 0x6c, 0xef, 0x8c, 0x6b,
	0xa3, 0x1b, 0x38, 0x8a, 0xa8, 0xf2, 0xe4, 0x22, 0x25, 0xcb, 0x38, 0x99, 0xad, 0xff, 0x47, 0x36,
	0xf3, 0x76, 0x31, 0x67, 0xea, 0x23, 0x99, 0x7a, 0x24, 0x0e, 0x7d, 0xb9, 0x48, 0xfb, 0xba, 0xde,
	0x57, 0x94, 0xf8, 0xba, 0xc7, 0x5f, 0x5d, 0xf9, 0x82, 0x93, 0xe9, 0x8e, 0xce, 0x86, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x61, 0x42, 0x4f, 0x4c, 0x82, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	GetDeviceMsg(ctx context.Context, in *ByIpRequest, opts ...grpc.CallOption) (*GetDeviceMsgResponse, error)
	ListDeviceMsg(ctx context.Context, opts ...grpc.CallOption) (DeviceService_ListDeviceMsgClient, error)
	GetDeviceSubnet(ctx context.Context, in *ByEmptyRequest, opts ...grpc.CallOption) (*GetDeviceSubnetResponse, error)
}

type deviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeviceServiceClient(cc grpc.ClientConnInterface) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) GetDeviceMsg(ctx context.Context, in *ByIpRequest, opts ...grpc.CallOption) (*GetDeviceMsgResponse, error) {
	out := new(GetDeviceMsgResponse)
	err := c.cc.Invoke(ctx, "/rpc.DeviceService/GetDeviceMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) ListDeviceMsg(ctx context.Context, opts ...grpc.CallOption) (DeviceService_ListDeviceMsgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeviceService_serviceDesc.Streams[0], "/rpc.DeviceService/ListDeviceMsg", opts...)
	if err != nil {
		return nil, err
	}
	x := &deviceServiceListDeviceMsgClient{stream}
	return x, nil
}

type DeviceService_ListDeviceMsgClient interface {
	Send(*ByIpRequest) error
	CloseAndRecv() (*ListDeviceMsgResponse, error)
	grpc.ClientStream
}

type deviceServiceListDeviceMsgClient struct {
	grpc.ClientStream
}

func (x *deviceServiceListDeviceMsgClient) Send(m *ByIpRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *deviceServiceListDeviceMsgClient) CloseAndRecv() (*ListDeviceMsgResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ListDeviceMsgResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deviceServiceClient) GetDeviceSubnet(ctx context.Context, in *ByEmptyRequest, opts ...grpc.CallOption) (*GetDeviceSubnetResponse, error) {
	out := new(GetDeviceSubnetResponse)
	err := c.cc.Invoke(ctx, "/rpc.DeviceService/GetDeviceSubnet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	GetDeviceMsg(context.Context, *ByIpRequest) (*GetDeviceMsgResponse, error)
	ListDeviceMsg(DeviceService_ListDeviceMsgServer) error
	GetDeviceSubnet(context.Context, *ByEmptyRequest) (*GetDeviceSubnetResponse, error)
}

// UnimplementedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServiceServer struct {
}

func (*UnimplementedDeviceServiceServer) GetDeviceMsg(ctx context.Context, req *ByIpRequest) (*GetDeviceMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceMsg not implemented")
}
func (*UnimplementedDeviceServiceServer) ListDeviceMsg(srv DeviceService_ListDeviceMsgServer) error {
	return status.Errorf(codes.Unimplemented, "method ListDeviceMsg not implemented")
}
func (*UnimplementedDeviceServiceServer) GetDeviceSubnet(ctx context.Context, req *ByEmptyRequest) (*GetDeviceSubnetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceSubnet not implemented")
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_GetDeviceMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByIpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetDeviceMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DeviceService/GetDeviceMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetDeviceMsg(ctx, req.(*ByIpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_ListDeviceMsg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DeviceServiceServer).ListDeviceMsg(&deviceServiceListDeviceMsgServer{stream})
}

type DeviceService_ListDeviceMsgServer interface {
	SendAndClose(*ListDeviceMsgResponse) error
	Recv() (*ByIpRequest, error)
	grpc.ServerStream
}

type deviceServiceListDeviceMsgServer struct {
	grpc.ServerStream
}

func (x *deviceServiceListDeviceMsgServer) SendAndClose(m *ListDeviceMsgResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *deviceServiceListDeviceMsgServer) Recv() (*ByIpRequest, error) {
	m := new(ByIpRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DeviceService_GetDeviceSubnet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByEmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetDeviceSubnet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.DeviceService/GetDeviceSubnet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetDeviceSubnet(ctx, req.(*ByEmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDeviceMsg",
			Handler:    _DeviceService_GetDeviceMsg_Handler,
		},
		{
			MethodName: "GetDeviceSubnet",
			Handler:    _DeviceService_GetDeviceSubnet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListDeviceMsg",
			Handler:       _DeviceService_ListDeviceMsg_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "src/grpc/ipam.proto",
}
