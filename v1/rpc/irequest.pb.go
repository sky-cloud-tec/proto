// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/grpc/irequest.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/sky-cloud-tec/proto/v1/common"
	jrpc "github.com/sky-cloud-tec/proto/v1/jrpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Standard response
type IResponse struct {
	Code                 common.Retcode    `protobuf:"varint,10,opt,name=code,proto3,enum=common.Retcode" json:"code,omitempty"`
	Msg                  string            `protobuf:"bytes,20,opt,name=msg,proto3" json:"msg,omitempty"`
	Log                  string            `protobuf:"bytes,23,opt,name=log,proto3" json:"log,omitempty"`
	Headers              map[string]string `protobuf:"bytes,25,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PageInfo             *common.PageInfo  `protobuf:"bytes,30,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	Body                 *ResBody          `protobuf:"bytes,40,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IResponse) Reset()         { *m = IResponse{} }
func (m *IResponse) String() string { return proto.CompactTextString(m) }
func (*IResponse) ProtoMessage()    {}
func (*IResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_39fc0284537e49aa, []int{0}
}

func (m *IResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IResponse.Unmarshal(m, b)
}
func (m *IResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IResponse.Marshal(b, m, deterministic)
}
func (m *IResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IResponse.Merge(m, src)
}
func (m *IResponse) XXX_Size() int {
	return xxx_messageInfo_IResponse.Size(m)
}
func (m *IResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IResponse proto.InternalMessageInfo

func (m *IResponse) GetCode() common.Retcode {
	if m != nil {
		return m.Code
	}
	return common.Retcode_SUCCESS
}

func (m *IResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *IResponse) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

func (m *IResponse) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *IResponse) GetPageInfo() *common.PageInfo {
	if m != nil {
		return m.PageInfo
	}
	return nil
}

func (m *IResponse) GetBody() *ResBody {
	if m != nil {
		return m.Body
	}
	return nil
}

// Standard request
type IRequest struct {
	Url                  string            `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	Method               string            `protobuf:"bytes,20,opt,name=method,proto3" json:"method,omitempty"`
	Headers              map[string]string `protobuf:"bytes,30,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 *ReqBody          `protobuf:"bytes,40,opt,name=body,proto3" json:"body,omitempty"`
	Params               map[string]string `protobuf:"bytes,50,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IRequest) Reset()         { *m = IRequest{} }
func (m *IRequest) String() string { return proto.CompactTextString(m) }
func (*IRequest) ProtoMessage()    {}
func (*IRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_39fc0284537e49aa, []int{1}
}

func (m *IRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IRequest.Unmarshal(m, b)
}
func (m *IRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IRequest.Marshal(b, m, deterministic)
}
func (m *IRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IRequest.Merge(m, src)
}
func (m *IRequest) XXX_Size() int {
	return xxx_messageInfo_IRequest.Size(m)
}
func (m *IRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IRequest proto.InternalMessageInfo

func (m *IRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *IRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *IRequest) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *IRequest) GetBody() *ReqBody {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *IRequest) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

// 正常的 http 服务处理的是 ReqBody
type ReqBody struct {
	// optional request
	CreateNotificationChannelRequest *jrpc.CreateNotificationChannelRequest `protobuf:"bytes,30,opt,name=create_notification_channel_request,json=createNotificationChannelRequest,proto3" json:"create_notification_channel_request,omitempty"`
	OperatorHotfixRequest            *jrpc.OperatorHotfixRequest            `protobuf:"bytes,40,opt,name=operator_hotfix_request,json=operatorHotfixRequest,proto3" json:"operator_hotfix_request,omitempty"`
	SimpleJsonRequest                *common.SimpleJsonRequest              `protobuf:"bytes,50,opt,name=simple_json_request,json=simpleJsonRequest,proto3" json:"simple_json_request,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                               `json:"-"`
	XXX_unrecognized                 []byte                                 `json:"-"`
	XXX_sizecache                    int32                                  `json:"-"`
}

func (m *ReqBody) Reset()         { *m = ReqBody{} }
func (m *ReqBody) String() string { return proto.CompactTextString(m) }
func (*ReqBody) ProtoMessage()    {}
func (*ReqBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_39fc0284537e49aa, []int{2}
}

func (m *ReqBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBody.Unmarshal(m, b)
}
func (m *ReqBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBody.Marshal(b, m, deterministic)
}
func (m *ReqBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBody.Merge(m, src)
}
func (m *ReqBody) XXX_Size() int {
	return xxx_messageInfo_ReqBody.Size(m)
}
func (m *ReqBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBody.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBody proto.InternalMessageInfo

func (m *ReqBody) GetCreateNotificationChannelRequest() *jrpc.CreateNotificationChannelRequest {
	if m != nil {
		return m.CreateNotificationChannelRequest
	}
	return nil
}

func (m *ReqBody) GetOperatorHotfixRequest() *jrpc.OperatorHotfixRequest {
	if m != nil {
		return m.OperatorHotfixRequest
	}
	return nil
}

func (m *ReqBody) GetSimpleJsonRequest() *common.SimpleJsonRequest {
	if m != nil {
		return m.SimpleJsonRequest
	}
	return nil
}

type ResBody struct {
	// optional response
	CreateNotificationChannelResponse    *jrpc.CreateNotificationChannelResponse    `protobuf:"bytes,10,opt,name=create_notification_channel_response,json=createNotificationChannelResponse,proto3" json:"create_notification_channel_response,omitempty"`
	StatBktRateAllTodayResponse          *jrpc.StatBktRateAllTodayResponse          `protobuf:"bytes,20,opt,name=stat_bkt_rate_all_today_response,json=statBktRateAllTodayResponse,proto3" json:"stat_bkt_rate_all_today_response,omitempty"`
	StatBktRateChannelTop10TodayResponse *jrpc.StatBktRateChannelTop10TodayResponse `protobuf:"bytes,30,opt,name=stat_bkt_rate_channel_top10_today_response,json=statBktRateChannelTop10TodayResponse,proto3" json:"stat_bkt_rate_channel_top10_today_response,omitempty"`
	StatBktVolAllTodayResponse           *jrpc.StatBktVolAllTodayResponse           `protobuf:"bytes,40,opt,name=stat_bkt_vol_all_today_response,json=statBktVolAllTodayResponse,proto3" json:"stat_bkt_vol_all_today_response,omitempty"`
	StatBktVolChannelTop10TodayResponse  *jrpc.StatBktVolChannelTop10TodayResponse  `protobuf:"bytes,50,opt,name=stat_bkt_vol_channel_top10_today_response,json=statBktVolChannelTop10TodayResponse,proto3" json:"stat_bkt_vol_channel_top10_today_response,omitempty"`
	StatBktLapseTodayResponse            *jrpc.StatBktLapseTodayResponse            `protobuf:"bytes,60,opt,name=stat_bkt_lapse_today_response,json=statBktLapseTodayResponse,proto3" json:"stat_bkt_lapse_today_response,omitempty"`
	StatBktRecordResponse                *jrpc.StatBktRecordResponse                `protobuf:"bytes,70,opt,name=stat_bkt_record_response,json=statBktRecordResponse,proto3" json:"stat_bkt_record_response,omitempty"`
	StatBktNodeResponse                  *jrpc.StatBktNodeResponse                  `protobuf:"bytes,80,opt,name=stat_bkt_node_response,json=statBktNodeResponse,proto3" json:"stat_bkt_node_response,omitempty"`
	GetNotificationChannelResponse       *jrpc.GetNotificationChannelResponse       `protobuf:"bytes,90,opt,name=get_notification_channel_response,json=getNotificationChannelResponse,proto3" json:"get_notification_channel_response,omitempty"`
	StatBktActiveClientsResponse         *jrpc.StatBktActiveClientsResponse         `protobuf:"bytes,100,opt,name=stat_bkt_active_clients_response,json=statBktActiveClientsResponse,proto3" json:"stat_bkt_active_clients_response,omitempty"`
	OperatorHotfixResponse               *jrpc.OperatorHotfixResponse               `protobuf:"bytes,110,opt,name=operator_hotfix_response,json=operatorHotfixResponse,proto3" json:"operator_hotfix_response,omitempty"`
	SimpleJsonResponse                   *common.SimpleJsonResponse                 `protobuf:"bytes,120,opt,name=simple_json_response,json=simpleJsonResponse,proto3" json:"simple_json_response,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{}                                   `json:"-"`
	XXX_unrecognized                     []byte                                     `json:"-"`
	XXX_sizecache                        int32                                      `json:"-"`
}

func (m *ResBody) Reset()         { *m = ResBody{} }
func (m *ResBody) String() string { return proto.CompactTextString(m) }
func (*ResBody) ProtoMessage()    {}
func (*ResBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_39fc0284537e49aa, []int{3}
}

func (m *ResBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResBody.Unmarshal(m, b)
}
func (m *ResBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResBody.Marshal(b, m, deterministic)
}
func (m *ResBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResBody.Merge(m, src)
}
func (m *ResBody) XXX_Size() int {
	return xxx_messageInfo_ResBody.Size(m)
}
func (m *ResBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ResBody.DiscardUnknown(m)
}

var xxx_messageInfo_ResBody proto.InternalMessageInfo

func (m *ResBody) GetCreateNotificationChannelResponse() *jrpc.CreateNotificationChannelResponse {
	if m != nil {
		return m.CreateNotificationChannelResponse
	}
	return nil
}

func (m *ResBody) GetStatBktRateAllTodayResponse() *jrpc.StatBktRateAllTodayResponse {
	if m != nil {
		return m.StatBktRateAllTodayResponse
	}
	return nil
}

func (m *ResBody) GetStatBktRateChannelTop10TodayResponse() *jrpc.StatBktRateChannelTop10TodayResponse {
	if m != nil {
		return m.StatBktRateChannelTop10TodayResponse
	}
	return nil
}

func (m *ResBody) GetStatBktVolAllTodayResponse() *jrpc.StatBktVolAllTodayResponse {
	if m != nil {
		return m.StatBktVolAllTodayResponse
	}
	return nil
}

func (m *ResBody) GetStatBktVolChannelTop10TodayResponse() *jrpc.StatBktVolChannelTop10TodayResponse {
	if m != nil {
		return m.StatBktVolChannelTop10TodayResponse
	}
	return nil
}

func (m *ResBody) GetStatBktLapseTodayResponse() *jrpc.StatBktLapseTodayResponse {
	if m != nil {
		return m.StatBktLapseTodayResponse
	}
	return nil
}

func (m *ResBody) GetStatBktRecordResponse() *jrpc.StatBktRecordResponse {
	if m != nil {
		return m.StatBktRecordResponse
	}
	return nil
}

func (m *ResBody) GetStatBktNodeResponse() *jrpc.StatBktNodeResponse {
	if m != nil {
		return m.StatBktNodeResponse
	}
	return nil
}

func (m *ResBody) GetGetNotificationChannelResponse() *jrpc.GetNotificationChannelResponse {
	if m != nil {
		return m.GetNotificationChannelResponse
	}
	return nil
}

func (m *ResBody) GetStatBktActiveClientsResponse() *jrpc.StatBktActiveClientsResponse {
	if m != nil {
		return m.StatBktActiveClientsResponse
	}
	return nil
}

func (m *ResBody) GetOperatorHotfixResponse() *jrpc.OperatorHotfixResponse {
	if m != nil {
		return m.OperatorHotfixResponse
	}
	return nil
}

func (m *ResBody) GetSimpleJsonResponse() *common.SimpleJsonResponse {
	if m != nil {
		return m.SimpleJsonResponse
	}
	return nil
}

func init() {
	proto.RegisterType((*IResponse)(nil), "rpc.IResponse")
	proto.RegisterMapType((map[string]string)(nil), "rpc.IResponse.HeadersEntry")
	proto.RegisterType((*IRequest)(nil), "rpc.IRequest")
	proto.RegisterMapType((map[string]string)(nil), "rpc.IRequest.HeadersEntry")
	proto.RegisterMapType((map[string]string)(nil), "rpc.IRequest.ParamsEntry")
	proto.RegisterType((*ReqBody)(nil), "rpc.ReqBody")
	proto.RegisterType((*ResBody)(nil), "rpc.ResBody")
}

func init() { proto.RegisterFile("src/grpc/irequest.proto", fileDescriptor_39fc0284537e49aa) }

var fileDescriptor_39fc0284537e49aa = []byte{
	// 887 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x18, 0x55, 0xd2, 0xa5, 0xbb, 0x99, 0xae, 0x60, 0x99, 0xa6, 0xa9, 0x9b, 0x96, 0x6e, 0xfa, 0x03,
	0x64, 0x57, 0xaa, 0x43, 0x03, 0x48, 0xb0, 0x42, 0x42, 0xdb, 0x0a, 0xd8, 0xa2, 0x55, 0xa9, 0xdc,
	0x6a, 0x2f, 0xf6, 0xc6, 0x9a, 0xda, 0x5f, 0x1d, 0x37, 0xce, 0x8c, 0x3b, 0x33, 0x89, 0x9a, 0x4b,
	0x24, 0x1e, 0x82, 0x4b, 0x9e, 0x82, 0x97, 0xe2, 0x25, 0xd0, 0xfc, 0xd8, 0x89, 0x1b, 0x27, 0x01,
	0xed, 0x9d, 0x7d, 0xbe, 0xe3, 0x73, 0xbe, 0x33, 0xf3, 0xcd, 0x24, 0x68, 0x53, 0xf0, 0xa0, 0x13,
	0xf1, 0x34, 0xe8, 0xc4, 0x1c, 0xee, 0x86, 0x20, 0xa4, 0x9b, 0x72, 0x26, 0x19, 0x5e, 0xe1, 0x69,
	0xd0, 0xdc, 0x51, 0xd5, 0x80, 0x0d, 0x06, 0x8c, 0x76, 0x80, 0x73, 0xc6, 0xfd, 0x80, 0x85, 0x20,
	0x0c, 0xa5, 0xb9, 0x31, 0x55, 0x4d, 0x49, 0x04, 0x16, 0x6e, 0x28, 0xf8, 0x56, 0x49, 0xc2, 0x08,
	0xa8, 0x94, 0xb1, 0xc5, 0xeb, 0x39, 0x4e, 0x41, 0x92, 0x0c, 0x5d, 0x9f, 0x46, 0xc3, 0x12, 0xe5,
	0x81, 0x88, 0xac, 0xe1, 0xfe, 0x9f, 0x55, 0x54, 0x3b, 0xf3, 0x40, 0xa4, 0x8c, 0x0a, 0xc0, 0x07,
	0xe8, 0x91, 0xea, 0xc6, 0x41, 0xad, 0x4a, 0xfb, 0xe3, 0xee, 0x27, 0xae, 0xe1, 0xbb, 0x1e, 0x48,
	0x05, 0x7b, 0xba, 0x88, 0x9f, 0xa1, 0x95, 0x81, 0x88, 0x9c, 0x7a, 0xab, 0xd2, 0xae, 0x79, 0xea,
	0x51, 0x21, 0x09, 0x8b, 0x9c, 0x4d, 0x83, 0x24, 0x2c, 0xc2, 0xdf, 0xa2, 0xc7, 0x3d, 0x20, 0x21,
	0x70, 0xe1, 0x6c, 0xb5, 0x56, 0xda, 0x6b, 0xdd, 0x6d, 0x97, 0xa7, 0x81, 0x9b, 0x3b, 0xb9, 0x6f,
	0x4c, 0xf5, 0x27, 0x2a, 0xf9, 0xd8, 0xcb, 0xb8, 0xf8, 0x08, 0xd5, 0x54, 0x6a, 0x3f, 0xa6, 0x37,
	0xcc, 0xd9, 0x6d, 0x55, 0xda, 0x6b, 0xdd, 0x67, 0x59, 0x13, 0x17, 0x24, 0x82, 0x33, 0x7a, 0xc3,
	0xbc, 0x27, 0xa9, 0x7d, 0xc2, 0x2d, 0xf4, 0xe8, 0x9a, 0x85, 0x63, 0xa7, 0xad, 0x99, 0x4f, 0xb5,
	0x85, 0x07, 0xe2, 0x84, 0x85, 0x63, 0x4f, 0x57, 0x9a, 0xaf, 0xd0, 0xd3, 0x69, 0x27, 0xd5, 0x69,
	0x1f, 0xc6, 0x4e, 0xc5, 0x74, 0xda, 0x87, 0x31, 0xae, 0xa3, 0x8f, 0x46, 0x24, 0x19, 0x82, 0x53,
	0xd5, 0x98, 0x79, 0x79, 0x55, 0xfd, 0xae, 0xb2, 0xff, 0x77, 0x15, 0x3d, 0x39, 0xf3, 0xcc, 0x0e,
	0xaa, 0x0f, 0x87, 0x3c, 0xd1, 0x0b, 0x53, 0xf3, 0xd4, 0x23, 0x6e, 0xa0, 0xd5, 0x01, 0xc8, 0x1e,
	0x0b, 0xed, 0x4a, 0xd8, 0x37, 0xfc, 0xcd, 0x24, 0xfa, 0xae, 0x8e, 0xde, 0xcc, 0xa2, 0x9b, 0x59,
	0x28, 0x4f, 0x5e, 0x1e, 0xe5, 0x6e, 0x12, 0x05, 0x1f, 0xa3, 0xd5, 0x94, 0x70, 0x32, 0x10, 0x4e,
	0x57, 0xcb, 0x6e, 0x15, 0x65, 0x2f, 0x74, 0xcd, 0xa8, 0x5a, 0xe2, 0x87, 0xa4, 0x6f, 0x7e, 0x8f,
	0xd6, 0xa6, 0x24, 0xff, 0xd7, 0xc2, 0xfd, 0x55, 0x45, 0x8f, 0x6d, 0xef, 0x78, 0x88, 0x0e, 0x02,
	0x0e, 0x44, 0x82, 0x4f, 0x99, 0x8c, 0x6f, 0xe2, 0x80, 0xc8, 0x98, 0x51, 0x3f, 0xe8, 0x11, 0x4a,
	0x21, 0xf1, 0xed, 0x01, 0xb1, 0x7b, 0xfd, 0x85, 0xab, 0xa6, 0xd6, 0x3d, 0xd5, 0x1f, 0x9c, 0x4f,
	0xf1, 0x4f, 0x0d, 0xdd, 0x66, 0xf5, 0x5a, 0xc1, 0x12, 0x06, 0xbe, 0x44, 0x9b, 0x2c, 0x05, 0x4e,
	0x24, 0xe3, 0x7e, 0x8f, 0xc9, 0x9b, 0xf8, 0x3e, 0xb7, 0x32, 0x2b, 0xbc, 0x6d, 0xac, 0x7e, 0xb3,
	0xa4, 0x37, 0x9a, 0x93, 0xe9, 0x6f, 0xb0, 0x32, 0x18, 0x9f, 0xa1, 0x75, 0x11, 0x0f, 0xd2, 0x04,
	0xfc, 0x5b, 0xc1, 0x68, 0x2e, 0xd8, 0xd5, 0x82, 0x5b, 0xd9, 0x9c, 0x5e, 0x6a, 0xca, 0xaf, 0x82,
	0xd1, 0x4c, 0xee, 0x53, 0xf1, 0x10, 0xda, 0xff, 0xa7, 0xa6, 0x96, 0x48, 0x4f, 0x2a, 0xbe, 0x47,
	0x87, 0x8b, 0x97, 0xc8, 0x1c, 0x19, 0x3d, 0x7b, 0x6b, 0xdd, 0x2f, 0x97, 0xae, 0x91, 0xa1, 0x7b,
	0x7b, 0xc1, 0x32, 0x0a, 0xee, 0xa1, 0x96, 0x90, 0x44, 0xfa, 0xd7, 0x7d, 0xe9, 0x73, 0xd5, 0x00,
	0x49, 0x12, 0x5f, 0xb2, 0x90, 0x8c, 0x27, 0xae, 0x75, 0xed, 0xba, 0x67, 0x5c, 0x2f, 0x25, 0x91,
	0x27, 0x7d, 0xe9, 0x11, 0x09, 0xaf, 0x93, 0xe4, 0x4a, 0x31, 0x73, 0xbf, 0x6d, 0x31, 0xbf, 0x88,
	0xff, 0xa8, 0xa0, 0x97, 0x45, 0xab, 0x2c, 0x9e, 0x64, 0xe9, 0xf1, 0x57, 0x0f, 0x4d, 0xcd, 0x38,
	0xbc, 0x9c, 0x31, 0xb5, 0x01, 0xae, 0xd4, 0x37, 0x45, 0xf7, 0x43, 0xf1, 0x1f, 0x58, 0x18, 0xd0,
	0xf3, 0xbc, 0x8b, 0x11, 0x4b, 0xca, 0xf2, 0x9a, 0xf1, 0x68, 0x15, 0xac, 0xdf, 0xb1, 0x64, 0x26,
	0x6e, 0x53, 0xcc, 0xad, 0xe1, 0xdf, 0x2b, 0xe8, 0x45, 0xc1, 0x67, 0x61, 0x58, 0x33, 0x3f, 0x2f,
	0x1e, 0x3a, 0xce, 0xcf, 0x7a, 0x20, 0x96, 0x93, 0x30, 0x41, 0x9f, 0xe5, 0x2d, 0x24, 0x24, 0x15,
	0xf0, 0xd0, 0xf6, 0x07, 0x6d, 0xfb, 0xbc, 0x60, 0xfb, 0x56, 0x11, 0x8b, 0x66, 0x5b, 0x62, 0x5e,
	0x09, 0x5f, 0x21, 0x67, 0xb2, 0xa7, 0x10, 0x30, 0x1e, 0x4e, 0xd4, 0x7f, 0x9e, 0x3e, 0x65, 0xd9,
	0x0e, 0x6a, 0x4e, 0xae, 0xbc, 0x21, 0xca, 0x60, 0x7c, 0x8e, 0x1a, 0xb9, 0x2a, 0x65, 0x21, 0x4c,
	0x34, 0x2f, 0xec, 0x41, 0x9b, 0xd6, 0x3c, 0x57, 0xbf, 0x4b, 0x99, 0xe2, 0xba, 0x98, 0x05, 0x31,
	0x43, 0x7b, 0x11, 0xc8, 0x25, 0x67, 0xeb, 0xbd, 0x96, 0x3e, 0x34, 0xd2, 0xbf, 0x80, 0x5c, 0x74,
	0xb0, 0x76, 0xa3, 0x85, 0x75, 0x7c, 0x3b, 0x75, 0xaa, 0x48, 0x20, 0xe3, 0x11, 0xf8, 0x41, 0x12,
	0x03, 0x95, 0x62, 0xe2, 0x17, 0x6a, 0xbf, 0xfd, 0x42, 0x94, 0xd7, 0x9a, 0x7b, 0x6a, 0xa8, 0xb9,
	0xdb, 0x8e, 0x58, 0x50, 0xc5, 0xef, 0x90, 0x33, 0x7b, 0xcf, 0x59, 0x0f, 0xaa, 0x3d, 0x76, 0xca,
	0x2f, 0x3a, 0xab, 0xde, 0x60, 0xa5, 0x38, 0x7e, 0x8b, 0xea, 0xc5, 0xab, 0xce, 0x6a, 0xde, 0x6b,
	0xcd, 0x66, 0xd9, 0x5d, 0x67, 0x15, 0xb1, 0x98, 0xc1, 0x4e, 0x7e, 0x44, 0x0d, 0x0a, 0xd2, 0x15,
	0xfd, 0x71, 0x90, 0xb0, 0xa1, 0xfd, 0x47, 0xa2, 0x7e, 0xbe, 0xde, 0x7f, 0x1e, 0xc5, 0xb2, 0x37,
	0xbc, 0x56, 0x7a, 0x1d, 0xd1, 0x1f, 0x1f, 0xe9, 0xfa, 0x91, 0x84, 0xa0, 0xa3, 0x39, 0x9d, 0xd1,
	0x71, 0x87, 0xa7, 0xc1, 0xf5, 0xaa, 0x7e, 0xfb, 0xfa, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x06,
	0xca, 0x0c, 0x1b, 0x5b, 0x09, 0x00, 0x00,
}
