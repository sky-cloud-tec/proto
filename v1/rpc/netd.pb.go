// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/grpc/netd.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BasicAuth struct {
	Username             string   `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,20,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasicAuth) Reset()         { *m = BasicAuth{} }
func (m *BasicAuth) String() string { return proto.CompactTextString(m) }
func (*BasicAuth) ProtoMessage()    {}
func (*BasicAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e579bad8ec50152, []int{0}
}

func (m *BasicAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicAuth.Unmarshal(m, b)
}
func (m *BasicAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicAuth.Marshal(b, m, deterministic)
}
func (m *BasicAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicAuth.Merge(m, src)
}
func (m *BasicAuth) XXX_Size() int {
	return xxx_messageInfo_BasicAuth.Size(m)
}
func (m *BasicAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicAuth.DiscardUnknown(m)
}

var xxx_messageInfo_BasicAuth proto.InternalMessageInfo

func (m *BasicAuth) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *BasicAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type WithCommandRequest struct {
	Vendor               string     `protobuf:"bytes,10,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Type                 string     `protobuf:"bytes,20,opt,name=type,proto3" json:"type,omitempty"`
	Version              string     `protobuf:"bytes,30,opt,name=version,proto3" json:"version,omitempty"`
	Device               string     `protobuf:"bytes,40,opt,name=device,proto3" json:"device,omitempty"`
	Mode                 string     `protobuf:"bytes,50,opt,name=mode,proto3" json:"mode,omitempty"`
	Auth                 *BasicAuth `protobuf:"bytes,60,opt,name=auth,proto3" json:"auth,omitempty"`
	Address              string     `protobuf:"bytes,70,opt,name=address,proto3" json:"address,omitempty"`
	Commands             []string   `protobuf:"bytes,80,rep,name=commands,proto3" json:"commands,omitempty"`
	Format               string     `protobuf:"bytes,90,opt,name=format,proto3" json:"format,omitempty"`
	Timeout              int32      `protobuf:"varint,100,opt,name=timeout,proto3" json:"timeout,omitempty"`
	LogPrefix            string     `protobuf:"bytes,110,opt,name=log_prefix,json=logPrefix,proto3" json:"log_prefix,omitempty"`
	EnablePwd            string     `protobuf:"bytes,120,opt,name=enable_pwd,json=enablePwd,proto3" json:"enable_pwd,omitempty"`
	Session              string     `protobuf:"bytes,130,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WithCommandRequest) Reset()         { *m = WithCommandRequest{} }
func (m *WithCommandRequest) String() string { return proto.CompactTextString(m) }
func (*WithCommandRequest) ProtoMessage()    {}
func (*WithCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e579bad8ec50152, []int{1}
}

func (m *WithCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithCommandRequest.Unmarshal(m, b)
}
func (m *WithCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithCommandRequest.Marshal(b, m, deterministic)
}
func (m *WithCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithCommandRequest.Merge(m, src)
}
func (m *WithCommandRequest) XXX_Size() int {
	return xxx_messageInfo_WithCommandRequest.Size(m)
}
func (m *WithCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithCommandRequest proto.InternalMessageInfo

func (m *WithCommandRequest) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *WithCommandRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WithCommandRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *WithCommandRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *WithCommandRequest) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *WithCommandRequest) GetAuth() *BasicAuth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *WithCommandRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *WithCommandRequest) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *WithCommandRequest) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *WithCommandRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *WithCommandRequest) GetLogPrefix() string {
	if m != nil {
		return m.LogPrefix
	}
	return ""
}

func (m *WithCommandRequest) GetEnablePwd() string {
	if m != nil {
		return m.EnablePwd
	}
	return ""
}

func (m *WithCommandRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

type ExecuteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteResponse) Reset()         { *m = ExecuteResponse{} }
func (m *ExecuteResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteResponse) ProtoMessage()    {}
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e579bad8ec50152, []int{2}
}

func (m *ExecuteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteResponse.Unmarshal(m, b)
}
func (m *ExecuteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteResponse.Marshal(b, m, deterministic)
}
func (m *ExecuteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteResponse.Merge(m, src)
}
func (m *ExecuteResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteResponse.Size(m)
}
func (m *ExecuteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*BasicAuth)(nil), "rpc.BasicAuth")
	proto.RegisterType((*WithCommandRequest)(nil), "rpc.WithCommandRequest")
	proto.RegisterType((*ExecuteResponse)(nil), "rpc.ExecuteResponse")
}

func init() { proto.RegisterFile("src/grpc/netd.proto", fileDescriptor_0e579bad8ec50152) }

var fileDescriptor_0e579bad8ec50152 = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x4f, 0x6f, 0x13, 0x31,
	0x10, 0xc5, 0x15, 0x5a, 0x1a, 0x32, 0x48, 0x20, 0x4c, 0x55, 0x4c, 0x25, 0x50, 0x14, 0x09, 0x29,
	0x97, 0xee, 0x8a, 0x70, 0xe1, 0x80, 0x84, 0x68, 0x44, 0xcf, 0xd1, 0x72, 0x40, 0xea, 0xa5, 0x72,
	0xec, 0x69, 0x62, 0x75, 0xd7, 0x36, 0x1e, 0x3b, 0x7f, 0xae, 0x7c, 0x5d, 0xbe, 0x04, 0xb2, 0xbd,
	0xdb, 0x03, 0xdc, 0xfc, 0x9b, 0x37, 0xfb, 0x3c, 0x6f, 0xd6, 0xf0, 0x9a, 0xbc, 0xac, 0x37, 0xde,
	0xc9, 0xda, 0x60, 0x50, 0x95, 0xf3, 0x36, 0x58, 0x76, 0xe2, 0x9d, 0x9c, 0x2d, 0x61, 0x72, 0x2d,
	0x48, 0xcb, 0x6f, 0x31, 0x6c, 0xd9, 0x25, 0x3c, 0x8b, 0x84, 0xde, 0x88, 0x0e, 0x39, 0x4c, 0x47,
	0xf3, 0x49, 0xf3, 0xc8, 0x49, 0x73, 0x82, 0x68, 0x6f, 0xbd, 0xe2, 0xe7, 0x45, 0x1b, 0x78, 0xf6,
	0xe7, 0x09, 0xb0, 0x9f, 0x3a, 0x6c, 0x97, 0xb6, 0xeb, 0x84, 0x51, 0x0d, 0xfe, 0x8a, 0x48, 0x81,
	0x5d, 0xc0, 0xd9, 0x0e, 0x8d, 0xb2, 0xbe, 0x37, 0xeb, 0x89, 0x31, 0x38, 0x0d, 0x47, 0x87, 0xbd,
	0x4d, 0x3e, 0x33, 0x0e, 0xe3, 0x1d, 0x7a, 0xd2, 0xd6, 0xf0, 0xf7, 0xb9, 0x3c, 0x60, 0x72, 0x51,
	0xb8, 0xd3, 0x12, 0xf9, 0xbc, 0xb8, 0x14, 0x4a, 0x2e, 0x9d, 0x55, 0xc8, 0x17, 0xc5, 0x25, 0x9d,
	0xd9, 0x0c, 0x4e, 0x45, 0x0c, 0x5b, 0xfe, 0x65, 0x3a, 0x9a, 0x3f, 0x5f, 0xbc, 0xa8, 0xbc, 0x93,
	0xd5, 0x63, 0xbc, 0x26, 0x6b, 0xe9, 0x26, 0xa1, 0x94, 0x47, 0x22, 0x7e, 0x53, 0x6e, 0xea, 0x31,
	0x45, 0x94, 0x25, 0x01, 0xf1, 0xd5, 0xf4, 0x24, 0x45, 0x1c, 0x38, 0x4d, 0x71, 0x6f, 0x7d, 0x27,
	0x02, 0xbf, 0x2d, 0x53, 0x14, 0x4a, 0x6e, 0x41, 0x77, 0x68, 0x63, 0xe0, 0x6a, 0x3a, 0x9a, 0x3f,
	0x6d, 0x06, 0x64, 0xef, 0x00, 0x5a, 0xbb, 0xb9, 0x73, 0x1e, 0xef, 0xf5, 0x81, 0x9b, 0xfc, 0xd5,
	0xa4, 0xb5, 0x9b, 0x55, 0x2e, 0x24, 0x19, 0x8d, 0x58, 0xb7, 0x78, 0xe7, 0xf6, 0x8a, 0x1f, 0x8a,
	0x5c, 0x2a, 0xab, 0xbd, 0x62, 0x6f, 0x61, 0x4c, 0x48, 0x79, 0x1f, 0xbf, 0x47, 0x65, 0xcc, 0x9e,
	0x67, 0xaf, 0xe0, 0xe5, 0xf7, 0x03, 0xca, 0x18, 0xb0, 0x41, 0x72, 0xd6, 0x10, 0x2e, 0x6e, 0x00,
	0x96, 0xad, 0xfe, 0x81, 0x3e, 0x6f, 0xe6, 0x33, 0x8c, 0xfb, 0x06, 0xf6, 0x26, 0xaf, 0xe0, 0xff,
	0x7f, 0x73, 0x79, 0x9e, 0x85, 0x7f, 0x7c, 0xae, 0xbf, 0xc2, 0x85, 0xc1, 0x50, 0xd1, 0xc3, 0x51,
	0xb6, 0x36, 0xf6, 0x0f, 0x25, 0x75, 0xde, 0x7e, 0xd8, 0xe8, 0xb0, 0x8d, 0xeb, 0x4a, 0xda, 0xae,
	0xa6, 0x87, 0xe3, 0x55, 0xd6, 0xaf, 0x02, 0xca, 0x3a, 0xf7, 0xd4, 0xbb, 0x8f, 0xb5, 0x77, 0x72,
	0x7d, 0x96, 0xe9, 0xd3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x5b, 0x8e, 0x53, 0x71, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CliServiceClient is the client API for CliService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CliServiceClient interface {
	Execute(ctx context.Context, in *WithCommandRequest, opts ...grpc.CallOption) (*ExecuteResponse, error)
}

type cliServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCliServiceClient(cc grpc.ClientConnInterface) CliServiceClient {
	return &cliServiceClient{cc}
}

func (c *cliServiceClient) Execute(ctx context.Context, in *WithCommandRequest, opts ...grpc.CallOption) (*ExecuteResponse, error) {
	out := new(ExecuteResponse)
	err := c.cc.Invoke(ctx, "/rpc.CliService/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CliServiceServer is the server API for CliService service.
type CliServiceServer interface {
	Execute(context.Context, *WithCommandRequest) (*ExecuteResponse, error)
}

// UnimplementedCliServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCliServiceServer struct {
}

func (*UnimplementedCliServiceServer) Execute(ctx context.Context, req *WithCommandRequest) (*ExecuteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterCliServiceServer(s *grpc.Server, srv CliServiceServer) {
	s.RegisterService(&_CliService_serviceDesc, srv)
}

func _CliService_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CliServiceServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.CliService/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CliServiceServer).Execute(ctx, req.(*WithCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CliService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.CliService",
	HandlerType: (*CliServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _CliService_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/netd.proto",
}
