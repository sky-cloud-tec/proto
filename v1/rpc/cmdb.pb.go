// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/grpc/cmdb.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	cmdb "github.com/sky-cloud-tec/proto/v1/cmdb"
	common "github.com/sky-cloud-tec/proto/v1/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ByJqlAndUsernameRequest struct {
	Jql                  string   `protobuf:"bytes,10,opt,name=jql,proto3" json:"jql,omitempty"`
	Name                 string   `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByJqlAndUsernameRequest) Reset()         { *m = ByJqlAndUsernameRequest{} }
func (m *ByJqlAndUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*ByJqlAndUsernameRequest) ProtoMessage()    {}
func (*ByJqlAndUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{0}
}

func (m *ByJqlAndUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByJqlAndUsernameRequest.Unmarshal(m, b)
}
func (m *ByJqlAndUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByJqlAndUsernameRequest.Marshal(b, m, deterministic)
}
func (m *ByJqlAndUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByJqlAndUsernameRequest.Merge(m, src)
}
func (m *ByJqlAndUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_ByJqlAndUsernameRequest.Size(m)
}
func (m *ByJqlAndUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByJqlAndUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByJqlAndUsernameRequest proto.InternalMessageInfo

func (m *ByJqlAndUsernameRequest) GetJql() string {
	if m != nil {
		return m.Jql
	}
	return ""
}

func (m *ByJqlAndUsernameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ByNodeAndUsernameRequest struct {
	Node                 *cmdb.Node `protobuf:"bytes,20,opt,name=node,proto3" json:"node,omitempty"`
	Name                 string     `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ByNodeAndUsernameRequest) Reset()         { *m = ByNodeAndUsernameRequest{} }
func (m *ByNodeAndUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*ByNodeAndUsernameRequest) ProtoMessage()    {}
func (*ByNodeAndUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{1}
}

func (m *ByNodeAndUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByNodeAndUsernameRequest.Unmarshal(m, b)
}
func (m *ByNodeAndUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByNodeAndUsernameRequest.Marshal(b, m, deterministic)
}
func (m *ByNodeAndUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByNodeAndUsernameRequest.Merge(m, src)
}
func (m *ByNodeAndUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_ByNodeAndUsernameRequest.Size(m)
}
func (m *ByNodeAndUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByNodeAndUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByNodeAndUsernameRequest proto.InternalMessageInfo

func (m *ByNodeAndUsernameRequest) GetNode() *cmdb.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *ByNodeAndUsernameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateNodeRequest struct {
	Node                 *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
	Name                 string     `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateNodeRequest) Reset()         { *m = CreateNodeRequest{} }
func (m *CreateNodeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNodeRequest) ProtoMessage()    {}
func (*CreateNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{2}
}

func (m *CreateNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeRequest.Unmarshal(m, b)
}
func (m *CreateNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeRequest.Marshal(b, m, deterministic)
}
func (m *CreateNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeRequest.Merge(m, src)
}
func (m *CreateNodeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNodeRequest.Size(m)
}
func (m *CreateNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeRequest proto.InternalMessageInfo

func (m *CreateNodeRequest) GetNode() *cmdb.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *CreateNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WithTableRequest struct {
	Table                *cmdb.Table `protobuf:"bytes,10,opt,name=table,proto3" json:"table,omitempty"`
	Username             string      `protobuf:"bytes,20,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WithTableRequest) Reset()         { *m = WithTableRequest{} }
func (m *WithTableRequest) String() string { return proto.CompactTextString(m) }
func (*WithTableRequest) ProtoMessage()    {}
func (*WithTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{3}
}

func (m *WithTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithTableRequest.Unmarshal(m, b)
}
func (m *WithTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithTableRequest.Marshal(b, m, deterministic)
}
func (m *WithTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithTableRequest.Merge(m, src)
}
func (m *WithTableRequest) XXX_Size() int {
	return xxx_messageInfo_WithTableRequest.Size(m)
}
func (m *WithTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithTableRequest proto.InternalMessageInfo

func (m *WithTableRequest) GetTable() *cmdb.Table {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *WithTableRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type UpdateNodeRequest struct {
	Node                 *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
	NodeId               string     `protobuf:"bytes,20,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Name                 string     `protobuf:"bytes,30,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateNodeRequest) Reset()         { *m = UpdateNodeRequest{} }
func (m *UpdateNodeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeRequest) ProtoMessage()    {}
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{4}
}

func (m *UpdateNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeRequest.Unmarshal(m, b)
}
func (m *UpdateNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeRequest.Merge(m, src)
}
func (m *UpdateNodeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeRequest.Size(m)
}
func (m *UpdateNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeRequest proto.InternalMessageInfo

func (m *UpdateNodeRequest) GetNode() *cmdb.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *UpdateNodeRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *UpdateNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WithNodesAndUsernameRequest struct {
	Node                 []*cmdb.Node `protobuf:"bytes,20,rep,name=node,proto3" json:"node,omitempty"`
	Name                 string       `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WithNodesAndUsernameRequest) Reset()         { *m = WithNodesAndUsernameRequest{} }
func (m *WithNodesAndUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*WithNodesAndUsernameRequest) ProtoMessage()    {}
func (*WithNodesAndUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{5}
}

func (m *WithNodesAndUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithNodesAndUsernameRequest.Unmarshal(m, b)
}
func (m *WithNodesAndUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithNodesAndUsernameRequest.Marshal(b, m, deterministic)
}
func (m *WithNodesAndUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithNodesAndUsernameRequest.Merge(m, src)
}
func (m *WithNodesAndUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_WithNodesAndUsernameRequest.Size(m)
}
func (m *WithNodesAndUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithNodesAndUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithNodesAndUsernameRequest proto.InternalMessageInfo

func (m *WithNodesAndUsernameRequest) GetNode() []*cmdb.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *WithNodesAndUsernameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type WithNodesAndUsernameAndRelationRequest struct {
	Node                 []*cmdb.Node `protobuf:"bytes,10,rep,name=node,proto3" json:"node,omitempty"`
	Name                 string       `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	DstLabel             string       `protobuf:"bytes,30,opt,name=dstLabel,proto3" json:"dstLabel,omitempty"`
	DstKey               string       `protobuf:"bytes,40,opt,name=dstKey,proto3" json:"dstKey,omitempty"`
	DstValue             string       `protobuf:"bytes,50,opt,name=dstValue,proto3" json:"dstValue,omitempty"`
	RelationKey          string       `protobuf:"bytes,60,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WithNodesAndUsernameAndRelationRequest) Reset() {
	*m = WithNodesAndUsernameAndRelationRequest{}
}
func (m *WithNodesAndUsernameAndRelationRequest) String() string { return proto.CompactTextString(m) }
func (*WithNodesAndUsernameAndRelationRequest) ProtoMessage()    {}
func (*WithNodesAndUsernameAndRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{6}
}

func (m *WithNodesAndUsernameAndRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithNodesAndUsernameAndRelationRequest.Unmarshal(m, b)
}
func (m *WithNodesAndUsernameAndRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithNodesAndUsernameAndRelationRequest.Marshal(b, m, deterministic)
}
func (m *WithNodesAndUsernameAndRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithNodesAndUsernameAndRelationRequest.Merge(m, src)
}
func (m *WithNodesAndUsernameAndRelationRequest) XXX_Size() int {
	return xxx_messageInfo_WithNodesAndUsernameAndRelationRequest.Size(m)
}
func (m *WithNodesAndUsernameAndRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithNodesAndUsernameAndRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithNodesAndUsernameAndRelationRequest proto.InternalMessageInfo

func (m *WithNodesAndUsernameAndRelationRequest) GetNode() []*cmdb.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *WithNodesAndUsernameAndRelationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WithNodesAndUsernameAndRelationRequest) GetDstLabel() string {
	if m != nil {
		return m.DstLabel
	}
	return ""
}

func (m *WithNodesAndUsernameAndRelationRequest) GetDstKey() string {
	if m != nil {
		return m.DstKey
	}
	return ""
}

func (m *WithNodesAndUsernameAndRelationRequest) GetDstValue() string {
	if m != nil {
		return m.DstValue
	}
	return ""
}

func (m *WithNodesAndUsernameAndRelationRequest) GetRelationKey() string {
	if m != nil {
		return m.RelationKey
	}
	return ""
}

type ByNodeIdAndUsernameRequest struct {
	ModelKey             string   `protobuf:"bytes,10,opt,name=model_key,json=modelKey,proto3" json:"model_key,omitempty"`
	NodeId               string   `protobuf:"bytes,20,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Username             string   `protobuf:"bytes,30,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByNodeIdAndUsernameRequest) Reset()         { *m = ByNodeIdAndUsernameRequest{} }
func (m *ByNodeIdAndUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*ByNodeIdAndUsernameRequest) ProtoMessage()    {}
func (*ByNodeIdAndUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{7}
}

func (m *ByNodeIdAndUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByNodeIdAndUsernameRequest.Unmarshal(m, b)
}
func (m *ByNodeIdAndUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByNodeIdAndUsernameRequest.Marshal(b, m, deterministic)
}
func (m *ByNodeIdAndUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByNodeIdAndUsernameRequest.Merge(m, src)
}
func (m *ByNodeIdAndUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_ByNodeIdAndUsernameRequest.Size(m)
}
func (m *ByNodeIdAndUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByNodeIdAndUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByNodeIdAndUsernameRequest proto.InternalMessageInfo

func (m *ByNodeIdAndUsernameRequest) GetModelKey() string {
	if m != nil {
		return m.ModelKey
	}
	return ""
}

func (m *ByNodeIdAndUsernameRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ByNodeIdAndUsernameRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type ByNodeNameRequest struct {
	ModelKey             string   `protobuf:"bytes,10,opt,name=model_key,json=modelKey,proto3" json:"model_key,omitempty"`
	Name                 string   `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByNodeNameRequest) Reset()         { *m = ByNodeNameRequest{} }
func (m *ByNodeNameRequest) String() string { return proto.CompactTextString(m) }
func (*ByNodeNameRequest) ProtoMessage()    {}
func (*ByNodeNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{8}
}

func (m *ByNodeNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByNodeNameRequest.Unmarshal(m, b)
}
func (m *ByNodeNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByNodeNameRequest.Marshal(b, m, deterministic)
}
func (m *ByNodeNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByNodeNameRequest.Merge(m, src)
}
func (m *ByNodeNameRequest) XXX_Size() int {
	return xxx_messageInfo_ByNodeNameRequest.Size(m)
}
func (m *ByNodeNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByNodeNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByNodeNameRequest proto.InternalMessageInfo

func (m *ByNodeNameRequest) GetModelKey() string {
	if m != nil {
		return m.ModelKey
	}
	return ""
}

func (m *ByNodeNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ByNodeIdAndRelationNameRequest struct {
	NodeId               string   `protobuf:"bytes,10,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Name                 string   `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByNodeIdAndRelationNameRequest) Reset()         { *m = ByNodeIdAndRelationNameRequest{} }
func (m *ByNodeIdAndRelationNameRequest) String() string { return proto.CompactTextString(m) }
func (*ByNodeIdAndRelationNameRequest) ProtoMessage()    {}
func (*ByNodeIdAndRelationNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{9}
}

func (m *ByNodeIdAndRelationNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByNodeIdAndRelationNameRequest.Unmarshal(m, b)
}
func (m *ByNodeIdAndRelationNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByNodeIdAndRelationNameRequest.Marshal(b, m, deterministic)
}
func (m *ByNodeIdAndRelationNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByNodeIdAndRelationNameRequest.Merge(m, src)
}
func (m *ByNodeIdAndRelationNameRequest) XXX_Size() int {
	return xxx_messageInfo_ByNodeIdAndRelationNameRequest.Size(m)
}
func (m *ByNodeIdAndRelationNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByNodeIdAndRelationNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByNodeIdAndRelationNameRequest proto.InternalMessageInfo

func (m *ByNodeIdAndRelationNameRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ByNodeIdAndRelationNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ByModelIdAndUsernameRequest struct {
	ModelId              string   `protobuf:"bytes,20,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByModelIdAndUsernameRequest) Reset()         { *m = ByModelIdAndUsernameRequest{} }
func (m *ByModelIdAndUsernameRequest) String() string { return proto.CompactTextString(m) }
func (*ByModelIdAndUsernameRequest) ProtoMessage()    {}
func (*ByModelIdAndUsernameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{10}
}

func (m *ByModelIdAndUsernameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByModelIdAndUsernameRequest.Unmarshal(m, b)
}
func (m *ByModelIdAndUsernameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByModelIdAndUsernameRequest.Marshal(b, m, deterministic)
}
func (m *ByModelIdAndUsernameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByModelIdAndUsernameRequest.Merge(m, src)
}
func (m *ByModelIdAndUsernameRequest) XXX_Size() int {
	return xxx_messageInfo_ByModelIdAndUsernameRequest.Size(m)
}
func (m *ByModelIdAndUsernameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByModelIdAndUsernameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByModelIdAndUsernameRequest proto.InternalMessageInfo

func (m *ByModelIdAndUsernameRequest) GetModelId() string {
	if m != nil {
		return m.ModelId
	}
	return ""
}

func (m *ByModelIdAndUsernameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ByNodeIdsRequest struct {
	Ids                  []string `protobuf:"bytes,10,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByNodeIdsRequest) Reset()         { *m = ByNodeIdsRequest{} }
func (m *ByNodeIdsRequest) String() string { return proto.CompactTextString(m) }
func (*ByNodeIdsRequest) ProtoMessage()    {}
func (*ByNodeIdsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{11}
}

func (m *ByNodeIdsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByNodeIdsRequest.Unmarshal(m, b)
}
func (m *ByNodeIdsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByNodeIdsRequest.Marshal(b, m, deterministic)
}
func (m *ByNodeIdsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByNodeIdsRequest.Merge(m, src)
}
func (m *ByNodeIdsRequest) XXX_Size() int {
	return xxx_messageInfo_ByNodeIdsRequest.Size(m)
}
func (m *ByNodeIdsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByNodeIdsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByNodeIdsRequest proto.InternalMessageInfo

func (m *ByNodeIdsRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ByNodeIdsAndLabelRequest struct {
	Ids                  []string `protobuf:"bytes,10,rep,name=ids,proto3" json:"ids,omitempty"`
	Label                string   `protobuf:"bytes,20,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByNodeIdsAndLabelRequest) Reset()         { *m = ByNodeIdsAndLabelRequest{} }
func (m *ByNodeIdsAndLabelRequest) String() string { return proto.CompactTextString(m) }
func (*ByNodeIdsAndLabelRequest) ProtoMessage()    {}
func (*ByNodeIdsAndLabelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{12}
}

func (m *ByNodeIdsAndLabelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByNodeIdsAndLabelRequest.Unmarshal(m, b)
}
func (m *ByNodeIdsAndLabelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByNodeIdsAndLabelRequest.Marshal(b, m, deterministic)
}
func (m *ByNodeIdsAndLabelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByNodeIdsAndLabelRequest.Merge(m, src)
}
func (m *ByNodeIdsAndLabelRequest) XXX_Size() int {
	return xxx_messageInfo_ByNodeIdsAndLabelRequest.Size(m)
}
func (m *ByNodeIdsAndLabelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByNodeIdsAndLabelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByNodeIdsAndLabelRequest proto.InternalMessageInfo

func (m *ByNodeIdsAndLabelRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ByNodeIdsAndLabelRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type ByModelKeyAndPropertiesRequest struct {
	ModelKey             string   `protobuf:"bytes,10,opt,name=model_key,json=modelKey,proto3" json:"model_key,omitempty"`
	Property             string   `protobuf:"bytes,20,opt,name=property,proto3" json:"property,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByModelKeyAndPropertiesRequest) Reset()         { *m = ByModelKeyAndPropertiesRequest{} }
func (m *ByModelKeyAndPropertiesRequest) String() string { return proto.CompactTextString(m) }
func (*ByModelKeyAndPropertiesRequest) ProtoMessage()    {}
func (*ByModelKeyAndPropertiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{13}
}

func (m *ByModelKeyAndPropertiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByModelKeyAndPropertiesRequest.Unmarshal(m, b)
}
func (m *ByModelKeyAndPropertiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByModelKeyAndPropertiesRequest.Marshal(b, m, deterministic)
}
func (m *ByModelKeyAndPropertiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByModelKeyAndPropertiesRequest.Merge(m, src)
}
func (m *ByModelKeyAndPropertiesRequest) XXX_Size() int {
	return xxx_messageInfo_ByModelKeyAndPropertiesRequest.Size(m)
}
func (m *ByModelKeyAndPropertiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByModelKeyAndPropertiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByModelKeyAndPropertiesRequest proto.InternalMessageInfo

func (m *ByModelKeyAndPropertiesRequest) GetModelKey() string {
	if m != nil {
		return m.ModelKey
	}
	return ""
}

func (m *ByModelKeyAndPropertiesRequest) GetProperty() string {
	if m != nil {
		return m.Property
	}
	return ""
}

type WithSearchParamRequest struct {
	Label                string   `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	Properties           string   `protobuf:"bytes,20,opt,name=properties,proto3" json:"properties,omitempty"`
	VagueProperties      string   `protobuf:"bytes,30,opt,name=vague_properties,json=vagueProperties,proto3" json:"vague_properties,omitempty"`
	Page                 int32    `protobuf:"varint,40,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,50,opt,name=size,proto3" json:"size,omitempty"`
	Sort                 []string `protobuf:"bytes,60,rep,name=sort,proto3" json:"sort,omitempty"`
	Desc                 []string `protobuf:"bytes,70,rep,name=desc,proto3" json:"desc,omitempty"`
	Username             string   `protobuf:"bytes,80,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithSearchParamRequest) Reset()         { *m = WithSearchParamRequest{} }
func (m *WithSearchParamRequest) String() string { return proto.CompactTextString(m) }
func (*WithSearchParamRequest) ProtoMessage()    {}
func (*WithSearchParamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{14}
}

func (m *WithSearchParamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithSearchParamRequest.Unmarshal(m, b)
}
func (m *WithSearchParamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithSearchParamRequest.Marshal(b, m, deterministic)
}
func (m *WithSearchParamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithSearchParamRequest.Merge(m, src)
}
func (m *WithSearchParamRequest) XXX_Size() int {
	return xxx_messageInfo_WithSearchParamRequest.Size(m)
}
func (m *WithSearchParamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithSearchParamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithSearchParamRequest proto.InternalMessageInfo

func (m *WithSearchParamRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *WithSearchParamRequest) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

func (m *WithSearchParamRequest) GetVagueProperties() string {
	if m != nil {
		return m.VagueProperties
	}
	return ""
}

func (m *WithSearchParamRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *WithSearchParamRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *WithSearchParamRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *WithSearchParamRequest) GetDesc() []string {
	if m != nil {
		return m.Desc
	}
	return nil
}

func (m *WithSearchParamRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type WithChildAndParentRequest struct {
	ChildLabel           string   `protobuf:"bytes,10,opt,name=child_label,json=childLabel,proto3" json:"child_label,omitempty"`
	ParentLabel          string   `protobuf:"bytes,20,opt,name=parent_label,json=parentLabel,proto3" json:"parent_label,omitempty"`
	RelationKey          string   `protobuf:"bytes,30,opt,name=relation_key,json=relationKey,proto3" json:"relation_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithChildAndParentRequest) Reset()         { *m = WithChildAndParentRequest{} }
func (m *WithChildAndParentRequest) String() string { return proto.CompactTextString(m) }
func (*WithChildAndParentRequest) ProtoMessage()    {}
func (*WithChildAndParentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{15}
}

func (m *WithChildAndParentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithChildAndParentRequest.Unmarshal(m, b)
}
func (m *WithChildAndParentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithChildAndParentRequest.Marshal(b, m, deterministic)
}
func (m *WithChildAndParentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithChildAndParentRequest.Merge(m, src)
}
func (m *WithChildAndParentRequest) XXX_Size() int {
	return xxx_messageInfo_WithChildAndParentRequest.Size(m)
}
func (m *WithChildAndParentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithChildAndParentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithChildAndParentRequest proto.InternalMessageInfo

func (m *WithChildAndParentRequest) GetChildLabel() string {
	if m != nil {
		return m.ChildLabel
	}
	return ""
}

func (m *WithChildAndParentRequest) GetParentLabel() string {
	if m != nil {
		return m.ParentLabel
	}
	return ""
}

func (m *WithChildAndParentRequest) GetRelationKey() string {
	if m != nil {
		return m.RelationKey
	}
	return ""
}

type WithParentParamRequest struct {
	ParentLabel          string   `protobuf:"bytes,10,opt,name=parent_label,json=parentLabel,proto3" json:"parent_label,omitempty"`
	ParentId             string   `protobuf:"bytes,20,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	RelationKey          string   `protobuf:"bytes,30,opt,name=relation_key,json=relationKey,proto3" json:"relation_key,omitempty"`
	DestLabel            string   `protobuf:"bytes,40,opt,name=dest_label,json=destLabel,proto3" json:"dest_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithParentParamRequest) Reset()         { *m = WithParentParamRequest{} }
func (m *WithParentParamRequest) String() string { return proto.CompactTextString(m) }
func (*WithParentParamRequest) ProtoMessage()    {}
func (*WithParentParamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{16}
}

func (m *WithParentParamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithParentParamRequest.Unmarshal(m, b)
}
func (m *WithParentParamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithParentParamRequest.Marshal(b, m, deterministic)
}
func (m *WithParentParamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithParentParamRequest.Merge(m, src)
}
func (m *WithParentParamRequest) XXX_Size() int {
	return xxx_messageInfo_WithParentParamRequest.Size(m)
}
func (m *WithParentParamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithParentParamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithParentParamRequest proto.InternalMessageInfo

func (m *WithParentParamRequest) GetParentLabel() string {
	if m != nil {
		return m.ParentLabel
	}
	return ""
}

func (m *WithParentParamRequest) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *WithParentParamRequest) GetRelationKey() string {
	if m != nil {
		return m.RelationKey
	}
	return ""
}

func (m *WithParentParamRequest) GetDestLabel() string {
	if m != nil {
		return m.DestLabel
	}
	return ""
}

type BySqlRequest struct {
	Sql                  string   `protobuf:"bytes,10,opt,name=sql,proto3" json:"sql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BySqlRequest) Reset()         { *m = BySqlRequest{} }
func (m *BySqlRequest) String() string { return proto.CompactTextString(m) }
func (*BySqlRequest) ProtoMessage()    {}
func (*BySqlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{17}
}

func (m *BySqlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BySqlRequest.Unmarshal(m, b)
}
func (m *BySqlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BySqlRequest.Marshal(b, m, deterministic)
}
func (m *BySqlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BySqlRequest.Merge(m, src)
}
func (m *BySqlRequest) XXX_Size() int {
	return xxx_messageInfo_BySqlRequest.Size(m)
}
func (m *BySqlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BySqlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BySqlRequest proto.InternalMessageInfo

func (m *BySqlRequest) GetSql() string {
	if m != nil {
		return m.Sql
	}
	return ""
}

type SearchNodeAndCountByCqlResponse struct {
	Count                int32        `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	PageSize             int32        `protobuf:"varint,20,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	AllPage              int32        `protobuf:"varint,30,opt,name=allPage,proto3" json:"allPage,omitempty"`
	Nodes                []*cmdb.Node `protobuf:"bytes,40,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SearchNodeAndCountByCqlResponse) Reset()         { *m = SearchNodeAndCountByCqlResponse{} }
func (m *SearchNodeAndCountByCqlResponse) String() string { return proto.CompactTextString(m) }
func (*SearchNodeAndCountByCqlResponse) ProtoMessage()    {}
func (*SearchNodeAndCountByCqlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{18}
}

func (m *SearchNodeAndCountByCqlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchNodeAndCountByCqlResponse.Unmarshal(m, b)
}
func (m *SearchNodeAndCountByCqlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchNodeAndCountByCqlResponse.Marshal(b, m, deterministic)
}
func (m *SearchNodeAndCountByCqlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchNodeAndCountByCqlResponse.Merge(m, src)
}
func (m *SearchNodeAndCountByCqlResponse) XXX_Size() int {
	return xxx_messageInfo_SearchNodeAndCountByCqlResponse.Size(m)
}
func (m *SearchNodeAndCountByCqlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchNodeAndCountByCqlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchNodeAndCountByCqlResponse proto.InternalMessageInfo

func (m *SearchNodeAndCountByCqlResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SearchNodeAndCountByCqlResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchNodeAndCountByCqlResponse) GetAllPage() int32 {
	if m != nil {
		return m.AllPage
	}
	return 0
}

func (m *SearchNodeAndCountByCqlResponse) GetNodes() []*cmdb.Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type WithTableGroupRequest struct {
	TableGroup           *cmdb.TableGroup `protobuf:"bytes,10,opt,name=table_group,json=tableGroup,proto3" json:"table_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *WithTableGroupRequest) Reset()         { *m = WithTableGroupRequest{} }
func (m *WithTableGroupRequest) String() string { return proto.CompactTextString(m) }
func (*WithTableGroupRequest) ProtoMessage()    {}
func (*WithTableGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{19}
}

func (m *WithTableGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithTableGroupRequest.Unmarshal(m, b)
}
func (m *WithTableGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithTableGroupRequest.Marshal(b, m, deterministic)
}
func (m *WithTableGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithTableGroupRequest.Merge(m, src)
}
func (m *WithTableGroupRequest) XXX_Size() int {
	return xxx_messageInfo_WithTableGroupRequest.Size(m)
}
func (m *WithTableGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithTableGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithTableGroupRequest proto.InternalMessageInfo

func (m *WithTableGroupRequest) GetTableGroup() *cmdb.TableGroup {
	if m != nil {
		return m.TableGroup
	}
	return nil
}

type ByPageAndKeywordRequest struct {
	Page                 int32    `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,20,opt,name=size,proto3" json:"size,omitempty"`
	Keyword              string   `protobuf:"bytes,30,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByPageAndKeywordRequest) Reset()         { *m = ByPageAndKeywordRequest{} }
func (m *ByPageAndKeywordRequest) String() string { return proto.CompactTextString(m) }
func (*ByPageAndKeywordRequest) ProtoMessage()    {}
func (*ByPageAndKeywordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{20}
}

func (m *ByPageAndKeywordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByPageAndKeywordRequest.Unmarshal(m, b)
}
func (m *ByPageAndKeywordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByPageAndKeywordRequest.Marshal(b, m, deterministic)
}
func (m *ByPageAndKeywordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByPageAndKeywordRequest.Merge(m, src)
}
func (m *ByPageAndKeywordRequest) XXX_Size() int {
	return xxx_messageInfo_ByPageAndKeywordRequest.Size(m)
}
func (m *ByPageAndKeywordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByPageAndKeywordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByPageAndKeywordRequest proto.InternalMessageInfo

func (m *ByPageAndKeywordRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ByPageAndKeywordRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ByPageAndKeywordRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type ByJqlRequest struct {
	Jql                  string   `protobuf:"bytes,10,opt,name=jql,proto3" json:"jql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByJqlRequest) Reset()         { *m = ByJqlRequest{} }
func (m *ByJqlRequest) String() string { return proto.CompactTextString(m) }
func (*ByJqlRequest) ProtoMessage()    {}
func (*ByJqlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{21}
}

func (m *ByJqlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByJqlRequest.Unmarshal(m, b)
}
func (m *ByJqlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByJqlRequest.Marshal(b, m, deterministic)
}
func (m *ByJqlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByJqlRequest.Merge(m, src)
}
func (m *ByJqlRequest) XXX_Size() int {
	return xxx_messageInfo_ByJqlRequest.Size(m)
}
func (m *ByJqlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByJqlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByJqlRequest proto.InternalMessageInfo

func (m *ByJqlRequest) GetJql() string {
	if m != nil {
		return m.Jql
	}
	return ""
}

type ByCqlRequest struct {
	Cql                  string   `protobuf:"bytes,10,opt,name=cql,proto3" json:"cql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByCqlRequest) Reset()         { *m = ByCqlRequest{} }
func (m *ByCqlRequest) String() string { return proto.CompactTextString(m) }
func (*ByCqlRequest) ProtoMessage()    {}
func (*ByCqlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{22}
}

func (m *ByCqlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByCqlRequest.Unmarshal(m, b)
}
func (m *ByCqlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByCqlRequest.Marshal(b, m, deterministic)
}
func (m *ByCqlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByCqlRequest.Merge(m, src)
}
func (m *ByCqlRequest) XXX_Size() int {
	return xxx_messageInfo_ByCqlRequest.Size(m)
}
func (m *ByCqlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByCqlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByCqlRequest proto.InternalMessageInfo

func (m *ByCqlRequest) GetCql() string {
	if m != nil {
		return m.Cql
	}
	return ""
}

type ByModelIdAndRelationPropertyRequest struct {
	ModelId              string                 `protobuf:"bytes,10,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Property             *cmdb.RelationProperty `protobuf:"bytes,20,opt,name=property,proto3" json:"property,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ByModelIdAndRelationPropertyRequest) Reset()         { *m = ByModelIdAndRelationPropertyRequest{} }
func (m *ByModelIdAndRelationPropertyRequest) String() string { return proto.CompactTextString(m) }
func (*ByModelIdAndRelationPropertyRequest) ProtoMessage()    {}
func (*ByModelIdAndRelationPropertyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{23}
}

func (m *ByModelIdAndRelationPropertyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByModelIdAndRelationPropertyRequest.Unmarshal(m, b)
}
func (m *ByModelIdAndRelationPropertyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByModelIdAndRelationPropertyRequest.Marshal(b, m, deterministic)
}
func (m *ByModelIdAndRelationPropertyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByModelIdAndRelationPropertyRequest.Merge(m, src)
}
func (m *ByModelIdAndRelationPropertyRequest) XXX_Size() int {
	return xxx_messageInfo_ByModelIdAndRelationPropertyRequest.Size(m)
}
func (m *ByModelIdAndRelationPropertyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByModelIdAndRelationPropertyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByModelIdAndRelationPropertyRequest proto.InternalMessageInfo

func (m *ByModelIdAndRelationPropertyRequest) GetModelId() string {
	if m != nil {
		return m.ModelId
	}
	return ""
}

func (m *ByModelIdAndRelationPropertyRequest) GetProperty() *cmdb.RelationProperty {
	if m != nil {
		return m.Property
	}
	return nil
}

type ByLabelNameAndPropertiesRequest struct {
	LabelName            string   `protobuf:"bytes,10,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	Properties           string   `protobuf:"bytes,20,opt,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByLabelNameAndPropertiesRequest) Reset()         { *m = ByLabelNameAndPropertiesRequest{} }
func (m *ByLabelNameAndPropertiesRequest) String() string { return proto.CompactTextString(m) }
func (*ByLabelNameAndPropertiesRequest) ProtoMessage()    {}
func (*ByLabelNameAndPropertiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{24}
}

func (m *ByLabelNameAndPropertiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByLabelNameAndPropertiesRequest.Unmarshal(m, b)
}
func (m *ByLabelNameAndPropertiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByLabelNameAndPropertiesRequest.Marshal(b, m, deterministic)
}
func (m *ByLabelNameAndPropertiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByLabelNameAndPropertiesRequest.Merge(m, src)
}
func (m *ByLabelNameAndPropertiesRequest) XXX_Size() int {
	return xxx_messageInfo_ByLabelNameAndPropertiesRequest.Size(m)
}
func (m *ByLabelNameAndPropertiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ByLabelNameAndPropertiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ByLabelNameAndPropertiesRequest proto.InternalMessageInfo

func (m *ByLabelNameAndPropertiesRequest) GetLabelName() string {
	if m != nil {
		return m.LabelName
	}
	return ""
}

func (m *ByLabelNameAndPropertiesRequest) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

type WithFileInfoRequest struct {
	File                 []byte   `protobuf:"bytes,10,opt,name=file,proto3" json:"file,omitempty"`
	Filename             string   `protobuf:"bytes,20,opt,name=filename,proto3" json:"filename,omitempty"`
	Username             string   `protobuf:"bytes,30,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithFileInfoRequest) Reset()         { *m = WithFileInfoRequest{} }
func (m *WithFileInfoRequest) String() string { return proto.CompactTextString(m) }
func (*WithFileInfoRequest) ProtoMessage()    {}
func (*WithFileInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{25}
}

func (m *WithFileInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithFileInfoRequest.Unmarshal(m, b)
}
func (m *WithFileInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithFileInfoRequest.Marshal(b, m, deterministic)
}
func (m *WithFileInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithFileInfoRequest.Merge(m, src)
}
func (m *WithFileInfoRequest) XXX_Size() int {
	return xxx_messageInfo_WithFileInfoRequest.Size(m)
}
func (m *WithFileInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithFileInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithFileInfoRequest proto.InternalMessageInfo

func (m *WithFileInfoRequest) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *WithFileInfoRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *WithFileInfoRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type CreateNodeResponse struct {
	Node                 *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateNodeResponse) Reset()         { *m = CreateNodeResponse{} }
func (m *CreateNodeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNodeResponse) ProtoMessage()    {}
func (*CreateNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{26}
}

func (m *CreateNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodeResponse.Unmarshal(m, b)
}
func (m *CreateNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodeResponse.Marshal(b, m, deterministic)
}
func (m *CreateNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodeResponse.Merge(m, src)
}
func (m *CreateNodeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNodeResponse.Size(m)
}
func (m *CreateNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodeResponse proto.InternalMessageInfo

func (m *CreateNodeResponse) GetNode() *cmdb.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type CreateNodesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNodesResponse) Reset()         { *m = CreateNodesResponse{} }
func (m *CreateNodesResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNodesResponse) ProtoMessage()    {}
func (*CreateNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{27}
}

func (m *CreateNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodesResponse.Unmarshal(m, b)
}
func (m *CreateNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodesResponse.Marshal(b, m, deterministic)
}
func (m *CreateNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodesResponse.Merge(m, src)
}
func (m *CreateNodesResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNodesResponse.Size(m)
}
func (m *CreateNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodesResponse proto.InternalMessageInfo

type UpdateNodeResponse struct {
	Node                 *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateNodeResponse) Reset()         { *m = UpdateNodeResponse{} }
func (m *UpdateNodeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNodeResponse) ProtoMessage()    {}
func (*UpdateNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{28}
}

func (m *UpdateNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodeResponse.Unmarshal(m, b)
}
func (m *UpdateNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodeResponse.Merge(m, src)
}
func (m *UpdateNodeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNodeResponse.Size(m)
}
func (m *UpdateNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodeResponse proto.InternalMessageInfo

func (m *UpdateNodeResponse) GetNode() *cmdb.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type ExistsNodeResponse struct {
	Exists               bool     `protobuf:"varint,10,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExistsNodeResponse) Reset()         { *m = ExistsNodeResponse{} }
func (m *ExistsNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ExistsNodeResponse) ProtoMessage()    {}
func (*ExistsNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{29}
}

func (m *ExistsNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsNodeResponse.Unmarshal(m, b)
}
func (m *ExistsNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsNodeResponse.Marshal(b, m, deterministic)
}
func (m *ExistsNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsNodeResponse.Merge(m, src)
}
func (m *ExistsNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ExistsNodeResponse.Size(m)
}
func (m *ExistsNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsNodeResponse proto.InternalMessageInfo

func (m *ExistsNodeResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type UpdateNodesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateNodesResponse) Reset()         { *m = UpdateNodesResponse{} }
func (m *UpdateNodesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateNodesResponse) ProtoMessage()    {}
func (*UpdateNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{30}
}

func (m *UpdateNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNodesResponse.Unmarshal(m, b)
}
func (m *UpdateNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNodesResponse.Marshal(b, m, deterministic)
}
func (m *UpdateNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNodesResponse.Merge(m, src)
}
func (m *UpdateNodesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateNodesResponse.Size(m)
}
func (m *UpdateNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNodesResponse proto.InternalMessageInfo

type DeleteNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeResponse) Reset()         { *m = DeleteNodeResponse{} }
func (m *DeleteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeResponse) ProtoMessage()    {}
func (*DeleteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{31}
}

func (m *DeleteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeResponse.Unmarshal(m, b)
}
func (m *DeleteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeResponse.Merge(m, src)
}
func (m *DeleteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeResponse.Size(m)
}
func (m *DeleteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeResponse proto.InternalMessageInfo

type DeleteNodesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodesResponse) Reset()         { *m = DeleteNodesResponse{} }
func (m *DeleteNodesResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNodesResponse) ProtoMessage()    {}
func (*DeleteNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{32}
}

func (m *DeleteNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodesResponse.Unmarshal(m, b)
}
func (m *DeleteNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodesResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodesResponse.Merge(m, src)
}
func (m *DeleteNodesResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNodesResponse.Size(m)
}
func (m *DeleteNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodesResponse proto.InternalMessageInfo

type ClearTableResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearTableResponse) Reset()         { *m = ClearTableResponse{} }
func (m *ClearTableResponse) String() string { return proto.CompactTextString(m) }
func (*ClearTableResponse) ProtoMessage()    {}
func (*ClearTableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{33}
}

func (m *ClearTableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearTableResponse.Unmarshal(m, b)
}
func (m *ClearTableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearTableResponse.Marshal(b, m, deterministic)
}
func (m *ClearTableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearTableResponse.Merge(m, src)
}
func (m *ClearTableResponse) XXX_Size() int {
	return xxx_messageInfo_ClearTableResponse.Size(m)
}
func (m *ClearTableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearTableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearTableResponse proto.InternalMessageInfo

type ListNodeResponse struct {
	Count                int32        `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	PageSize             int32        `protobuf:"varint,20,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	AllPage              int32        `protobuf:"varint,30,opt,name=allPage,proto3" json:"allPage,omitempty"`
	Nodes                []*cmdb.Node `protobuf:"bytes,40,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListNodeResponse) Reset()         { *m = ListNodeResponse{} }
func (m *ListNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodeResponse) ProtoMessage()    {}
func (*ListNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{34}
}

func (m *ListNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeResponse.Unmarshal(m, b)
}
func (m *ListNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeResponse.Marshal(b, m, deterministic)
}
func (m *ListNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeResponse.Merge(m, src)
}
func (m *ListNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodeResponse.Size(m)
}
func (m *ListNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeResponse proto.InternalMessageInfo

func (m *ListNodeResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListNodeResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListNodeResponse) GetAllPage() int32 {
	if m != nil {
		return m.AllPage
	}
	return 0
}

func (m *ListNodeResponse) GetNodes() []*cmdb.Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type GetNodeResponse struct {
	Node                 *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetNodeResponse) Reset()         { *m = GetNodeResponse{} }
func (m *GetNodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeResponse) ProtoMessage()    {}
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{35}
}

func (m *GetNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeResponse.Unmarshal(m, b)
}
func (m *GetNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeResponse.Merge(m, src)
}
func (m *GetNodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeResponse.Size(m)
}
func (m *GetNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeResponse proto.InternalMessageInfo

func (m *GetNodeResponse) GetNode() *cmdb.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type CountNodeRelationsResponse struct {
	Count                int32    `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountNodeRelationsResponse) Reset()         { *m = CountNodeRelationsResponse{} }
func (m *CountNodeRelationsResponse) String() string { return proto.CompactTextString(m) }
func (*CountNodeRelationsResponse) ProtoMessage()    {}
func (*CountNodeRelationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{36}
}

func (m *CountNodeRelationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountNodeRelationsResponse.Unmarshal(m, b)
}
func (m *CountNodeRelationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountNodeRelationsResponse.Marshal(b, m, deterministic)
}
func (m *CountNodeRelationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountNodeRelationsResponse.Merge(m, src)
}
func (m *CountNodeRelationsResponse) XXX_Size() int {
	return xxx_messageInfo_CountNodeRelationsResponse.Size(m)
}
func (m *CountNodeRelationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountNodeRelationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountNodeRelationsResponse proto.InternalMessageInfo

func (m *CountNodeRelationsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type CountNodesRelationsResponse struct {
	Count                int32    `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountNodesRelationsResponse) Reset()         { *m = CountNodesRelationsResponse{} }
func (m *CountNodesRelationsResponse) String() string { return proto.CompactTextString(m) }
func (*CountNodesRelationsResponse) ProtoMessage()    {}
func (*CountNodesRelationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{37}
}

func (m *CountNodesRelationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountNodesRelationsResponse.Unmarshal(m, b)
}
func (m *CountNodesRelationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountNodesRelationsResponse.Marshal(b, m, deterministic)
}
func (m *CountNodesRelationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountNodesRelationsResponse.Merge(m, src)
}
func (m *CountNodesRelationsResponse) XXX_Size() int {
	return xxx_messageInfo_CountNodesRelationsResponse.Size(m)
}
func (m *CountNodesRelationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountNodesRelationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountNodesRelationsResponse proto.InternalMessageInfo

func (m *CountNodesRelationsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchNodeAutoCompleteResponse struct {
	Strs                 []string `protobuf:"bytes,10,rep,name=strs,proto3" json:"strs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchNodeAutoCompleteResponse) Reset()         { *m = SearchNodeAutoCompleteResponse{} }
func (m *SearchNodeAutoCompleteResponse) String() string { return proto.CompactTextString(m) }
func (*SearchNodeAutoCompleteResponse) ProtoMessage()    {}
func (*SearchNodeAutoCompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{38}
}

func (m *SearchNodeAutoCompleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchNodeAutoCompleteResponse.Unmarshal(m, b)
}
func (m *SearchNodeAutoCompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchNodeAutoCompleteResponse.Marshal(b, m, deterministic)
}
func (m *SearchNodeAutoCompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchNodeAutoCompleteResponse.Merge(m, src)
}
func (m *SearchNodeAutoCompleteResponse) XXX_Size() int {
	return xxx_messageInfo_SearchNodeAutoCompleteResponse.Size(m)
}
func (m *SearchNodeAutoCompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchNodeAutoCompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchNodeAutoCompleteResponse proto.InternalMessageInfo

func (m *SearchNodeAutoCompleteResponse) GetStrs() []string {
	if m != nil {
		return m.Strs
	}
	return nil
}

type SearchRelationResponse struct {
	UserRef              map[string]string `protobuf:"bytes,10,rep,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SearchRelationResponse) Reset()         { *m = SearchRelationResponse{} }
func (m *SearchRelationResponse) String() string { return proto.CompactTextString(m) }
func (*SearchRelationResponse) ProtoMessage()    {}
func (*SearchRelationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{39}
}

func (m *SearchRelationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRelationResponse.Unmarshal(m, b)
}
func (m *SearchRelationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRelationResponse.Marshal(b, m, deterministic)
}
func (m *SearchRelationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRelationResponse.Merge(m, src)
}
func (m *SearchRelationResponse) XXX_Size() int {
	return xxx_messageInfo_SearchRelationResponse.Size(m)
}
func (m *SearchRelationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRelationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRelationResponse proto.InternalMessageInfo

func (m *SearchRelationResponse) GetUserRef() map[string]string {
	if m != nil {
		return m.UserRef
	}
	return nil
}

type GetNodeRelationResponse struct {
	Exists               bool     `protobuf:"varint,10,opt,name=exists,proto3" json:"exists,omitempty"`
	Link                 int32    `protobuf:"varint,20,opt,name=link,proto3" json:"link,omitempty"`
	Linked               int32    `protobuf:"varint,30,opt,name=linked,proto3" json:"linked,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRelationResponse) Reset()         { *m = GetNodeRelationResponse{} }
func (m *GetNodeRelationResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeRelationResponse) ProtoMessage()    {}
func (*GetNodeRelationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{40}
}

func (m *GetNodeRelationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRelationResponse.Unmarshal(m, b)
}
func (m *GetNodeRelationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRelationResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeRelationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRelationResponse.Merge(m, src)
}
func (m *GetNodeRelationResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeRelationResponse.Size(m)
}
func (m *GetNodeRelationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRelationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRelationResponse proto.InternalMessageInfo

func (m *GetNodeRelationResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *GetNodeRelationResponse) GetLink() int32 {
	if m != nil {
		return m.Link
	}
	return 0
}

func (m *GetNodeRelationResponse) GetLinked() int32 {
	if m != nil {
		return m.Linked
	}
	return 0
}

type DownloadExcelResponse struct {
	File                 []byte   `protobuf:"bytes,10,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadExcelResponse) Reset()         { *m = DownloadExcelResponse{} }
func (m *DownloadExcelResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadExcelResponse) ProtoMessage()    {}
func (*DownloadExcelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{41}
}

func (m *DownloadExcelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadExcelResponse.Unmarshal(m, b)
}
func (m *DownloadExcelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadExcelResponse.Marshal(b, m, deterministic)
}
func (m *DownloadExcelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadExcelResponse.Merge(m, src)
}
func (m *DownloadExcelResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadExcelResponse.Size(m)
}
func (m *DownloadExcelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadExcelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadExcelResponse proto.InternalMessageInfo

func (m *DownloadExcelResponse) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type GetNodeCountResponse struct {
	Count                int32    `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeCountResponse) Reset()         { *m = GetNodeCountResponse{} }
func (m *GetNodeCountResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeCountResponse) ProtoMessage()    {}
func (*GetNodeCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{42}
}

func (m *GetNodeCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeCountResponse.Unmarshal(m, b)
}
func (m *GetNodeCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeCountResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeCountResponse.Merge(m, src)
}
func (m *GetNodeCountResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeCountResponse.Size(m)
}
func (m *GetNodeCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeCountResponse proto.InternalMessageInfo

func (m *GetNodeCountResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TreeStructRequest struct {
	Root                 string   `protobuf:"bytes,10,opt,name=root,proto3" json:"root,omitempty"`
	RelationType         string   `protobuf:"bytes,20,opt,name=relation_type,json=relationType,proto3" json:"relation_type,omitempty"`
	Limits               []string `protobuf:"bytes,30,rep,name=limits,proto3" json:"limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TreeStructRequest) Reset()         { *m = TreeStructRequest{} }
func (m *TreeStructRequest) String() string { return proto.CompactTextString(m) }
func (*TreeStructRequest) ProtoMessage()    {}
func (*TreeStructRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{43}
}

func (m *TreeStructRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TreeStructRequest.Unmarshal(m, b)
}
func (m *TreeStructRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TreeStructRequest.Marshal(b, m, deterministic)
}
func (m *TreeStructRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TreeStructRequest.Merge(m, src)
}
func (m *TreeStructRequest) XXX_Size() int {
	return xxx_messageInfo_TreeStructRequest.Size(m)
}
func (m *TreeStructRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TreeStructRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TreeStructRequest proto.InternalMessageInfo

func (m *TreeStructRequest) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *TreeStructRequest) GetRelationType() string {
	if m != nil {
		return m.RelationType
	}
	return ""
}

func (m *TreeStructRequest) GetLimits() []string {
	if m != nil {
		return m.Limits
	}
	return nil
}

type TreeStructResponse struct {
	Data                 []byte   `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TreeStructResponse) Reset()         { *m = TreeStructResponse{} }
func (m *TreeStructResponse) String() string { return proto.CompactTextString(m) }
func (*TreeStructResponse) ProtoMessage()    {}
func (*TreeStructResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{44}
}

func (m *TreeStructResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TreeStructResponse.Unmarshal(m, b)
}
func (m *TreeStructResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TreeStructResponse.Marshal(b, m, deterministic)
}
func (m *TreeStructResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TreeStructResponse.Merge(m, src)
}
func (m *TreeStructResponse) XXX_Size() int {
	return xxx_messageInfo_TreeStructResponse.Size(m)
}
func (m *TreeStructResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TreeStructResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TreeStructResponse proto.InternalMessageInfo

func (m *TreeStructResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateRelationRequest struct {
	SrcKey               string   `protobuf:"bytes,10,opt,name=srcKey,proto3" json:"srcKey,omitempty"`
	SrcLabel             string   `protobuf:"bytes,20,opt,name=srcLabel,proto3" json:"srcLabel,omitempty"`
	SrcValue             string   `protobuf:"bytes,30,opt,name=srcValue,proto3" json:"srcValue,omitempty"`
	DstKey               string   `protobuf:"bytes,40,opt,name=dstKey,proto3" json:"dstKey,omitempty"`
	DstLabel             string   `protobuf:"bytes,50,opt,name=dstLabel,proto3" json:"dstLabel,omitempty"`
	DstValue             string   `protobuf:"bytes,60,opt,name=dstValue,proto3" json:"dstValue,omitempty"`
	RelationKey          string   `protobuf:"bytes,70,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRelationRequest) Reset()         { *m = CreateRelationRequest{} }
func (m *CreateRelationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRelationRequest) ProtoMessage()    {}
func (*CreateRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{45}
}

func (m *CreateRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRelationRequest.Unmarshal(m, b)
}
func (m *CreateRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRelationRequest.Marshal(b, m, deterministic)
}
func (m *CreateRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRelationRequest.Merge(m, src)
}
func (m *CreateRelationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRelationRequest.Size(m)
}
func (m *CreateRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRelationRequest proto.InternalMessageInfo

func (m *CreateRelationRequest) GetSrcKey() string {
	if m != nil {
		return m.SrcKey
	}
	return ""
}

func (m *CreateRelationRequest) GetSrcLabel() string {
	if m != nil {
		return m.SrcLabel
	}
	return ""
}

func (m *CreateRelationRequest) GetSrcValue() string {
	if m != nil {
		return m.SrcValue
	}
	return ""
}

func (m *CreateRelationRequest) GetDstKey() string {
	if m != nil {
		return m.DstKey
	}
	return ""
}

func (m *CreateRelationRequest) GetDstLabel() string {
	if m != nil {
		return m.DstLabel
	}
	return ""
}

func (m *CreateRelationRequest) GetDstValue() string {
	if m != nil {
		return m.DstValue
	}
	return ""
}

func (m *CreateRelationRequest) GetRelationKey() string {
	if m != nil {
		return m.RelationKey
	}
	return ""
}

type CreateRelationsRequest struct {
	Request              []*CreateRelationRequest `protobuf:"bytes,10,rep,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CreateRelationsRequest) Reset()         { *m = CreateRelationsRequest{} }
func (m *CreateRelationsRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRelationsRequest) ProtoMessage()    {}
func (*CreateRelationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{46}
}

func (m *CreateRelationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRelationsRequest.Unmarshal(m, b)
}
func (m *CreateRelationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRelationsRequest.Marshal(b, m, deterministic)
}
func (m *CreateRelationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRelationsRequest.Merge(m, src)
}
func (m *CreateRelationsRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRelationsRequest.Size(m)
}
func (m *CreateRelationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRelationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRelationsRequest proto.InternalMessageInfo

func (m *CreateRelationsRequest) GetRequest() []*CreateRelationRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type ClearRelationRequest struct {
	SrcId                string   `protobuf:"bytes,10,opt,name=srcId,proto3" json:"srcId,omitempty"`
	SrcLabel             string   `protobuf:"bytes,20,opt,name=srcLabel,proto3" json:"srcLabel,omitempty"`
	DstId                string   `protobuf:"bytes,30,opt,name=dstId,proto3" json:"dstId,omitempty"`
	DstLabel             string   `protobuf:"bytes,40,opt,name=dstLabel,proto3" json:"dstLabel,omitempty"`
	RelationKey          string   `protobuf:"bytes,50,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearRelationRequest) Reset()         { *m = ClearRelationRequest{} }
func (m *ClearRelationRequest) String() string { return proto.CompactTextString(m) }
func (*ClearRelationRequest) ProtoMessage()    {}
func (*ClearRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{47}
}

func (m *ClearRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearRelationRequest.Unmarshal(m, b)
}
func (m *ClearRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearRelationRequest.Marshal(b, m, deterministic)
}
func (m *ClearRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearRelationRequest.Merge(m, src)
}
func (m *ClearRelationRequest) XXX_Size() int {
	return xxx_messageInfo_ClearRelationRequest.Size(m)
}
func (m *ClearRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearRelationRequest proto.InternalMessageInfo

func (m *ClearRelationRequest) GetSrcId() string {
	if m != nil {
		return m.SrcId
	}
	return ""
}

func (m *ClearRelationRequest) GetSrcLabel() string {
	if m != nil {
		return m.SrcLabel
	}
	return ""
}

func (m *ClearRelationRequest) GetDstId() string {
	if m != nil {
		return m.DstId
	}
	return ""
}

func (m *ClearRelationRequest) GetDstLabel() string {
	if m != nil {
		return m.DstLabel
	}
	return ""
}

func (m *ClearRelationRequest) GetRelationKey() string {
	if m != nil {
		return m.RelationKey
	}
	return ""
}

type ClearRelationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearRelationResponse) Reset()         { *m = ClearRelationResponse{} }
func (m *ClearRelationResponse) String() string { return proto.CompactTextString(m) }
func (*ClearRelationResponse) ProtoMessage()    {}
func (*ClearRelationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{48}
}

func (m *ClearRelationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearRelationResponse.Unmarshal(m, b)
}
func (m *ClearRelationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearRelationResponse.Marshal(b, m, deterministic)
}
func (m *ClearRelationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearRelationResponse.Merge(m, src)
}
func (m *ClearRelationResponse) XXX_Size() int {
	return xxx_messageInfo_ClearRelationResponse.Size(m)
}
func (m *ClearRelationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearRelationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearRelationResponse proto.InternalMessageInfo

type CreateRelationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRelationResponse) Reset()         { *m = CreateRelationResponse{} }
func (m *CreateRelationResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRelationResponse) ProtoMessage()    {}
func (*CreateRelationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{49}
}

func (m *CreateRelationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRelationResponse.Unmarshal(m, b)
}
func (m *CreateRelationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRelationResponse.Marshal(b, m, deterministic)
}
func (m *CreateRelationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRelationResponse.Merge(m, src)
}
func (m *CreateRelationResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRelationResponse.Size(m)
}
func (m *CreateRelationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRelationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRelationResponse proto.InternalMessageInfo

type CreateRelationsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRelationsResponse) Reset()         { *m = CreateRelationsResponse{} }
func (m *CreateRelationsResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRelationsResponse) ProtoMessage()    {}
func (*CreateRelationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{50}
}

func (m *CreateRelationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRelationsResponse.Unmarshal(m, b)
}
func (m *CreateRelationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRelationsResponse.Marshal(b, m, deterministic)
}
func (m *CreateRelationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRelationsResponse.Merge(m, src)
}
func (m *CreateRelationsResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRelationsResponse.Size(m)
}
func (m *CreateRelationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRelationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRelationsResponse proto.InternalMessageInfo

type ClearAllRelationRequest struct {
	Id                   string   `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	ModelKey             string   `protobuf:"bytes,20,opt,name=modelKey,proto3" json:"modelKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearAllRelationRequest) Reset()         { *m = ClearAllRelationRequest{} }
func (m *ClearAllRelationRequest) String() string { return proto.CompactTextString(m) }
func (*ClearAllRelationRequest) ProtoMessage()    {}
func (*ClearAllRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{51}
}

func (m *ClearAllRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearAllRelationRequest.Unmarshal(m, b)
}
func (m *ClearAllRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearAllRelationRequest.Marshal(b, m, deterministic)
}
func (m *ClearAllRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearAllRelationRequest.Merge(m, src)
}
func (m *ClearAllRelationRequest) XXX_Size() int {
	return xxx_messageInfo_ClearAllRelationRequest.Size(m)
}
func (m *ClearAllRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearAllRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearAllRelationRequest proto.InternalMessageInfo

func (m *ClearAllRelationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClearAllRelationRequest) GetModelKey() string {
	if m != nil {
		return m.ModelKey
	}
	return ""
}

type GetRelationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRelationRequest) Reset()         { *m = GetRelationRequest{} }
func (m *GetRelationRequest) String() string { return proto.CompactTextString(m) }
func (*GetRelationRequest) ProtoMessage()    {}
func (*GetRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{52}
}

func (m *GetRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelationRequest.Unmarshal(m, b)
}
func (m *GetRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelationRequest.Marshal(b, m, deterministic)
}
func (m *GetRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelationRequest.Merge(m, src)
}
func (m *GetRelationRequest) XXX_Size() int {
	return xxx_messageInfo_GetRelationRequest.Size(m)
}
func (m *GetRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelationRequest proto.InternalMessageInfo

type NodesInstanceRequest struct {
	Id                   string              `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	ModelKey             string              `protobuf:"bytes,20,opt,name=modelKey,proto3" json:"modelKey,omitempty"`
	Page                 int32               `protobuf:"varint,30,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32               `protobuf:"varint,40,opt,name=size,proto3" json:"size,omitempty"`
	Search               map[string]string   `protobuf:"bytes,50,rep,name=search,proto3" json:"search,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Options              map[string]*Options `protobuf:"bytes,60,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NodesInstanceRequest) Reset()         { *m = NodesInstanceRequest{} }
func (m *NodesInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*NodesInstanceRequest) ProtoMessage()    {}
func (*NodesInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{53}
}

func (m *NodesInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesInstanceRequest.Unmarshal(m, b)
}
func (m *NodesInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesInstanceRequest.Marshal(b, m, deterministic)
}
func (m *NodesInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesInstanceRequest.Merge(m, src)
}
func (m *NodesInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_NodesInstanceRequest.Size(m)
}
func (m *NodesInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodesInstanceRequest proto.InternalMessageInfo

func (m *NodesInstanceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodesInstanceRequest) GetModelKey() string {
	if m != nil {
		return m.ModelKey
	}
	return ""
}

func (m *NodesInstanceRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *NodesInstanceRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *NodesInstanceRequest) GetSearch() map[string]string {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *NodesInstanceRequest) GetOptions() map[string]*Options {
	if m != nil {
		return m.Options
	}
	return nil
}

type Options struct {
	Options              []string `protobuf:"bytes,10,rep,name=Options,proto3" json:"Options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Options) Reset()         { *m = Options{} }
func (m *Options) String() string { return proto.CompactTextString(m) }
func (*Options) ProtoMessage()    {}
func (*Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{54}
}

func (m *Options) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Options.Unmarshal(m, b)
}
func (m *Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Options.Marshal(b, m, deterministic)
}
func (m *Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Options.Merge(m, src)
}
func (m *Options) XXX_Size() int {
	return xxx_messageInfo_Options.Size(m)
}
func (m *Options) XXX_DiscardUnknown() {
	xxx_messageInfo_Options.DiscardUnknown(m)
}

var xxx_messageInfo_Options proto.InternalMessageInfo

func (m *Options) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

type NodesInstanceResponse struct {
	Count                int32    `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	PageSize             int32    `protobuf:"varint,20,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	AllPage              int32    `protobuf:"varint,30,opt,name=allPage,proto3" json:"allPage,omitempty"`
	FirewallObject       string   `protobuf:"bytes,40,opt,name=firewallObject,proto3" json:"firewallObject,omitempty"`
	FilterObject         string   `protobuf:"bytes,50,opt,name=filterObject,proto3" json:"filterObject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesInstanceResponse) Reset()         { *m = NodesInstanceResponse{} }
func (m *NodesInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*NodesInstanceResponse) ProtoMessage()    {}
func (*NodesInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{55}
}

func (m *NodesInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesInstanceResponse.Unmarshal(m, b)
}
func (m *NodesInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesInstanceResponse.Marshal(b, m, deterministic)
}
func (m *NodesInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesInstanceResponse.Merge(m, src)
}
func (m *NodesInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_NodesInstanceResponse.Size(m)
}
func (m *NodesInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodesInstanceResponse proto.InternalMessageInfo

func (m *NodesInstanceResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *NodesInstanceResponse) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *NodesInstanceResponse) GetAllPage() int32 {
	if m != nil {
		return m.AllPage
	}
	return 0
}

func (m *NodesInstanceResponse) GetFirewallObject() string {
	if m != nil {
		return m.FirewallObject
	}
	return ""
}

func (m *NodesInstanceResponse) GetFilterObject() string {
	if m != nil {
		return m.FilterObject
	}
	return ""
}

type ClearAllRelationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearAllRelationResponse) Reset()         { *m = ClearAllRelationResponse{} }
func (m *ClearAllRelationResponse) String() string { return proto.CompactTextString(m) }
func (*ClearAllRelationResponse) ProtoMessage()    {}
func (*ClearAllRelationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{56}
}

func (m *ClearAllRelationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearAllRelationResponse.Unmarshal(m, b)
}
func (m *ClearAllRelationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearAllRelationResponse.Marshal(b, m, deterministic)
}
func (m *ClearAllRelationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearAllRelationResponse.Merge(m, src)
}
func (m *ClearAllRelationResponse) XXX_Size() int {
	return xxx_messageInfo_ClearAllRelationResponse.Size(m)
}
func (m *ClearAllRelationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearAllRelationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearAllRelationResponse proto.InternalMessageInfo

type GetNodeRelationTreeDetailRequest struct {
	Root                 string   `protobuf:"bytes,10,opt,name=root,proto3" json:"root,omitempty"`
	NodeId               string   `protobuf:"bytes,20,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	RelationType         string   `protobuf:"bytes,30,opt,name=relationType,proto3" json:"relationType,omitempty"`
	Limits               []string `protobuf:"bytes,40,rep,name=limits,proto3" json:"limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRelationTreeDetailRequest) Reset()         { *m = GetNodeRelationTreeDetailRequest{} }
func (m *GetNodeRelationTreeDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeRelationTreeDetailRequest) ProtoMessage()    {}
func (*GetNodeRelationTreeDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{57}
}

func (m *GetNodeRelationTreeDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRelationTreeDetailRequest.Unmarshal(m, b)
}
func (m *GetNodeRelationTreeDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRelationTreeDetailRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeRelationTreeDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRelationTreeDetailRequest.Merge(m, src)
}
func (m *GetNodeRelationTreeDetailRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeRelationTreeDetailRequest.Size(m)
}
func (m *GetNodeRelationTreeDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRelationTreeDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRelationTreeDetailRequest proto.InternalMessageInfo

func (m *GetNodeRelationTreeDetailRequest) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *GetNodeRelationTreeDetailRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *GetNodeRelationTreeDetailRequest) GetRelationType() string {
	if m != nil {
		return m.RelationType
	}
	return ""
}

func (m *GetNodeRelationTreeDetailRequest) GetLimits() []string {
	if m != nil {
		return m.Limits
	}
	return nil
}

type CreateTableGroupResponse struct {
	Id                   string   `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTableGroupResponse) Reset()         { *m = CreateTableGroupResponse{} }
func (m *CreateTableGroupResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTableGroupResponse) ProtoMessage()    {}
func (*CreateTableGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{58}
}

func (m *CreateTableGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTableGroupResponse.Unmarshal(m, b)
}
func (m *CreateTableGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTableGroupResponse.Marshal(b, m, deterministic)
}
func (m *CreateTableGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTableGroupResponse.Merge(m, src)
}
func (m *CreateTableGroupResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTableGroupResponse.Size(m)
}
func (m *CreateTableGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTableGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTableGroupResponse proto.InternalMessageInfo

func (m *CreateTableGroupResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetNodeRelationTreeDetailResponse struct {
	Items                []*GetNodeRelationTreeDetailItem `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *GetNodeRelationTreeDetailResponse) Reset()         { *m = GetNodeRelationTreeDetailResponse{} }
func (m *GetNodeRelationTreeDetailResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeRelationTreeDetailResponse) ProtoMessage()    {}
func (*GetNodeRelationTreeDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{59}
}

func (m *GetNodeRelationTreeDetailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRelationTreeDetailResponse.Unmarshal(m, b)
}
func (m *GetNodeRelationTreeDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRelationTreeDetailResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeRelationTreeDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRelationTreeDetailResponse.Merge(m, src)
}
func (m *GetNodeRelationTreeDetailResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeRelationTreeDetailResponse.Size(m)
}
func (m *GetNodeRelationTreeDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRelationTreeDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRelationTreeDetailResponse proto.InternalMessageInfo

func (m *GetNodeRelationTreeDetailResponse) GetItems() []*GetNodeRelationTreeDetailItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetNodeRelationTreeDetailItem struct {
	Icon                 string   `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty"`
	ModelKey             string   `protobuf:"bytes,20,opt,name=modelKey,proto3" json:"modelKey,omitempty"`
	ModelName            string   `protobuf:"bytes,30,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Ids                  []string `protobuf:"bytes,40,rep,name=ids,proto3" json:"ids,omitempty"`
	Limits               []string `protobuf:"bytes,50,rep,name=limits,proto3" json:"limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeRelationTreeDetailItem) Reset()         { *m = GetNodeRelationTreeDetailItem{} }
func (m *GetNodeRelationTreeDetailItem) String() string { return proto.CompactTextString(m) }
func (*GetNodeRelationTreeDetailItem) ProtoMessage()    {}
func (*GetNodeRelationTreeDetailItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{60}
}

func (m *GetNodeRelationTreeDetailItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeRelationTreeDetailItem.Unmarshal(m, b)
}
func (m *GetNodeRelationTreeDetailItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeRelationTreeDetailItem.Marshal(b, m, deterministic)
}
func (m *GetNodeRelationTreeDetailItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeRelationTreeDetailItem.Merge(m, src)
}
func (m *GetNodeRelationTreeDetailItem) XXX_Size() int {
	return xxx_messageInfo_GetNodeRelationTreeDetailItem.Size(m)
}
func (m *GetNodeRelationTreeDetailItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeRelationTreeDetailItem.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeRelationTreeDetailItem proto.InternalMessageInfo

func (m *GetNodeRelationTreeDetailItem) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *GetNodeRelationTreeDetailItem) GetModelKey() string {
	if m != nil {
		return m.ModelKey
	}
	return ""
}

func (m *GetNodeRelationTreeDetailItem) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *GetNodeRelationTreeDetailItem) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetNodeRelationTreeDetailItem) GetLimits() []string {
	if m != nil {
		return m.Limits
	}
	return nil
}

type CreateNodesAndRelationResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNodesAndRelationResponse) Reset()         { *m = CreateNodesAndRelationResponse{} }
func (m *CreateNodesAndRelationResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNodesAndRelationResponse) ProtoMessage()    {}
func (*CreateNodesAndRelationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{61}
}

func (m *CreateNodesAndRelationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNodesAndRelationResponse.Unmarshal(m, b)
}
func (m *CreateNodesAndRelationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNodesAndRelationResponse.Marshal(b, m, deterministic)
}
func (m *CreateNodesAndRelationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNodesAndRelationResponse.Merge(m, src)
}
func (m *CreateNodesAndRelationResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNodesAndRelationResponse.Size(m)
}
func (m *CreateNodesAndRelationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNodesAndRelationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNodesAndRelationResponse proto.InternalMessageInfo

type CountInstanceByModelRequest struct {
	ModelKey             []string `protobuf:"bytes,20,rep,name=modelKey,proto3" json:"modelKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountInstanceByModelRequest) Reset()         { *m = CountInstanceByModelRequest{} }
func (m *CountInstanceByModelRequest) String() string { return proto.CompactTextString(m) }
func (*CountInstanceByModelRequest) ProtoMessage()    {}
func (*CountInstanceByModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{62}
}

func (m *CountInstanceByModelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountInstanceByModelRequest.Unmarshal(m, b)
}
func (m *CountInstanceByModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountInstanceByModelRequest.Marshal(b, m, deterministic)
}
func (m *CountInstanceByModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountInstanceByModelRequest.Merge(m, src)
}
func (m *CountInstanceByModelRequest) XXX_Size() int {
	return xxx_messageInfo_CountInstanceByModelRequest.Size(m)
}
func (m *CountInstanceByModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountInstanceByModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountInstanceByModelRequest proto.InternalMessageInfo

func (m *CountInstanceByModelRequest) GetModelKey() []string {
	if m != nil {
		return m.ModelKey
	}
	return nil
}

type CountInstanceByModelResponse struct {
	Infos                []*InstanceInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CountInstanceByModelResponse) Reset()         { *m = CountInstanceByModelResponse{} }
func (m *CountInstanceByModelResponse) String() string { return proto.CompactTextString(m) }
func (*CountInstanceByModelResponse) ProtoMessage()    {}
func (*CountInstanceByModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{63}
}

func (m *CountInstanceByModelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountInstanceByModelResponse.Unmarshal(m, b)
}
func (m *CountInstanceByModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountInstanceByModelResponse.Marshal(b, m, deterministic)
}
func (m *CountInstanceByModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountInstanceByModelResponse.Merge(m, src)
}
func (m *CountInstanceByModelResponse) XXX_Size() int {
	return xxx_messageInfo_CountInstanceByModelResponse.Size(m)
}
func (m *CountInstanceByModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountInstanceByModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountInstanceByModelResponse proto.InternalMessageInfo

func (m *CountInstanceByModelResponse) GetInfos() []*InstanceInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type GetInstancesIdAndNameByModelRequest struct {
	ModelKey             string   `protobuf:"bytes,20,opt,name=modelKey,proto3" json:"modelKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInstancesIdAndNameByModelRequest) Reset()         { *m = GetInstancesIdAndNameByModelRequest{} }
func (m *GetInstancesIdAndNameByModelRequest) String() string { return proto.CompactTextString(m) }
func (*GetInstancesIdAndNameByModelRequest) ProtoMessage()    {}
func (*GetInstancesIdAndNameByModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{64}
}

func (m *GetInstancesIdAndNameByModelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstancesIdAndNameByModelRequest.Unmarshal(m, b)
}
func (m *GetInstancesIdAndNameByModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstancesIdAndNameByModelRequest.Marshal(b, m, deterministic)
}
func (m *GetInstancesIdAndNameByModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstancesIdAndNameByModelRequest.Merge(m, src)
}
func (m *GetInstancesIdAndNameByModelRequest) XXX_Size() int {
	return xxx_messageInfo_GetInstancesIdAndNameByModelRequest.Size(m)
}
func (m *GetInstancesIdAndNameByModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstancesIdAndNameByModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstancesIdAndNameByModelRequest proto.InternalMessageInfo

func (m *GetInstancesIdAndNameByModelRequest) GetModelKey() string {
	if m != nil {
		return m.ModelKey
	}
	return ""
}

type GetInstancesIdAndNameByModelResponse struct {
	Infos                []*IdAndNameInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetInstancesIdAndNameByModelResponse) Reset()         { *m = GetInstancesIdAndNameByModelResponse{} }
func (m *GetInstancesIdAndNameByModelResponse) String() string { return proto.CompactTextString(m) }
func (*GetInstancesIdAndNameByModelResponse) ProtoMessage()    {}
func (*GetInstancesIdAndNameByModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{65}
}

func (m *GetInstancesIdAndNameByModelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstancesIdAndNameByModelResponse.Unmarshal(m, b)
}
func (m *GetInstancesIdAndNameByModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstancesIdAndNameByModelResponse.Marshal(b, m, deterministic)
}
func (m *GetInstancesIdAndNameByModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstancesIdAndNameByModelResponse.Merge(m, src)
}
func (m *GetInstancesIdAndNameByModelResponse) XXX_Size() int {
	return xxx_messageInfo_GetInstancesIdAndNameByModelResponse.Size(m)
}
func (m *GetInstancesIdAndNameByModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstancesIdAndNameByModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstancesIdAndNameByModelResponse proto.InternalMessageInfo

func (m *GetInstancesIdAndNameByModelResponse) GetInfos() []*IdAndNameInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type IdAndNameInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdAndNameInfo) Reset()         { *m = IdAndNameInfo{} }
func (m *IdAndNameInfo) String() string { return proto.CompactTextString(m) }
func (*IdAndNameInfo) ProtoMessage()    {}
func (*IdAndNameInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{66}
}

func (m *IdAndNameInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdAndNameInfo.Unmarshal(m, b)
}
func (m *IdAndNameInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdAndNameInfo.Marshal(b, m, deterministic)
}
func (m *IdAndNameInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdAndNameInfo.Merge(m, src)
}
func (m *IdAndNameInfo) XXX_Size() int {
	return xxx_messageInfo_IdAndNameInfo.Size(m)
}
func (m *IdAndNameInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IdAndNameInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IdAndNameInfo proto.InternalMessageInfo

func (m *IdAndNameInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IdAndNameInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type InstanceInfo struct {
	ModelKey             string   `protobuf:"bytes,1,opt,name=modelKey,proto3" json:"modelKey,omitempty"`
	ModelName            string   `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Icon                 string   `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Count                int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	VendorIds            []string `protobuf:"bytes,5,rep,name=vendorIds,proto3" json:"vendorIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceInfo) Reset()         { *m = InstanceInfo{} }
func (m *InstanceInfo) String() string { return proto.CompactTextString(m) }
func (*InstanceInfo) ProtoMessage()    {}
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{67}
}

func (m *InstanceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceInfo.Unmarshal(m, b)
}
func (m *InstanceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceInfo.Marshal(b, m, deterministic)
}
func (m *InstanceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceInfo.Merge(m, src)
}
func (m *InstanceInfo) XXX_Size() int {
	return xxx_messageInfo_InstanceInfo.Size(m)
}
func (m *InstanceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceInfo proto.InternalMessageInfo

func (m *InstanceInfo) GetModelKey() string {
	if m != nil {
		return m.ModelKey
	}
	return ""
}

func (m *InstanceInfo) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *InstanceInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *InstanceInfo) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *InstanceInfo) GetVendorIds() []string {
	if m != nil {
		return m.VendorIds
	}
	return nil
}

type ListNodeAndParentResponse struct {
	Nodes                []*cmdb.NodeAndParent `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListNodeAndParentResponse) Reset()         { *m = ListNodeAndParentResponse{} }
func (m *ListNodeAndParentResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodeAndParentResponse) ProtoMessage()    {}
func (*ListNodeAndParentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3f1b4852902d30e, []int{68}
}

func (m *ListNodeAndParentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeAndParentResponse.Unmarshal(m, b)
}
func (m *ListNodeAndParentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeAndParentResponse.Marshal(b, m, deterministic)
}
func (m *ListNodeAndParentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeAndParentResponse.Merge(m, src)
}
func (m *ListNodeAndParentResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodeAndParentResponse.Size(m)
}
func (m *ListNodeAndParentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeAndParentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeAndParentResponse proto.InternalMessageInfo

func (m *ListNodeAndParentResponse) GetNodes() []*cmdb.NodeAndParent {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*ByJqlAndUsernameRequest)(nil), "rpc.ByJqlAndUsernameRequest")
	proto.RegisterType((*ByNodeAndUsernameRequest)(nil), "rpc.ByNodeAndUsernameRequest")
	proto.RegisterType((*CreateNodeRequest)(nil), "rpc.CreateNodeRequest")
	proto.RegisterType((*WithTableRequest)(nil), "rpc.WithTableRequest")
	proto.RegisterType((*UpdateNodeRequest)(nil), "rpc.UpdateNodeRequest")
	proto.RegisterType((*WithNodesAndUsernameRequest)(nil), "rpc.WithNodesAndUsernameRequest")
	proto.RegisterType((*WithNodesAndUsernameAndRelationRequest)(nil), "rpc.WithNodesAndUsernameAndRelationRequest")
	proto.RegisterType((*ByNodeIdAndUsernameRequest)(nil), "rpc.ByNodeIdAndUsernameRequest")
	proto.RegisterType((*ByNodeNameRequest)(nil), "rpc.ByNodeNameRequest")
	proto.RegisterType((*ByNodeIdAndRelationNameRequest)(nil), "rpc.ByNodeIdAndRelationNameRequest")
	proto.RegisterType((*ByModelIdAndUsernameRequest)(nil), "rpc.ByModelIdAndUsernameRequest")
	proto.RegisterType((*ByNodeIdsRequest)(nil), "rpc.ByNodeIdsRequest")
	proto.RegisterType((*ByNodeIdsAndLabelRequest)(nil), "rpc.ByNodeIdsAndLabelRequest")
	proto.RegisterType((*ByModelKeyAndPropertiesRequest)(nil), "rpc.ByModelKeyAndPropertiesRequest")
	proto.RegisterType((*WithSearchParamRequest)(nil), "rpc.WithSearchParamRequest")
	proto.RegisterType((*WithChildAndParentRequest)(nil), "rpc.WithChildAndParentRequest")
	proto.RegisterType((*WithParentParamRequest)(nil), "rpc.WithParentParamRequest")
	proto.RegisterType((*BySqlRequest)(nil), "rpc.BySqlRequest")
	proto.RegisterType((*SearchNodeAndCountByCqlResponse)(nil), "rpc.SearchNodeAndCountByCqlResponse")
	proto.RegisterType((*WithTableGroupRequest)(nil), "rpc.WithTableGroupRequest")
	proto.RegisterType((*ByPageAndKeywordRequest)(nil), "rpc.ByPageAndKeywordRequest")
	proto.RegisterType((*ByJqlRequest)(nil), "rpc.ByJqlRequest")
	proto.RegisterType((*ByCqlRequest)(nil), "rpc.ByCqlRequest")
	proto.RegisterType((*ByModelIdAndRelationPropertyRequest)(nil), "rpc.ByModelIdAndRelationPropertyRequest")
	proto.RegisterType((*ByLabelNameAndPropertiesRequest)(nil), "rpc.ByLabelNameAndPropertiesRequest")
	proto.RegisterType((*WithFileInfoRequest)(nil), "rpc.WithFileInfoRequest")
	proto.RegisterType((*CreateNodeResponse)(nil), "rpc.CreateNodeResponse")
	proto.RegisterType((*CreateNodesResponse)(nil), "rpc.CreateNodesResponse")
	proto.RegisterType((*UpdateNodeResponse)(nil), "rpc.UpdateNodeResponse")
	proto.RegisterType((*ExistsNodeResponse)(nil), "rpc.ExistsNodeResponse")
	proto.RegisterType((*UpdateNodesResponse)(nil), "rpc.UpdateNodesResponse")
	proto.RegisterType((*DeleteNodeResponse)(nil), "rpc.DeleteNodeResponse")
	proto.RegisterType((*DeleteNodesResponse)(nil), "rpc.DeleteNodesResponse")
	proto.RegisterType((*ClearTableResponse)(nil), "rpc.ClearTableResponse")
	proto.RegisterType((*ListNodeResponse)(nil), "rpc.ListNodeResponse")
	proto.RegisterType((*GetNodeResponse)(nil), "rpc.GetNodeResponse")
	proto.RegisterType((*CountNodeRelationsResponse)(nil), "rpc.CountNodeRelationsResponse")
	proto.RegisterType((*CountNodesRelationsResponse)(nil), "rpc.CountNodesRelationsResponse")
	proto.RegisterType((*SearchNodeAutoCompleteResponse)(nil), "rpc.SearchNodeAutoCompleteResponse")
	proto.RegisterType((*SearchRelationResponse)(nil), "rpc.SearchRelationResponse")
	proto.RegisterMapType((map[string]string)(nil), "rpc.SearchRelationResponse.UserRefEntry")
	proto.RegisterType((*GetNodeRelationResponse)(nil), "rpc.GetNodeRelationResponse")
	proto.RegisterType((*DownloadExcelResponse)(nil), "rpc.DownloadExcelResponse")
	proto.RegisterType((*GetNodeCountResponse)(nil), "rpc.GetNodeCountResponse")
	proto.RegisterType((*TreeStructRequest)(nil), "rpc.TreeStructRequest")
	proto.RegisterType((*TreeStructResponse)(nil), "rpc.TreeStructResponse")
	proto.RegisterType((*CreateRelationRequest)(nil), "rpc.CreateRelationRequest")
	proto.RegisterType((*CreateRelationsRequest)(nil), "rpc.CreateRelationsRequest")
	proto.RegisterType((*ClearRelationRequest)(nil), "rpc.ClearRelationRequest")
	proto.RegisterType((*ClearRelationResponse)(nil), "rpc.ClearRelationResponse")
	proto.RegisterType((*CreateRelationResponse)(nil), "rpc.CreateRelationResponse")
	proto.RegisterType((*CreateRelationsResponse)(nil), "rpc.CreateRelationsResponse")
	proto.RegisterType((*ClearAllRelationRequest)(nil), "rpc.ClearAllRelationRequest")
	proto.RegisterType((*GetRelationRequest)(nil), "rpc.GetRelationRequest")
	proto.RegisterType((*NodesInstanceRequest)(nil), "rpc.NodesInstanceRequest")
	proto.RegisterMapType((map[string]*Options)(nil), "rpc.NodesInstanceRequest.OptionsEntry")
	proto.RegisterMapType((map[string]string)(nil), "rpc.NodesInstanceRequest.SearchEntry")
	proto.RegisterType((*Options)(nil), "rpc.Options")
	proto.RegisterType((*NodesInstanceResponse)(nil), "rpc.NodesInstanceResponse")
	proto.RegisterType((*ClearAllRelationResponse)(nil), "rpc.ClearAllRelationResponse")
	proto.RegisterType((*GetNodeRelationTreeDetailRequest)(nil), "rpc.GetNodeRelationTreeDetailRequest")
	proto.RegisterType((*CreateTableGroupResponse)(nil), "rpc.CreateTableGroupResponse")
	proto.RegisterType((*GetNodeRelationTreeDetailResponse)(nil), "rpc.GetNodeRelationTreeDetailResponse")
	proto.RegisterType((*GetNodeRelationTreeDetailItem)(nil), "rpc.GetNodeRelationTreeDetailItem")
	proto.RegisterType((*CreateNodesAndRelationResponse)(nil), "rpc.CreateNodesAndRelationResponse")
	proto.RegisterType((*CountInstanceByModelRequest)(nil), "rpc.CountInstanceByModelRequest")
	proto.RegisterType((*CountInstanceByModelResponse)(nil), "rpc.CountInstanceByModelResponse")
	proto.RegisterType((*GetInstancesIdAndNameByModelRequest)(nil), "rpc.GetInstancesIdAndNameByModelRequest")
	proto.RegisterType((*GetInstancesIdAndNameByModelResponse)(nil), "rpc.GetInstancesIdAndNameByModelResponse")
	proto.RegisterType((*IdAndNameInfo)(nil), "rpc.IdAndNameInfo")
	proto.RegisterType((*InstanceInfo)(nil), "rpc.InstanceInfo")
	proto.RegisterType((*ListNodeAndParentResponse)(nil), "rpc.ListNodeAndParentResponse")
}

func init() { proto.RegisterFile("src/grpc/cmdb.proto", fileDescriptor_f3f1b4852902d30e) }

var fileDescriptor_f3f1b4852902d30e = []byte{
	// 2727 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0x4b, 0x73, 0xdb, 0xc8,
	0x11, 0x26, 0x25, 0x53, 0x8f, 0x26, 0x6d, 0x49, 0x63, 0x4a, 0xa2, 0x20, 0x99, 0x96, 0x21, 0xdb,
	0xa1, 0xb3, 0xbb, 0x52, 0x99, 0xf6, 0x61, 0x77, 0xcb, 0x89, 0x57, 0x94, 0x6c, 0x59, 0xb2, 0x2c,
	0x6b, 0x29, 0x3b, 0xa9, 0x4d, 0xe2, 0x68, 0x21, 0x60, 0x24, 0xc3, 0x02, 0x01, 0x0a, 0x00, 0xed,
	0x65, 0x4e, 0xa9, 0x1c, 0x73, 0x49, 0x6e, 0xa9, 0x3c, 0xfe, 0x43, 0xae, 0xf9, 0x15, 0x39, 0xe5,
	0x92, 0x73, 0x2a, 0xf7, 0xdc, 0x72, 0x4d, 0xcd, 0x13, 0x03, 0x10, 0x00, 0x69, 0xbb, 0x36, 0x27,
	0x62, 0x7a, 0xba, 0xbf, 0xe9, 0xe9, 0xe9, 0xe9, 0xe9, 0xe9, 0x21, 0x5c, 0x0d, 0x7c, 0x73, 0xe3,
	0xcc, 0xef, 0x9a, 0x1b, 0x66, 0xc7, 0x3a, 0x59, 0xef, 0xfa, 0x5e, 0xe8, 0xa1, 0x71, 0xbf, 0x6b,
	0x6a, 0xf3, 0xa4, 0xc7, 0xf4, 0x3a, 0x1d, 0xcf, 0xdd, 0xe8, 0x04, 0x67, 0x01, 0xeb, 0xd3, 0xa8,
	0x00, 0xe1, 0x55, 0x04, 0xf4, 0x87, 0xb0, 0xd8, 0xea, 0xef, 0x5d, 0x38, 0x9b, 0xae, 0xf5, 0x32,
	0xc0, 0xbe, 0x6b, 0x74, 0x70, 0x1b, 0x5f, 0xf4, 0x70, 0x10, 0xa2, 0x59, 0x18, 0x7f, 0x73, 0xe1,
	0xd4, 0x60, 0xb5, 0xd8, 0x98, 0x6e, 0x93, 0x4f, 0x84, 0xe0, 0x12, 0x61, 0xa8, 0x55, 0x29, 0x89,
	0x7e, 0xeb, 0x07, 0x50, 0x6b, 0xf5, 0x0f, 0x3c, 0x0b, 0xa7, 0x20, 0xd4, 0xe1, 0x92, 0xeb, 0x59,
	0x8c, 0xbf, 0xdc, 0x84, 0x75, 0x3a, 0x2e, 0xe1, 0x6d, 0x53, 0xba, 0xc4, 0x03, 0x05, 0x6f, 0x07,
	0xe6, 0xb6, 0x7c, 0x6c, 0x84, 0x98, 0xf2, 0x25, 0x80, 0x60, 0x08, 0x90, 0xaa, 0xd8, 0xd7, 0x30,
	0xfb, 0x53, 0x3b, 0x7c, 0xfd, 0xc2, 0x38, 0x71, 0x24, 0xce, 0x0d, 0x28, 0x85, 0xa4, 0xcd, 0x81,
	0xca, 0x0c, 0x88, 0xb1, 0xb0, 0x1e, 0xa4, 0xc1, 0x54, 0x8f, 0x4f, 0x83, 0xc3, 0xc9, 0xb6, 0xfe,
	0x2d, 0xcc, 0xbd, 0xec, 0x5a, 0xef, 0xa9, 0xdb, 0x22, 0x4c, 0x92, 0xdf, 0x63, 0xdb, 0xe2, 0x78,
	0x13, 0xa4, 0xb9, 0x6b, 0x49, 0xa5, 0xeb, 0x31, 0xa5, 0x97, 0x89, 0xd2, 0x44, 0x3c, 0xc8, 0x35,
	0xe8, 0xf8, 0xc8, 0x06, 0xfd, 0x7b, 0x11, 0x6e, 0xa7, 0x61, 0x6e, 0xba, 0x56, 0x1b, 0x3b, 0x46,
	0x68, 0x7b, 0xee, 0xe0, 0x54, 0xc6, 0x47, 0x35, 0x33, 0xb1, 0x97, 0x15, 0x84, 0xfb, 0xc6, 0x09,
	0x76, 0xf8, 0x4c, 0x64, 0x1b, 0x2d, 0xc0, 0x84, 0x15, 0x84, 0x4f, 0x71, 0xbf, 0xd6, 0x60, 0x33,
	0x67, 0x2d, 0x2e, 0xf3, 0x13, 0xc3, 0xe9, 0xe1, 0x5a, 0x53, 0xca, 0xd0, 0x36, 0x5a, 0x85, 0xb2,
	0xcf, 0xd5, 0x22, 0x82, 0x0f, 0x68, 0xb7, 0x4a, 0xd2, 0x5d, 0xd0, 0x98, 0xc7, 0xed, 0x5a, 0x29,
	0x26, 0x5a, 0x86, 0xe9, 0x8e, 0x67, 0x61, 0xe7, 0xf8, 0x1c, 0xf7, 0xb9, 0x1d, 0xa6, 0x28, 0x81,
	0x0c, 0x9c, 0xb9, 0x16, 0xea, 0xaa, 0xd7, 0x13, 0xab, 0xbe, 0x0d, 0x73, 0x6c, 0xbc, 0x83, 0x51,
	0x87, 0x49, 0x73, 0xc7, 0x67, 0x50, 0x57, 0xb4, 0x16, 0x96, 0x57, 0x21, 0x15, 0xe5, 0x20, 0xd5,
	0x51, 0x54, 0xb8, 0x7d, 0x58, 0x6e, 0xf5, 0x9f, 0x91, 0x01, 0x53, 0xad, 0xb0, 0x04, 0x4c, 0x9b,
	0x68, 0xa6, 0x93, 0x1d, 0xc6, 0x9c, 0xea, 0x23, 0x37, 0x61, 0x56, 0x28, 0x17, 0x28, 0xdb, 0xdf,
	0xb6, 0x02, 0xea, 0x0b, 0xd3, 0x6d, 0xf2, 0xa9, 0xb7, 0xc4, 0x56, 0xdf, 0xb5, 0x88, 0x23, 0xd1,
	0x35, 0xce, 0xe4, 0x46, 0x55, 0x28, 0x39, 0xd4, 0x2b, 0xd8, 0xf8, 0xac, 0xa1, 0x7f, 0x43, 0xcc,
	0xf0, 0x8c, 0x1b, 0x6a, 0xd3, 0xb5, 0x0e, 0x7d, 0xaf, 0x8b, 0xfd, 0xd0, 0xc6, 0xc1, 0x48, 0x96,
	0xd5, 0x60, 0xaa, 0xcb, 0x24, 0xfa, 0x62, 0x77, 0x8a, 0xb6, 0xfe, 0xef, 0x22, 0x2c, 0x10, 0x47,
	0x3f, 0xc2, 0x86, 0x6f, 0xbe, 0x3e, 0x34, 0x7c, 0xa3, 0x23, 0x30, 0xa5, 0x2e, 0xa0, 0xe8, 0x82,
	0xea, 0x00, 0x5d, 0x39, 0x3c, 0x87, 0x53, 0x28, 0xe8, 0x0e, 0xcc, 0xbe, 0x35, 0xce, 0x7a, 0xf8,
	0x58, 0xe1, 0x62, 0xce, 0x31, 0x43, 0xe9, 0x91, 0xee, 0xc4, 0xa8, 0x5d, 0xe3, 0x0c, 0x53, 0x3f,
	0x2f, 0xb5, 0xe9, 0x37, 0xa1, 0x05, 0xf6, 0xaf, 0x98, 0x87, 0x97, 0xda, 0xf4, 0x9b, 0xd2, 0x3c,
	0x3f, 0xac, 0x3d, 0xa0, 0x76, 0xa2, 0xdf, 0x84, 0x66, 0xe1, 0xc0, 0xac, 0x3d, 0x66, 0x34, 0xf2,
	0x1d, 0xf3, 0xc7, 0xc3, 0x84, 0x3f, 0xfe, 0xa6, 0x08, 0x4b, 0x64, 0x9e, 0x5b, 0xaf, 0x6d, 0x87,
	0xac, 0xfd, 0xa1, 0xe1, 0x63, 0x37, 0x14, 0x53, 0xbd, 0x0e, 0x65, 0x93, 0x74, 0x1c, 0xab, 0x13,
	0x06, 0x4a, 0x62, 0x9b, 0xf2, 0x06, 0x54, 0xba, 0x54, 0xe2, 0x58, 0x5d, 0x9e, 0x32, 0xa3, 0x49,
	0x16, 0xb1, 0xe1, 0xe8, 0x2a, 0xd4, 0x07, 0x37, 0xe1, 0x9f, 0xb8, 0xb1, 0xd9, 0xe0, 0x31, 0x63,
	0x27, 0x07, 0x80, 0xc1, 0x01, 0x96, 0x61, 0x9a, 0xb3, 0x48, 0xff, 0x9c, 0x62, 0x84, 0x5d, 0x6b,
	0x84, 0xd1, 0xd1, 0x35, 0x00, 0x0b, 0x07, 0x62, 0x00, 0x16, 0x5c, 0xa6, 0x09, 0x85, 0xc2, 0xeb,
	0xab, 0x50, 0x69, 0xf5, 0x8f, 0x2e, 0x54, 0xe7, 0x0c, 0xa2, 0x93, 0x2c, 0xb8, 0x70, 0xf4, 0xdf,
	0x15, 0xe1, 0x3a, 0xf3, 0x13, 0x7e, 0x74, 0x6d, 0x79, 0x3d, 0x37, 0x6c, 0xf5, 0xb7, 0x88, 0x50,
	0xd0, 0xf5, 0xdc, 0x00, 0x13, 0xa7, 0x31, 0x09, 0x95, 0xca, 0x95, 0xda, 0xac, 0x41, 0x3d, 0xd0,
	0x38, 0xc3, 0x47, 0x64, 0x65, 0xab, 0xb4, 0x43, 0xb6, 0x51, 0x0d, 0x26, 0x0d, 0xc7, 0x39, 0x24,
	0x8e, 0x50, 0xa7, 0x5d, 0xa2, 0x89, 0x56, 0xa1, 0x44, 0x36, 0x73, 0x50, 0x6b, 0x0c, 0x84, 0x56,
	0xd6, 0xa1, 0xef, 0xc1, 0xbc, 0x3c, 0xae, 0x76, 0x7c, 0xaf, 0xd7, 0x15, 0xca, 0xdf, 0x85, 0x32,
	0x3d, 0x99, 0x8e, 0xcf, 0x08, 0x95, 0x1f, 0x33, 0xb3, 0xca, 0xc9, 0xc5, 0xb8, 0x21, 0x94, 0xdf,
	0xfa, 0xcf, 0xc9, 0xa1, 0x4e, 0xc6, 0xdd, 0x74, 0xad, 0xa7, 0xb8, 0xff, 0xce, 0xf3, 0x2d, 0x81,
	0x26, 0x1c, 0x15, 0x52, 0x1c, 0xb5, 0xaa, 0x38, 0x6a, 0x0d, 0x26, 0xcf, 0x99, 0x24, 0xb7, 0xbf,
	0x68, 0x32, 0xe3, 0xee, 0xc5, 0x8c, 0x1b, 0x4f, 0x13, 0x18, 0xc7, 0x56, 0x8c, 0xc3, 0x8c, 0x38,
	0xcc, 0x0b, 0x47, 0x0f, 0x61, 0x4d, 0x8d, 0x5e, 0x22, 0x1a, 0xf2, 0x0d, 0xd5, 0x4f, 0x8b, 0x62,
	0x10, 0x8f, 0x62, 0xcd, 0x44, 0x20, 0x28, 0x37, 0x17, 0x98, 0x49, 0x06, 0xb0, 0xa2, 0x00, 0xf1,
	0x2d, 0x5c, 0x6f, 0xf5, 0xa9, 0x87, 0x1c, 0xb0, 0xf3, 0x6f, 0x30, 0xf8, 0x5c, 0x03, 0xa0, 0x3e,
	0x75, 0xac, 0x84, 0xc8, 0x69, 0x47, 0x88, 0x0c, 0x8b, 0x18, 0xba, 0x01, 0x57, 0xc9, 0x22, 0x3e,
	0xb6, 0x1d, 0xbc, 0xeb, 0x9e, 0x7a, 0x8a, 0xd1, 0x4f, 0x6d, 0x9e, 0x75, 0x54, 0xda, 0xf4, 0x9b,
	0xf8, 0x11, 0xf9, 0x55, 0xf3, 0x0c, 0xd1, 0xce, 0x3d, 0x8d, 0xee, 0x03, 0x52, 0xf3, 0x23, 0xee,
	0xab, 0x43, 0x92, 0x10, 0x7d, 0x1e, 0xae, 0x46, 0x52, 0x81, 0x10, 0x23, 0x60, 0x6a, 0x42, 0x33,
	0x22, 0xd8, 0xa7, 0x80, 0x1e, 0x7d, 0x67, 0x07, 0x61, 0x10, 0x93, 0x5a, 0x80, 0x09, 0x4c, 0xa9,
	0x54, 0x6e, 0xaa, 0xcd, 0x5b, 0x64, 0xe8, 0x68, 0x8c, 0x68, 0xe8, 0x2a, 0xa0, 0x6d, 0xec, 0xe0,
	0xf8, 0xd0, 0x84, 0x39, 0xa2, 0xc6, 0x98, 0xb7, 0x1c, 0x6c, 0xf8, 0x3c, 0x99, 0xe3, 0xd4, 0x5f,
	0x17, 0x61, 0x76, 0xdf, 0x0e, 0xc2, 0x98, 0x1a, 0xff, 0xdf, 0x5d, 0x7b, 0x17, 0x66, 0x76, 0x70,
	0xf8, 0x5e, 0xd6, 0x6b, 0x82, 0x46, 0x83, 0x0d, 0x13, 0x62, 0xce, 0x1a, 0xe4, 0xab, 0xaf, 0xdf,
	0x83, 0x65, 0x29, 0x13, 0x8c, 0x2a, 0x74, 0x1f, 0xea, 0x4a, 0x88, 0xeb, 0x85, 0xde, 0x96, 0xd7,
	0xe9, 0x12, 0xdb, 0x4a, 0x39, 0xb2, 0xf1, 0x43, 0x5f, 0x9c, 0xda, 0xf4, 0x5b, 0xff, 0x63, 0x11,
	0x16, 0x98, 0x58, 0x94, 0x1d, 0x72, 0xf6, 0x2d, 0xe6, 0x96, 0xc7, 0x3e, 0x3e, 0xe5, 0x29, 0x62,
	0x63, 0xdd, 0xef, 0x9a, 0xeb, 0xe9, 0xec, 0xeb, 0x24, 0x27, 0x69, 0xe3, 0xd3, 0x47, 0x6e, 0xe8,
	0xf7, 0xdb, 0x93, 0x3d, 0xd6, 0xd2, 0xbe, 0x84, 0x8a, 0xda, 0x41, 0x82, 0x03, 0x09, 0xf2, 0x45,
	0x16, 0x1c, 0xce, 0x71, 0x9f, 0xcc, 0xe6, 0x2d, 0x4d, 0x0d, 0xc7, 0xd8, 0x61, 0x4d, 0x1b, 0x5f,
	0x8e, 0x7d, 0x5e, 0xd4, 0x5f, 0xc1, 0xa2, 0xb4, 0x76, 0x42, 0xb7, 0x0c, 0xef, 0x23, 0x53, 0x74,
	0x6c, 0xf7, 0x5c, 0xc4, 0x36, 0xf2, 0x4d, 0x78, 0xc9, 0x2f, 0xb6, 0xf8, 0x7a, 0xf3, 0x96, 0xfe,
	0x09, 0xcc, 0x6f, 0x7b, 0xef, 0x5c, 0xc7, 0x33, 0xac, 0x47, 0xdf, 0x99, 0xd8, 0x51, 0xed, 0x94,
	0xdc, 0xbf, 0xfa, 0xa7, 0x50, 0xe5, 0xba, 0xd0, 0x95, 0x19, 0xb2, 0x16, 0x16, 0xcc, 0xbd, 0xf0,
	0x31, 0x3e, 0x0a, 0xfd, 0x9e, 0x19, 0x2a, 0x61, 0xc1, 0xf7, 0xbc, 0x50, 0x64, 0x62, 0xe4, 0x1b,
	0xad, 0xc1, 0x65, 0x79, 0xf8, 0x85, 0xfd, 0xae, 0x88, 0x0d, 0xf2, 0x44, 0x7c, 0xd1, 0xef, 0x62,
	0x36, 0x81, 0x8e, 0x1d, 0x92, 0x74, 0x84, 0xac, 0x1c, 0x6f, 0xe9, 0x0d, 0x40, 0xea, 0x28, 0x91,
	0xf6, 0x96, 0x11, 0x1a, 0x42, 0x7b, 0xf2, 0xad, 0xff, 0xb3, 0x08, 0xf3, 0x2c, 0x20, 0x24, 0xef,
	0x00, 0x0b, 0x30, 0x11, 0xf8, 0xe6, 0x53, 0x99, 0x7b, 0xf1, 0x16, 0xd9, 0x41, 0x81, 0x6f, 0xee,
	0x2b, 0x29, 0x83, 0x6c, 0xf3, 0x3e, 0x96, 0xcf, 0xd7, 0x65, 0x1f, 0xcb, 0xe7, 0xf3, 0xef, 0x00,
	0x0c, 0xaf, 0x99, 0xb8, 0x37, 0xa8, 0xf7, 0x83, 0x07, 0xf9, 0xf7, 0x83, 0xc7, 0x83, 0xa9, 0xc9,
	0x01, 0x2c, 0xc4, 0xa7, 0x26, 0xa3, 0xfb, 0x7d, 0x98, 0xf4, 0xd9, 0x27, 0xf7, 0x5f, 0x8d, 0xfa,
	0x6f, 0xaa, 0x21, 0xda, 0x82, 0x55, 0xff, 0x4b, 0x11, 0xaa, 0x34, 0xfa, 0x24, 0x4d, 0x55, 0x85,
	0x52, 0xe0, 0x9b, 0xbb, 0xe2, 0x6c, 0x62, 0x8d, 0x5c, 0x43, 0x55, 0xa1, 0x64, 0x05, 0xe1, 0xae,
	0x38, 0x53, 0x59, 0x23, 0x66, 0x8a, 0x46, 0xc2, 0x14, 0x89, 0xe9, 0x36, 0x07, 0xa7, 0xbb, 0x08,
	0xf3, 0x09, 0xed, 0x78, 0x78, 0xac, 0x25, 0xed, 0x20, 0x7b, 0x96, 0x60, 0x71, 0xc0, 0x42, 0xbc,
	0xeb, 0x11, 0x2c, 0x52, 0xb4, 0x4d, 0xc7, 0x49, 0x4e, 0xf7, 0x0a, 0x8c, 0xc9, 0x73, 0x78, 0xcc,
	0xa6, 0x6a, 0x8b, 0xbc, 0x5c, 0x4c, 0x54, 0xb4, 0x49, 0xc0, 0xde, 0xc1, 0x61, 0x02, 0x41, 0xff,
	0xcf, 0x18, 0x54, 0x69, 0x08, 0xdb, 0x75, 0x83, 0xd0, 0x70, 0x4d, 0xfc, 0x01, 0xd0, 0x32, 0x83,
	0xa9, 0xa7, 0x64, 0x30, 0x0d, 0x25, 0x83, 0xf9, 0x11, 0x4c, 0x04, 0x34, 0x30, 0xd5, 0x9a, 0x74,
	0xad, 0x6f, 0xd1, 0xb5, 0x4e, 0x1b, 0x9e, 0x07, 0x30, 0x16, 0xa8, 0xb8, 0x10, 0xfa, 0x0a, 0x26,
	0xbd, 0x2e, 0xb5, 0x0d, 0x4d, 0xd6, 0xcb, 0xcd, 0xdb, 0xd9, 0xf2, 0xcf, 0x19, 0x23, 0x8f, 0x74,
	0x5c, 0x4c, 0xfb, 0x02, 0xca, 0x0a, 0xf0, 0xfb, 0x04, 0x3a, 0xed, 0x09, 0x54, 0x54, 0xcc, 0x14,
	0x59, 0x5d, 0x95, 0x2d, 0x37, 0x2b, 0x54, 0x39, 0x2e, 0xa3, 0x86, 0xcc, 0x35, 0x98, 0xe4, 0x54,
	0x72, 0xce, 0xf1, 0x4f, 0x1e, 0xf0, 0x45, 0x53, 0xff, 0x6b, 0x11, 0xe6, 0x13, 0x13, 0xfb, 0x1e,
	0x4e, 0xd3, 0xdb, 0x70, 0xe5, 0xd4, 0xf6, 0xf1, 0x3b, 0xc3, 0x71, 0x9e, 0x9f, 0xbc, 0xc1, 0x66,
	0xc8, 0x9d, 0x3d, 0x41, 0x45, 0x3a, 0x54, 0x4e, 0x6d, 0x27, 0xc4, 0x3e, 0xe7, 0x62, 0x3e, 0x1f,
	0xa3, 0xe9, 0x1a, 0xd4, 0x06, 0xdd, 0x94, 0xbb, 0xf0, 0x6f, 0x8b, 0xb0, 0x9a, 0x38, 0x26, 0x48,
	0x54, 0xdc, 0xc6, 0xa1, 0x61, 0x3b, 0x79, 0xb1, 0x77, 0x01, 0xf8, 0x8d, 0x3b, 0x51, 0x1c, 0xd0,
	0x21, 0x16, 0x7e, 0xf9, 0xe6, 0xcd, 0x0a, 0xc9, 0x8d, 0x58, 0x48, 0xfe, 0x21, 0xd4, 0xd8, 0x56,
	0x53, 0x13, 0x7b, 0x6e, 0xdc, 0x84, 0xd7, 0xeb, 0xaf, 0xe0, 0x46, 0x8e, 0xde, 0x5c, 0xe8, 0x73,
	0x28, 0xd9, 0x21, 0xee, 0x04, 0x3c, 0x82, 0xe9, 0x74, 0xe1, 0x33, 0xc5, 0x76, 0x43, 0xdc, 0x69,
	0x33, 0x01, 0xfd, 0x0f, 0x45, 0xb8, 0x96, 0xcb, 0x48, 0x8c, 0x62, 0x9b, 0x9e, 0x2b, 0x8c, 0x42,
	0xbe, 0x73, 0xb7, 0xe2, 0x0a, 0xbf, 0xaa, 0x1f, 0x44, 0x89, 0x6a, 0x44, 0x10, 0x25, 0x81, 0x46,
	0x54, 0x12, 0x88, 0x8c, 0xd4, 0x8c, 0x19, 0x69, 0x15, 0xea, 0x4a, 0x76, 0x1a, 0x2b, 0x4c, 0xf1,
	0x35, 0xfd, 0x82, 0x27, 0x40, 0xc2, 0x41, 0xf9, 0xed, 0x41, 0xac, 0x66, 0x5c, 0xc9, 0xf1, 0x58,
	0x28, 0xda, 0x81, 0x95, 0x74, 0x51, 0x6e, 0xd0, 0x1f, 0x40, 0xc9, 0x76, 0x4f, 0xbd, 0xa0, 0x56,
	0xa4, 0x06, 0x9d, 0xa3, 0x06, 0x15, 0xcc, 0x34, 0x8b, 0x67, 0xfd, 0xfa, 0x26, 0xac, 0xed, 0x60,
	0x09, 0x13, 0xd0, 0x9b, 0x0b, 0x99, 0x68, 0xae, 0x2e, 0xf1, 0xb0, 0x78, 0x08, 0x37, 0xf3, 0x21,
	0xb8, 0x4e, 0x8d, 0xb8, 0x4e, 0x88, 0xe9, 0x24, 0xb8, 0x55, 0xa5, 0xee, 0xc1, 0xe5, 0x18, 0x9d,
	0x3b, 0x55, 0x51, 0x86, 0x52, 0x51, 0xee, 0x19, 0x53, 0xca, 0x3d, 0xbf, 0x2f, 0x42, 0x45, 0x9d,
	0x61, 0x4c, 0xe7, 0x62, 0xde, 0x22, 0x8f, 0x25, 0x17, 0x59, 0xb8, 0xcc, 0xb8, 0xe2, 0x32, 0x32,
	0x68, 0x5c, 0x52, 0x83, 0xc6, 0x0a, 0x4c, 0xbf, 0xc5, 0xae, 0xe5, 0xf9, 0xbb, 0x56, 0x50, 0x2b,
	0xd1, 0x45, 0x8a, 0x08, 0xfa, 0x63, 0x58, 0x12, 0xa9, 0xbc, 0x52, 0xd2, 0xe0, 0xe6, 0xb8, 0x23,
	0xf2, 0x70, 0x66, 0x8e, 0xab, 0x51, 0x4e, 0x1d, 0xf1, 0x32, 0x8e, 0xe6, 0xdf, 0xe6, 0xa0, 0x4c,
	0x3a, 0x8e, 0xb0, 0xff, 0xd6, 0x36, 0x31, 0x7a, 0x02, 0x10, 0x25, 0xc1, 0x68, 0x85, 0x1a, 0x32,
	0xa3, 0xe0, 0xad, 0x69, 0xeb, 0xac, 0x68, 0xbe, 0x7e, 0x64, 0x93, 0x44, 0x79, 0x2f, 0x50, 0x1c,
	0xb0, 0x80, 0xf6, 0x61, 0x26, 0x42, 0xa2, 0xf7, 0x5b, 0xb4, 0x4c, 0xe1, 0xd2, 0x6b, 0x4e, 0x43,
	0xd0, 0x5a, 0x71, 0xb4, 0xa3, 0x0b, 0x07, 0xcd, 0x71, 0xe5, 0xa2, 0xc2, 0xc5, 0x10, 0x8c, 0x5f,
	0xc2, 0x62, 0x46, 0x0d, 0x23, 0x5f, 0xb3, 0x9b, 0x4a, 0xd6, 0x9e, 0x59, 0xfe, 0xd0, 0x0b, 0xa8,
	0x2d, 0x6e, 0x02, 0xc9, 0x0b, 0x84, 0x54, 0x35, 0x2a, 0x03, 0x68, 0x6b, 0x49, 0xd0, 0x94, 0x0b,
	0x87, 0x5e, 0x40, 0x0f, 0x01, 0xa2, 0xad, 0x8e, 0x16, 0x94, 0xfc, 0x4b, 0xa9, 0xa9, 0x6b, 0x8b,
	0x03, 0x74, 0x09, 0xb0, 0x0d, 0x33, 0x9c, 0x8e, 0xbd, 0xfb, 0x6f, 0x3e, 0x14, 0xe5, 0x29, 0x94,
	0x95, 0x88, 0x83, 0x56, 0xa5, 0xb9, 0x32, 0x2a, 0xef, 0x5a, 0x2d, 0x81, 0x15, 0x28, 0x60, 0x8e,
	0x48, 0xb4, 0x92, 0xe1, 0x0b, 0x7d, 0x92, 0x89, 0x3b, 0x58, 0x7d, 0xe7, 0x16, 0x1c, 0x12, 0x08,
	0xa9, 0x05, 0xa3, 0xfb, 0x34, 0x9f, 0xfb, 0xc0, 0xab, 0x04, 0x9f, 0xfb, 0xe0, 0xe5, 0x5e, 0x2f,
	0xa0, 0x03, 0x98, 0xe1, 0x74, 0x69, 0xc1, 0xe1, 0xf3, 0xcf, 0xc1, 0x7b, 0x0a, 0x65, 0xe5, 0x82,
	0x3f, 0xb2, 0x2d, 0xd3, 0x8a, 0x02, 0x05, 0xb2, 0x5f, 0xa3, 0x02, 0x00, 0xba, 0xce, 0xfd, 0x2c,
	0xab, 0xda, 0xcf, 0xd5, 0x4a, 0x29, 0x24, 0x14, 0xd0, 0x11, 0xcc, 0x47, 0x74, 0x75, 0x51, 0x3e,
	0x06, 0xf4, 0x19, 0xcc, 0x70, 0xba, 0xb4, 0xdd, 0xc7, 0xc0, 0x3d, 0x81, 0xb2, 0x52, 0xee, 0x40,
	0xd7, 0x62, 0x50, 0xc9, 0x1a, 0x3b, 0xb7, 0x5b, 0x5a, 0x7d, 0xa4, 0x80, 0xbe, 0x82, 0x29, 0x11,
	0x3f, 0xf3, 0x37, 0xff, 0x3c, 0xed, 0x4c, 0x96, 0x4d, 0xf4, 0x02, 0x7a, 0x09, 0x73, 0x03, 0x11,
	0x18, 0xd5, 0x25, 0x54, 0x6a, 0xb5, 0x59, 0xab, 0xc7, 0xd0, 0x06, 0x22, 0x37, 0xb5, 0xd8, 0x3c,
	0xe9, 0xa6, 0xe2, 0x2c, 0xd6, 0x71, 0xe8, 0x48, 0xcb, 0xc1, 0x1a, 0x72, 0xb6, 0x96, 0x2d, 0x98,
	0xe4, 0x39, 0xcc, 0x70, 0xc3, 0x57, 0xe3, 0xb9, 0x91, 0xb2, 0x83, 0x2e, 0x73, 0x62, 0xab, 0x4f,
	0x0f, 0xb1, 0x05, 0x05, 0xe9, 0x60, 0x04, 0x80, 0x7d, 0x80, 0xa8, 0x00, 0x86, 0xd6, 0xb8, 0x74,
	0xde, 0xab, 0x06, 0x77, 0x82, 0xc1, 0xb2, 0x99, 0x5e, 0x40, 0x3b, 0x50, 0x21, 0x43, 0x8c, 0xee,
	0x50, 0x59, 0x6a, 0x7d, 0xcd, 0x80, 0x44, 0x49, 0x02, 0xdd, 0xe4, 0x40, 0xb9, 0x25, 0x4f, 0x6d,
	0x49, 0x45, 0x8b, 0xd5, 0x32, 0xa8, 0x6e, 0xe4, 0x1e, 0x17, 0x15, 0x15, 0x98, 0x9f, 0x32, 0x7b,
	0x0d, 0x14, 0x34, 0xf8, 0x24, 0x07, 0x4b, 0x10, 0x34, 0x48, 0xcc, 0xf2, 0x21, 0xe4, 0x25, 0x03,
	0x2d, 0x65, 0xde, 0xa8, 0x34, 0x2d, 0xad, 0x4b, 0x82, 0xbd, 0x82, 0x6a, 0x5a, 0x4a, 0xc7, 0x43,
	0x4f, 0x4e, 0xa2, 0xa8, 0xdd, 0xc8, 0xe1, 0x90, 0xf0, 0x3d, 0x58, 0xc9, 0xcb, 0xd2, 0x50, 0x43,
	0x58, 0x6c, 0x58, 0x2e, 0xa8, 0xdd, 0x19, 0x81, 0x53, 0x0c, 0xdb, 0xfc, 0x6f, 0x09, 0x66, 0x44,
	0x90, 0x12, 0xe9, 0xcb, 0x1e, 0xa0, 0xe8, 0x48, 0x95, 0x11, 0x6c, 0x3e, 0x1e, 0x27, 0xc4, 0x68,
	0xcb, 0x39, 0xd5, 0x38, 0xbd, 0x80, 0x7e, 0x01, 0x68, 0xb0, 0xf0, 0x28, 0xbd, 0x37, 0xef, 0x69,
	0x52, 0xbb, 0x1e, 0x99, 0x2d, 0xb5, 0x6c, 0x49, 0xf7, 0xc4, 0xd5, 0x94, 0x12, 0xa5, 0xcc, 0x14,
	0xa2, 0xe7, 0x00, 0x6d, 0x35, 0x0e, 0x16, 0xa4, 0xa1, 0x6d, 0x2b, 0x75, 0x55, 0x3e, 0xe9, 0x94,
	0x9c, 0x63, 0x25, 0xed, 0xf2, 0x13, 0x73, 0xba, 0x2b, 0xf1, 0x3a, 0x07, 0xca, 0x29, 0xf8, 0x70,
	0xf3, 0x65, 0x94, 0x4c, 0xe8, 0xb1, 0x99, 0x28, 0x9a, 0xa0, 0x34, 0x89, 0x20, 0xae, 0x5c, 0x56,
	0x9d, 0x85, 0xc4, 0xfe, 0xcb, 0xb1, 0xba, 0x0d, 0xdf, 0x0e, 0x69, 0x95, 0x26, 0xbe, 0x1d, 0xd2,
	0xcb, 0x3c, 0x64, 0xdf, 0xcf, 0x26, 0x2f, 0xc3, 0x3c, 0xd3, 0xcd, 0x28, 0xe5, 0x68, 0xd7, 0x32,
	0x7a, 0x95, 0x94, 0x66, 0x29, 0xf3, 0xaa, 0x88, 0x6e, 0xe5, 0xdf, 0x39, 0xc5, 0x20, 0xb7, 0x87,
	0xb1, 0x49, 0xcf, 0xff, 0x47, 0x09, 0x2a, 0x74, 0x37, 0x08, 0xb7, 0xdf, 0x81, 0x69, 0x12, 0xfb,
	0xd9, 0x76, 0x13, 0x49, 0x7b, 0xea, 0x83, 0xd6, 0x90, 0x14, 0xf9, 0xb1, 0xc8, 0xf3, 0x18, 0xd4,
	0x52, 0x1a, 0xf3, 0x88, 0x38, 0x2c, 0x5f, 0xf9, 0x48, 0x9c, 0x67, 0xe2, 0xc0, 0x57, 0x03, 0x56,
	0xce, 0x43, 0xfe, 0x10, 0xb8, 0x2d, 0x98, 0xda, 0xc1, 0xe1, 0x47, 0xea, 0xb4, 0x47, 0xf7, 0x1a,
	0x05, 0xe1, 0x67, 0xc5, 0x87, 0x63, 0x7d, 0x03, 0x33, 0x2d, 0xdb, 0xb5, 0x6c, 0xf7, 0x4c, 0xbc,
	0xbf, 0xf1, 0x68, 0x39, 0xc2, 0x73, 0xdf, 0x10, 0xe8, 0x63, 0x91, 0xcf, 0x7d, 0x5f, 0x03, 0x3c,
	0xa7, 0x15, 0xfd, 0x38, 0xba, 0x8d, 0x83, 0x0f, 0x36, 0x46, 0xf3, 0xcf, 0x45, 0xa8, 0xd0, 0x87,
	0x04, 0xe1, 0xd6, 0x8f, 0x88, 0x17, 0xc9, 0xe7, 0x05, 0x54, 0x93, 0x19, 0x50, 0xe2, 0xc1, 0x70,
	0x88, 0xa2, 0xdb, 0x70, 0x39, 0xf6, 0x4e, 0x91, 0x75, 0x1e, 0xb0, 0xa8, 0x91, 0xfa, 0xa4, 0xa1,
	0x17, 0x9a, 0xff, 0x2a, 0x42, 0x85, 0x16, 0xa5, 0x84, 0x76, 0x2d, 0xb1, 0x57, 0x28, 0x95, 0x83,
	0x26, 0xff, 0x42, 0x35, 0xd4, 0x86, 0xb3, 0xc9, 0x72, 0x17, 0x8f, 0xb9, 0xa9, 0x8f, 0xdb, 0x22,
	0x10, 0x65, 0x54, 0xc8, 0xf4, 0x02, 0xfa, 0x31, 0x40, 0xf4, 0xf2, 0x97, 0xa5, 0xd3, 0x62, 0x14,
	0xce, 0xe2, 0x2f, 0x84, 0x85, 0xd6, 0x43, 0x58, 0x70, 0x71, 0xb8, 0x1e, 0x9c, 0xf7, 0x4d, 0xc7,
	0xeb, 0x59, 0xec, 0x5f, 0x6f, 0x84, 0xfd, 0x67, 0xb7, 0xce, 0xec, 0xf0, 0x75, 0xef, 0x84, 0x4c,
	0x67, 0x23, 0x38, 0xef, 0x7f, 0x46, 0xfb, 0x3f, 0x0b, 0xb1, 0xb9, 0x41, 0x79, 0x36, 0xde, 0xde,
	0xdd, 0xf0, 0xbb, 0xe6, 0xc9, 0x04, 0x6d, 0xdd, 0xfb, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3,
	0xb4, 0xdf, 0x2c, 0x6f, 0x27, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NodeServiceClient is the client API for NodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeServiceClient interface {
	SearchNode(ctx context.Context, in *ByJqlAndUsernameRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	SearchNodeByCql(ctx context.Context, in *WithSearchParamRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	SearchNodeBySql(ctx context.Context, in *BySqlRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	SearchNodeAndCountByCql(ctx context.Context, in *WithSearchParamRequest, opts ...grpc.CallOption) (*SearchNodeAndCountByCqlResponse, error)
	SearchNodeAutoComplete(ctx context.Context, in *ByJqlRequest, opts ...grpc.CallOption) (*SearchNodeAutoCompleteResponse, error)
	CreateNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*CreateNodeResponse, error)
	CreateNeo4JNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*CreateNodeResponse, error)
	CreateNodes(ctx context.Context, in *WithNodesAndUsernameRequest, opts ...grpc.CallOption) (*CreateNodesResponse, error)
	CreateNodesAndRelation(ctx context.Context, in *WithNodesAndUsernameAndRelationRequest, opts ...grpc.CallOption) (*CreateNodesAndRelationResponse, error)
	UpdateNode(ctx context.Context, in *UpdateNodeRequest, opts ...grpc.CallOption) (*UpdateNodeResponse, error)
	UpdateNeo4JNode(ctx context.Context, in *WithNodesAndUsernameRequest, opts ...grpc.CallOption) (*UpdateNodeResponse, error)
	UpdateNodes(ctx context.Context, in *WithNodesAndUsernameRequest, opts ...grpc.CallOption) (*UpdateNodesResponse, error)
	DeleteNode(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*DeleteNodeResponse, error)
	DeleteNodeAndRelation(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*DeleteNodeResponse, error)
	DeleteNeo4JNode(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*DeleteNodeResponse, error)
	DeleteNodes(ctx context.Context, in *ByNodeIdsAndLabelRequest, opts ...grpc.CallOption) (*DeleteNodesResponse, error)
	ListNode(ctx context.Context, in *WithSearchParamRequest, opts ...grpc.CallOption) (*ListNodeResponse, error)
	ListNodeAndParent(ctx context.Context, in *WithChildAndParentRequest, opts ...grpc.CallOption) (*ListNodeAndParentResponse, error)
	ListChildNodeByParent(ctx context.Context, in *WithParentParamRequest, opts ...grpc.CallOption) (*ListNodeResponse, error)
	GetNode(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	GetNodeByName(ctx context.Context, in *ByNodeNameRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	ExistsNode(ctx context.Context, in *ByModelKeyAndPropertiesRequest, opts ...grpc.CallOption) (*ExistsNodeResponse, error)
	GetNeo4JNode(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*GetNodeResponse, error)
	GetNodeCount(ctx context.Context, in *ByLabelNameAndPropertiesRequest, opts ...grpc.CallOption) (*GetNodeCountResponse, error)
	GetTreeStructNodes(ctx context.Context, in *TreeStructRequest, opts ...grpc.CallOption) (*TreeStructResponse, error)
	GetNodesInstance(ctx context.Context, in *NodesInstanceRequest, opts ...grpc.CallOption) (*NodesInstanceResponse, error)
	CountInstanceByModel(ctx context.Context, in *CountInstanceByModelRequest, opts ...grpc.CallOption) (*CountInstanceByModelResponse, error)
	GetInstancesIdAndNameByModel(ctx context.Context, in *GetInstancesIdAndNameByModelRequest, opts ...grpc.CallOption) (*GetInstancesIdAndNameByModelResponse, error)
}

type nodeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeServiceClient(cc grpc.ClientConnInterface) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) SearchNode(ctx context.Context, in *ByJqlAndUsernameRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/SearchNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) SearchNodeByCql(ctx context.Context, in *WithSearchParamRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/SearchNodeByCql", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) SearchNodeBySql(ctx context.Context, in *BySqlRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/SearchNodeBySql", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) SearchNodeAndCountByCql(ctx context.Context, in *WithSearchParamRequest, opts ...grpc.CallOption) (*SearchNodeAndCountByCqlResponse, error) {
	out := new(SearchNodeAndCountByCqlResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/SearchNodeAndCountByCql", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) SearchNodeAutoComplete(ctx context.Context, in *ByJqlRequest, opts ...grpc.CallOption) (*SearchNodeAutoCompleteResponse, error) {
	out := new(SearchNodeAutoCompleteResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/SearchNodeAutoComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) CreateNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*CreateNodeResponse, error) {
	out := new(CreateNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/CreateNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) CreateNeo4JNode(ctx context.Context, in *CreateNodeRequest, opts ...grpc.CallOption) (*CreateNodeResponse, error) {
	out := new(CreateNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/CreateNeo4jNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) CreateNodes(ctx context.Context, in *WithNodesAndUsernameRequest, opts ...grpc.CallOption) (*CreateNodesResponse, error) {
	out := new(CreateNodesResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/CreateNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) CreateNodesAndRelation(ctx context.Context, in *WithNodesAndUsernameAndRelationRequest, opts ...grpc.CallOption) (*CreateNodesAndRelationResponse, error) {
	out := new(CreateNodesAndRelationResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/CreateNodesAndRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) UpdateNode(ctx context.Context, in *UpdateNodeRequest, opts ...grpc.CallOption) (*UpdateNodeResponse, error) {
	out := new(UpdateNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/UpdateNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) UpdateNeo4JNode(ctx context.Context, in *WithNodesAndUsernameRequest, opts ...grpc.CallOption) (*UpdateNodeResponse, error) {
	out := new(UpdateNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/UpdateNeo4jNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) UpdateNodes(ctx context.Context, in *WithNodesAndUsernameRequest, opts ...grpc.CallOption) (*UpdateNodesResponse, error) {
	out := new(UpdateNodesResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/UpdateNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) DeleteNode(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*DeleteNodeResponse, error) {
	out := new(DeleteNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/DeleteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) DeleteNodeAndRelation(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*DeleteNodeResponse, error) {
	out := new(DeleteNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/DeleteNodeAndRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) DeleteNeo4JNode(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*DeleteNodeResponse, error) {
	out := new(DeleteNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/DeleteNeo4jNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) DeleteNodes(ctx context.Context, in *ByNodeIdsAndLabelRequest, opts ...grpc.CallOption) (*DeleteNodesResponse, error) {
	out := new(DeleteNodesResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/DeleteNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ListNode(ctx context.Context, in *WithSearchParamRequest, opts ...grpc.CallOption) (*ListNodeResponse, error) {
	out := new(ListNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/ListNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ListNodeAndParent(ctx context.Context, in *WithChildAndParentRequest, opts ...grpc.CallOption) (*ListNodeAndParentResponse, error) {
	out := new(ListNodeAndParentResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/ListNodeAndParent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ListChildNodeByParent(ctx context.Context, in *WithParentParamRequest, opts ...grpc.CallOption) (*ListNodeResponse, error) {
	out := new(ListNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/ListChildNodeByParent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNode(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/GetNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNodeByName(ctx context.Context, in *ByNodeNameRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/GetNodeByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) ExistsNode(ctx context.Context, in *ByModelKeyAndPropertiesRequest, opts ...grpc.CallOption) (*ExistsNodeResponse, error) {
	out := new(ExistsNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/ExistsNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNeo4JNode(ctx context.Context, in *ByNodeIdAndUsernameRequest, opts ...grpc.CallOption) (*GetNodeResponse, error) {
	out := new(GetNodeResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/GetNeo4jNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNodeCount(ctx context.Context, in *ByLabelNameAndPropertiesRequest, opts ...grpc.CallOption) (*GetNodeCountResponse, error) {
	out := new(GetNodeCountResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/GetNodeCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetTreeStructNodes(ctx context.Context, in *TreeStructRequest, opts ...grpc.CallOption) (*TreeStructResponse, error) {
	out := new(TreeStructResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/GetTreeStructNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNodesInstance(ctx context.Context, in *NodesInstanceRequest, opts ...grpc.CallOption) (*NodesInstanceResponse, error) {
	out := new(NodesInstanceResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/GetNodesInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) CountInstanceByModel(ctx context.Context, in *CountInstanceByModelRequest, opts ...grpc.CallOption) (*CountInstanceByModelResponse, error) {
	out := new(CountInstanceByModelResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/CountInstanceByModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetInstancesIdAndNameByModel(ctx context.Context, in *GetInstancesIdAndNameByModelRequest, opts ...grpc.CallOption) (*GetInstancesIdAndNameByModelResponse, error) {
	out := new(GetInstancesIdAndNameByModelResponse)
	err := c.cc.Invoke(ctx, "/rpc.NodeService/GetInstancesIdAndNameByModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServiceServer is the server API for NodeService service.
type NodeServiceServer interface {
	SearchNode(context.Context, *ByJqlAndUsernameRequest) (*common.SimpleJsonResponse, error)
	SearchNodeByCql(context.Context, *WithSearchParamRequest) (*common.SimpleJsonResponse, error)
	SearchNodeBySql(context.Context, *BySqlRequest) (*common.SimpleJsonResponse, error)
	SearchNodeAndCountByCql(context.Context, *WithSearchParamRequest) (*SearchNodeAndCountByCqlResponse, error)
	SearchNodeAutoComplete(context.Context, *ByJqlRequest) (*SearchNodeAutoCompleteResponse, error)
	CreateNode(context.Context, *CreateNodeRequest) (*CreateNodeResponse, error)
	CreateNeo4JNode(context.Context, *CreateNodeRequest) (*CreateNodeResponse, error)
	CreateNodes(context.Context, *WithNodesAndUsernameRequest) (*CreateNodesResponse, error)
	CreateNodesAndRelation(context.Context, *WithNodesAndUsernameAndRelationRequest) (*CreateNodesAndRelationResponse, error)
	UpdateNode(context.Context, *UpdateNodeRequest) (*UpdateNodeResponse, error)
	UpdateNeo4JNode(context.Context, *WithNodesAndUsernameRequest) (*UpdateNodeResponse, error)
	UpdateNodes(context.Context, *WithNodesAndUsernameRequest) (*UpdateNodesResponse, error)
	DeleteNode(context.Context, *ByNodeIdAndUsernameRequest) (*DeleteNodeResponse, error)
	DeleteNodeAndRelation(context.Context, *ByNodeIdAndUsernameRequest) (*DeleteNodeResponse, error)
	DeleteNeo4JNode(context.Context, *ByNodeIdAndUsernameRequest) (*DeleteNodeResponse, error)
	DeleteNodes(context.Context, *ByNodeIdsAndLabelRequest) (*DeleteNodesResponse, error)
	ListNode(context.Context, *WithSearchParamRequest) (*ListNodeResponse, error)
	ListNodeAndParent(context.Context, *WithChildAndParentRequest) (*ListNodeAndParentResponse, error)
	ListChildNodeByParent(context.Context, *WithParentParamRequest) (*ListNodeResponse, error)
	GetNode(context.Context, *ByNodeIdAndUsernameRequest) (*GetNodeResponse, error)
	GetNodeByName(context.Context, *ByNodeNameRequest) (*GetNodeResponse, error)
	ExistsNode(context.Context, *ByModelKeyAndPropertiesRequest) (*ExistsNodeResponse, error)
	GetNeo4JNode(context.Context, *ByNodeIdAndUsernameRequest) (*GetNodeResponse, error)
	GetNodeCount(context.Context, *ByLabelNameAndPropertiesRequest) (*GetNodeCountResponse, error)
	GetTreeStructNodes(context.Context, *TreeStructRequest) (*TreeStructResponse, error)
	GetNodesInstance(context.Context, *NodesInstanceRequest) (*NodesInstanceResponse, error)
	CountInstanceByModel(context.Context, *CountInstanceByModelRequest) (*CountInstanceByModelResponse, error)
	GetInstancesIdAndNameByModel(context.Context, *GetInstancesIdAndNameByModelRequest) (*GetInstancesIdAndNameByModelResponse, error)
}

// UnimplementedNodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServiceServer struct {
}

func (*UnimplementedNodeServiceServer) SearchNode(ctx context.Context, req *ByJqlAndUsernameRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNode not implemented")
}
func (*UnimplementedNodeServiceServer) SearchNodeByCql(ctx context.Context, req *WithSearchParamRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNodeByCql not implemented")
}
func (*UnimplementedNodeServiceServer) SearchNodeBySql(ctx context.Context, req *BySqlRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNodeBySql not implemented")
}
func (*UnimplementedNodeServiceServer) SearchNodeAndCountByCql(ctx context.Context, req *WithSearchParamRequest) (*SearchNodeAndCountByCqlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNodeAndCountByCql not implemented")
}
func (*UnimplementedNodeServiceServer) SearchNodeAutoComplete(ctx context.Context, req *ByJqlRequest) (*SearchNodeAutoCompleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNodeAutoComplete not implemented")
}
func (*UnimplementedNodeServiceServer) CreateNode(ctx context.Context, req *CreateNodeRequest) (*CreateNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNode not implemented")
}
func (*UnimplementedNodeServiceServer) CreateNeo4JNode(ctx context.Context, req *CreateNodeRequest) (*CreateNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNeo4JNode not implemented")
}
func (*UnimplementedNodeServiceServer) CreateNodes(ctx context.Context, req *WithNodesAndUsernameRequest) (*CreateNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNodes not implemented")
}
func (*UnimplementedNodeServiceServer) CreateNodesAndRelation(ctx context.Context, req *WithNodesAndUsernameAndRelationRequest) (*CreateNodesAndRelationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNodesAndRelation not implemented")
}
func (*UnimplementedNodeServiceServer) UpdateNode(ctx context.Context, req *UpdateNodeRequest) (*UpdateNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNode not implemented")
}
func (*UnimplementedNodeServiceServer) UpdateNeo4JNode(ctx context.Context, req *WithNodesAndUsernameRequest) (*UpdateNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNeo4JNode not implemented")
}
func (*UnimplementedNodeServiceServer) UpdateNodes(ctx context.Context, req *WithNodesAndUsernameRequest) (*UpdateNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateNodes not implemented")
}
func (*UnimplementedNodeServiceServer) DeleteNode(ctx context.Context, req *ByNodeIdAndUsernameRequest) (*DeleteNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNode not implemented")
}
func (*UnimplementedNodeServiceServer) DeleteNodeAndRelation(ctx context.Context, req *ByNodeIdAndUsernameRequest) (*DeleteNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNodeAndRelation not implemented")
}
func (*UnimplementedNodeServiceServer) DeleteNeo4JNode(ctx context.Context, req *ByNodeIdAndUsernameRequest) (*DeleteNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNeo4JNode not implemented")
}
func (*UnimplementedNodeServiceServer) DeleteNodes(ctx context.Context, req *ByNodeIdsAndLabelRequest) (*DeleteNodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNodes not implemented")
}
func (*UnimplementedNodeServiceServer) ListNode(ctx context.Context, req *WithSearchParamRequest) (*ListNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNode not implemented")
}
func (*UnimplementedNodeServiceServer) ListNodeAndParent(ctx context.Context, req *WithChildAndParentRequest) (*ListNodeAndParentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNodeAndParent not implemented")
}
func (*UnimplementedNodeServiceServer) ListChildNodeByParent(ctx context.Context, req *WithParentParamRequest) (*ListNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChildNodeByParent not implemented")
}
func (*UnimplementedNodeServiceServer) GetNode(ctx context.Context, req *ByNodeIdAndUsernameRequest) (*GetNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNode not implemented")
}
func (*UnimplementedNodeServiceServer) GetNodeByName(ctx context.Context, req *ByNodeNameRequest) (*GetNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeByName not implemented")
}
func (*UnimplementedNodeServiceServer) ExistsNode(ctx context.Context, req *ByModelKeyAndPropertiesRequest) (*ExistsNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExistsNode not implemented")
}
func (*UnimplementedNodeServiceServer) GetNeo4JNode(ctx context.Context, req *ByNodeIdAndUsernameRequest) (*GetNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNeo4JNode not implemented")
}
func (*UnimplementedNodeServiceServer) GetNodeCount(ctx context.Context, req *ByLabelNameAndPropertiesRequest) (*GetNodeCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeCount not implemented")
}
func (*UnimplementedNodeServiceServer) GetTreeStructNodes(ctx context.Context, req *TreeStructRequest) (*TreeStructResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTreeStructNodes not implemented")
}
func (*UnimplementedNodeServiceServer) GetNodesInstance(ctx context.Context, req *NodesInstanceRequest) (*NodesInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodesInstance not implemented")
}
func (*UnimplementedNodeServiceServer) CountInstanceByModel(ctx context.Context, req *CountInstanceByModelRequest) (*CountInstanceByModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountInstanceByModel not implemented")
}
func (*UnimplementedNodeServiceServer) GetInstancesIdAndNameByModel(ctx context.Context, req *GetInstancesIdAndNameByModelRequest) (*GetInstancesIdAndNameByModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstancesIdAndNameByModel not implemented")
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_SearchNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByJqlAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).SearchNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/SearchNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).SearchNode(ctx, req.(*ByJqlAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_SearchNodeByCql_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithSearchParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).SearchNodeByCql(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/SearchNodeByCql",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).SearchNodeByCql(ctx, req.(*WithSearchParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_SearchNodeBySql_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BySqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).SearchNodeBySql(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/SearchNodeBySql",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).SearchNodeBySql(ctx, req.(*BySqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_SearchNodeAndCountByCql_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithSearchParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).SearchNodeAndCountByCql(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/SearchNodeAndCountByCql",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).SearchNodeAndCountByCql(ctx, req.(*WithSearchParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_SearchNodeAutoComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByJqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).SearchNodeAutoComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/SearchNodeAutoComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).SearchNodeAutoComplete(ctx, req.(*ByJqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_CreateNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).CreateNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/CreateNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).CreateNode(ctx, req.(*CreateNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_CreateNeo4JNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).CreateNeo4JNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/CreateNeo4JNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).CreateNeo4JNode(ctx, req.(*CreateNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_CreateNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithNodesAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).CreateNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/CreateNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).CreateNodes(ctx, req.(*WithNodesAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_CreateNodesAndRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithNodesAndUsernameAndRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).CreateNodesAndRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/CreateNodesAndRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).CreateNodesAndRelation(ctx, req.(*WithNodesAndUsernameAndRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_UpdateNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).UpdateNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/UpdateNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).UpdateNode(ctx, req.(*UpdateNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_UpdateNeo4JNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithNodesAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).UpdateNeo4JNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/UpdateNeo4JNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).UpdateNeo4JNode(ctx, req.(*WithNodesAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_UpdateNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithNodesAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).UpdateNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/UpdateNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).UpdateNodes(ctx, req.(*WithNodesAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).DeleteNode(ctx, req.(*ByNodeIdAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_DeleteNodeAndRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).DeleteNodeAndRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/DeleteNodeAndRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).DeleteNodeAndRelation(ctx, req.(*ByNodeIdAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_DeleteNeo4JNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).DeleteNeo4JNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/DeleteNeo4JNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).DeleteNeo4JNode(ctx, req.(*ByNodeIdAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_DeleteNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdsAndLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).DeleteNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/DeleteNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).DeleteNodes(ctx, req.(*ByNodeIdsAndLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ListNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithSearchParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ListNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/ListNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ListNode(ctx, req.(*WithSearchParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ListNodeAndParent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithChildAndParentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ListNodeAndParent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/ListNodeAndParent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ListNodeAndParent(ctx, req.(*WithChildAndParentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ListChildNodeByParent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithParentParamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ListChildNodeByParent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/ListChildNodeByParent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ListChildNodeByParent(ctx, req.(*WithParentParamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/GetNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNode(ctx, req.(*ByNodeIdAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNodeByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNodeByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/GetNodeByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNodeByName(ctx, req.(*ByNodeNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_ExistsNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByModelKeyAndPropertiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).ExistsNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/ExistsNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).ExistsNode(ctx, req.(*ByModelKeyAndPropertiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNeo4JNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNeo4JNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/GetNeo4JNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNeo4JNode(ctx, req.(*ByNodeIdAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNodeCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByLabelNameAndPropertiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNodeCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/GetNodeCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNodeCount(ctx, req.(*ByLabelNameAndPropertiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetTreeStructNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TreeStructRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetTreeStructNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/GetTreeStructNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetTreeStructNodes(ctx, req.(*TreeStructRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNodesInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodesInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNodesInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/GetNodesInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNodesInstance(ctx, req.(*NodesInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_CountInstanceByModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountInstanceByModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).CountInstanceByModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/CountInstanceByModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).CountInstanceByModel(ctx, req.(*CountInstanceByModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetInstancesIdAndNameByModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstancesIdAndNameByModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetInstancesIdAndNameByModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.NodeService/GetInstancesIdAndNameByModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetInstancesIdAndNameByModel(ctx, req.(*GetInstancesIdAndNameByModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchNode",
			Handler:    _NodeService_SearchNode_Handler,
		},
		{
			MethodName: "SearchNodeByCql",
			Handler:    _NodeService_SearchNodeByCql_Handler,
		},
		{
			MethodName: "SearchNodeBySql",
			Handler:    _NodeService_SearchNodeBySql_Handler,
		},
		{
			MethodName: "SearchNodeAndCountByCql",
			Handler:    _NodeService_SearchNodeAndCountByCql_Handler,
		},
		{
			MethodName: "SearchNodeAutoComplete",
			Handler:    _NodeService_SearchNodeAutoComplete_Handler,
		},
		{
			MethodName: "CreateNode",
			Handler:    _NodeService_CreateNode_Handler,
		},
		{
			MethodName: "CreateNeo4jNode",
			Handler:    _NodeService_CreateNeo4JNode_Handler,
		},
		{
			MethodName: "CreateNodes",
			Handler:    _NodeService_CreateNodes_Handler,
		},
		{
			MethodName: "CreateNodesAndRelation",
			Handler:    _NodeService_CreateNodesAndRelation_Handler,
		},
		{
			MethodName: "UpdateNode",
			Handler:    _NodeService_UpdateNode_Handler,
		},
		{
			MethodName: "UpdateNeo4jNode",
			Handler:    _NodeService_UpdateNeo4JNode_Handler,
		},
		{
			MethodName: "UpdateNodes",
			Handler:    _NodeService_UpdateNodes_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _NodeService_DeleteNode_Handler,
		},
		{
			MethodName: "DeleteNodeAndRelation",
			Handler:    _NodeService_DeleteNodeAndRelation_Handler,
		},
		{
			MethodName: "DeleteNeo4jNode",
			Handler:    _NodeService_DeleteNeo4JNode_Handler,
		},
		{
			MethodName: "DeleteNodes",
			Handler:    _NodeService_DeleteNodes_Handler,
		},
		{
			MethodName: "ListNode",
			Handler:    _NodeService_ListNode_Handler,
		},
		{
			MethodName: "ListNodeAndParent",
			Handler:    _NodeService_ListNodeAndParent_Handler,
		},
		{
			MethodName: "ListChildNodeByParent",
			Handler:    _NodeService_ListChildNodeByParent_Handler,
		},
		{
			MethodName: "GetNode",
			Handler:    _NodeService_GetNode_Handler,
		},
		{
			MethodName: "GetNodeByName",
			Handler:    _NodeService_GetNodeByName_Handler,
		},
		{
			MethodName: "ExistsNode",
			Handler:    _NodeService_ExistsNode_Handler,
		},
		{
			MethodName: "GetNeo4jNode",
			Handler:    _NodeService_GetNeo4JNode_Handler,
		},
		{
			MethodName: "GetNodeCount",
			Handler:    _NodeService_GetNodeCount_Handler,
		},
		{
			MethodName: "GetTreeStructNodes",
			Handler:    _NodeService_GetTreeStructNodes_Handler,
		},
		{
			MethodName: "GetNodesInstance",
			Handler:    _NodeService_GetNodesInstance_Handler,
		},
		{
			MethodName: "CountInstanceByModel",
			Handler:    _NodeService_CountInstanceByModel_Handler,
		},
		{
			MethodName: "GetInstancesIdAndNameByModel",
			Handler:    _NodeService_GetInstancesIdAndNameByModel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/cmdb.proto",
}

// RelationServiceClient is the client API for RelationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RelationServiceClient interface {
	SearchNodeRelation(ctx context.Context, in *ByNodeIdsRequest, opts ...grpc.CallOption) (*SearchRelationResponse, error)
	CountNodeRelations(ctx context.Context, in *ByNodeIdAndRelationNameRequest, opts ...grpc.CallOption) (*CountNodeRelationsResponse, error)
	CountNodesRelations(ctx context.Context, in *ByCqlRequest, opts ...grpc.CallOption) (*CountNodesRelationsResponse, error)
	GetNodeRelation(ctx context.Context, in *ByJqlRequest, opts ...grpc.CallOption) (*GetNodeRelationResponse, error)
	CreateRelation(ctx context.Context, in *CreateRelationRequest, opts ...grpc.CallOption) (*CreateRelationResponse, error)
	CreateRelations(ctx context.Context, in *CreateRelationsRequest, opts ...grpc.CallOption) (*CreateRelationsResponse, error)
	ClearRelation(ctx context.Context, in *ClearRelationRequest, opts ...grpc.CallOption) (*ClearRelationResponse, error)
	ClearAllRelation(ctx context.Context, in *ClearAllRelationRequest, opts ...grpc.CallOption) (*ClearAllRelationResponse, error)
	GetNodeRelationTreeDetail(ctx context.Context, in *GetNodeRelationTreeDetailRequest, opts ...grpc.CallOption) (*GetNodeRelationTreeDetailResponse, error)
}

type relationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRelationServiceClient(cc grpc.ClientConnInterface) RelationServiceClient {
	return &relationServiceClient{cc}
}

func (c *relationServiceClient) SearchNodeRelation(ctx context.Context, in *ByNodeIdsRequest, opts ...grpc.CallOption) (*SearchRelationResponse, error) {
	out := new(SearchRelationResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/SearchNodeRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) CountNodeRelations(ctx context.Context, in *ByNodeIdAndRelationNameRequest, opts ...grpc.CallOption) (*CountNodeRelationsResponse, error) {
	out := new(CountNodeRelationsResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/CountNodeRelations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) CountNodesRelations(ctx context.Context, in *ByCqlRequest, opts ...grpc.CallOption) (*CountNodesRelationsResponse, error) {
	out := new(CountNodesRelationsResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/CountNodesRelations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) GetNodeRelation(ctx context.Context, in *ByJqlRequest, opts ...grpc.CallOption) (*GetNodeRelationResponse, error) {
	out := new(GetNodeRelationResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/GetNodeRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) CreateRelation(ctx context.Context, in *CreateRelationRequest, opts ...grpc.CallOption) (*CreateRelationResponse, error) {
	out := new(CreateRelationResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/CreateRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) CreateRelations(ctx context.Context, in *CreateRelationsRequest, opts ...grpc.CallOption) (*CreateRelationsResponse, error) {
	out := new(CreateRelationsResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/CreateRelations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) ClearRelation(ctx context.Context, in *ClearRelationRequest, opts ...grpc.CallOption) (*ClearRelationResponse, error) {
	out := new(ClearRelationResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/ClearRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) ClearAllRelation(ctx context.Context, in *ClearAllRelationRequest, opts ...grpc.CallOption) (*ClearAllRelationResponse, error) {
	out := new(ClearAllRelationResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/ClearAllRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relationServiceClient) GetNodeRelationTreeDetail(ctx context.Context, in *GetNodeRelationTreeDetailRequest, opts ...grpc.CallOption) (*GetNodeRelationTreeDetailResponse, error) {
	out := new(GetNodeRelationTreeDetailResponse)
	err := c.cc.Invoke(ctx, "/rpc.RelationService/GetNodeRelationTreeDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RelationServiceServer is the server API for RelationService service.
type RelationServiceServer interface {
	SearchNodeRelation(context.Context, *ByNodeIdsRequest) (*SearchRelationResponse, error)
	CountNodeRelations(context.Context, *ByNodeIdAndRelationNameRequest) (*CountNodeRelationsResponse, error)
	CountNodesRelations(context.Context, *ByCqlRequest) (*CountNodesRelationsResponse, error)
	GetNodeRelation(context.Context, *ByJqlRequest) (*GetNodeRelationResponse, error)
	CreateRelation(context.Context, *CreateRelationRequest) (*CreateRelationResponse, error)
	CreateRelations(context.Context, *CreateRelationsRequest) (*CreateRelationsResponse, error)
	ClearRelation(context.Context, *ClearRelationRequest) (*ClearRelationResponse, error)
	ClearAllRelation(context.Context, *ClearAllRelationRequest) (*ClearAllRelationResponse, error)
	GetNodeRelationTreeDetail(context.Context, *GetNodeRelationTreeDetailRequest) (*GetNodeRelationTreeDetailResponse, error)
}

// UnimplementedRelationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRelationServiceServer struct {
}

func (*UnimplementedRelationServiceServer) SearchNodeRelation(ctx context.Context, req *ByNodeIdsRequest) (*SearchRelationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNodeRelation not implemented")
}
func (*UnimplementedRelationServiceServer) CountNodeRelations(ctx context.Context, req *ByNodeIdAndRelationNameRequest) (*CountNodeRelationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountNodeRelations not implemented")
}
func (*UnimplementedRelationServiceServer) CountNodesRelations(ctx context.Context, req *ByCqlRequest) (*CountNodesRelationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountNodesRelations not implemented")
}
func (*UnimplementedRelationServiceServer) GetNodeRelation(ctx context.Context, req *ByJqlRequest) (*GetNodeRelationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeRelation not implemented")
}
func (*UnimplementedRelationServiceServer) CreateRelation(ctx context.Context, req *CreateRelationRequest) (*CreateRelationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRelation not implemented")
}
func (*UnimplementedRelationServiceServer) CreateRelations(ctx context.Context, req *CreateRelationsRequest) (*CreateRelationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRelations not implemented")
}
func (*UnimplementedRelationServiceServer) ClearRelation(ctx context.Context, req *ClearRelationRequest) (*ClearRelationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearRelation not implemented")
}
func (*UnimplementedRelationServiceServer) ClearAllRelation(ctx context.Context, req *ClearAllRelationRequest) (*ClearAllRelationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearAllRelation not implemented")
}
func (*UnimplementedRelationServiceServer) GetNodeRelationTreeDetail(ctx context.Context, req *GetNodeRelationTreeDetailRequest) (*GetNodeRelationTreeDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeRelationTreeDetail not implemented")
}

func RegisterRelationServiceServer(s *grpc.Server, srv RelationServiceServer) {
	s.RegisterService(&_RelationService_serviceDesc, srv)
}

func _RelationService_SearchNodeRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).SearchNodeRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/SearchNodeRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).SearchNodeRelation(ctx, req.(*ByNodeIdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_CountNodeRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdAndRelationNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).CountNodeRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/CountNodeRelations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).CountNodeRelations(ctx, req.(*ByNodeIdAndRelationNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_CountNodesRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByCqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).CountNodesRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/CountNodesRelations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).CountNodesRelations(ctx, req.(*ByCqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_GetNodeRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByJqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).GetNodeRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/GetNodeRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).GetNodeRelation(ctx, req.(*ByJqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_CreateRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).CreateRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/CreateRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).CreateRelation(ctx, req.(*CreateRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_CreateRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRelationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).CreateRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/CreateRelations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).CreateRelations(ctx, req.(*CreateRelationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_ClearRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).ClearRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/ClearRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).ClearRelation(ctx, req.(*ClearRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_ClearAllRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearAllRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).ClearAllRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/ClearAllRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).ClearAllRelation(ctx, req.(*ClearAllRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelationService_GetNodeRelationTreeDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeRelationTreeDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelationServiceServer).GetNodeRelationTreeDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.RelationService/GetNodeRelationTreeDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelationServiceServer).GetNodeRelationTreeDetail(ctx, req.(*GetNodeRelationTreeDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RelationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.RelationService",
	HandlerType: (*RelationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchNodeRelation",
			Handler:    _RelationService_SearchNodeRelation_Handler,
		},
		{
			MethodName: "CountNodeRelations",
			Handler:    _RelationService_CountNodeRelations_Handler,
		},
		{
			MethodName: "CountNodesRelations",
			Handler:    _RelationService_CountNodesRelations_Handler,
		},
		{
			MethodName: "GetNodeRelation",
			Handler:    _RelationService_GetNodeRelation_Handler,
		},
		{
			MethodName: "CreateRelation",
			Handler:    _RelationService_CreateRelation_Handler,
		},
		{
			MethodName: "CreateRelations",
			Handler:    _RelationService_CreateRelations_Handler,
		},
		{
			MethodName: "ClearRelation",
			Handler:    _RelationService_ClearRelation_Handler,
		},
		{
			MethodName: "ClearAllRelation",
			Handler:    _RelationService_ClearAllRelation_Handler,
		},
		{
			MethodName: "GetNodeRelationTreeDetail",
			Handler:    _RelationService_GetNodeRelationTreeDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/cmdb.proto",
}

// ModelServiceClient is the client API for ModelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModelServiceClient interface {
	ListModel(ctx context.Context, in *ByPageAndKeywordRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	CreateModel(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	UpdateModel(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	DeleteModel(ctx context.Context, in *ByModelIdAndUsernameRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	GetModel(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	GetModelByLabel(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	BindingProperty(ctx context.Context, in *ByModelIdAndRelationPropertyRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	DeleteBindingProperty(ctx context.Context, in *ByModelIdAndRelationPropertyRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	GetBindingProperties(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
}

type modelServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewModelServiceClient(cc grpc.ClientConnInterface) ModelServiceClient {
	return &modelServiceClient{cc}
}

func (c *modelServiceClient) ListModel(ctx context.Context, in *ByPageAndKeywordRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/ListModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) CreateModel(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/CreateModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) UpdateModel(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/UpdateModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) DeleteModel(ctx context.Context, in *ByModelIdAndUsernameRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/DeleteModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) GetModel(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/GetModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) GetModelByLabel(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/GetModelByLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) BindingProperty(ctx context.Context, in *ByModelIdAndRelationPropertyRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/BindingProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) DeleteBindingProperty(ctx context.Context, in *ByModelIdAndRelationPropertyRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/DeleteBindingProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *modelServiceClient) GetBindingProperties(ctx context.Context, in *common.SimpleJsonRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ModelService/GetBindingProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModelServiceServer is the server API for ModelService service.
type ModelServiceServer interface {
	ListModel(context.Context, *ByPageAndKeywordRequest) (*common.SimpleJsonResponse, error)
	CreateModel(context.Context, *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error)
	UpdateModel(context.Context, *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error)
	DeleteModel(context.Context, *ByModelIdAndUsernameRequest) (*common.SimpleJsonResponse, error)
	GetModel(context.Context, *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error)
	GetModelByLabel(context.Context, *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error)
	BindingProperty(context.Context, *ByModelIdAndRelationPropertyRequest) (*common.SimpleJsonResponse, error)
	DeleteBindingProperty(context.Context, *ByModelIdAndRelationPropertyRequest) (*common.SimpleJsonResponse, error)
	GetBindingProperties(context.Context, *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error)
}

// UnimplementedModelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedModelServiceServer struct {
}

func (*UnimplementedModelServiceServer) ListModel(ctx context.Context, req *ByPageAndKeywordRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListModel not implemented")
}
func (*UnimplementedModelServiceServer) CreateModel(ctx context.Context, req *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateModel not implemented")
}
func (*UnimplementedModelServiceServer) UpdateModel(ctx context.Context, req *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateModel not implemented")
}
func (*UnimplementedModelServiceServer) DeleteModel(ctx context.Context, req *ByModelIdAndUsernameRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModel not implemented")
}
func (*UnimplementedModelServiceServer) GetModel(ctx context.Context, req *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModel not implemented")
}
func (*UnimplementedModelServiceServer) GetModelByLabel(ctx context.Context, req *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetModelByLabel not implemented")
}
func (*UnimplementedModelServiceServer) BindingProperty(ctx context.Context, req *ByModelIdAndRelationPropertyRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindingProperty not implemented")
}
func (*UnimplementedModelServiceServer) DeleteBindingProperty(ctx context.Context, req *ByModelIdAndRelationPropertyRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBindingProperty not implemented")
}
func (*UnimplementedModelServiceServer) GetBindingProperties(ctx context.Context, req *common.SimpleJsonRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBindingProperties not implemented")
}

func RegisterModelServiceServer(s *grpc.Server, srv ModelServiceServer) {
	s.RegisterService(&_ModelService_serviceDesc, srv)
}

func _ModelService_ListModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByPageAndKeywordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).ListModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/ListModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).ListModel(ctx, req.(*ByPageAndKeywordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_CreateModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.SimpleJsonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).CreateModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/CreateModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).CreateModel(ctx, req.(*common.SimpleJsonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_UpdateModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.SimpleJsonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).UpdateModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/UpdateModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).UpdateModel(ctx, req.(*common.SimpleJsonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_DeleteModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByModelIdAndUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).DeleteModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/DeleteModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).DeleteModel(ctx, req.(*ByModelIdAndUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_GetModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.SimpleJsonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).GetModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/GetModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).GetModel(ctx, req.(*common.SimpleJsonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_GetModelByLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.SimpleJsonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).GetModelByLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/GetModelByLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).GetModelByLabel(ctx, req.(*common.SimpleJsonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_BindingProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByModelIdAndRelationPropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).BindingProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/BindingProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).BindingProperty(ctx, req.(*ByModelIdAndRelationPropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_DeleteBindingProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByModelIdAndRelationPropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).DeleteBindingProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/DeleteBindingProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).DeleteBindingProperty(ctx, req.(*ByModelIdAndRelationPropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModelService_GetBindingProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.SimpleJsonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModelServiceServer).GetBindingProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ModelService/GetBindingProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModelServiceServer).GetBindingProperties(ctx, req.(*common.SimpleJsonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.ModelService",
	HandlerType: (*ModelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListModel",
			Handler:    _ModelService_ListModel_Handler,
		},
		{
			MethodName: "CreateModel",
			Handler:    _ModelService_CreateModel_Handler,
		},
		{
			MethodName: "UpdateModel",
			Handler:    _ModelService_UpdateModel_Handler,
		},
		{
			MethodName: "DeleteModel",
			Handler:    _ModelService_DeleteModel_Handler,
		},
		{
			MethodName: "GetModel",
			Handler:    _ModelService_GetModel_Handler,
		},
		{
			MethodName: "GetModelByLabel",
			Handler:    _ModelService_GetModelByLabel_Handler,
		},
		{
			MethodName: "BindingProperty",
			Handler:    _ModelService_BindingProperty_Handler,
		},
		{
			MethodName: "DeleteBindingProperty",
			Handler:    _ModelService_DeleteBindingProperty_Handler,
		},
		{
			MethodName: "GetBindingProperties",
			Handler:    _ModelService_GetBindingProperties_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/cmdb.proto",
}

// ExcelServiceClient is the client API for ExcelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExcelServiceClient interface {
	UploadExcel(ctx context.Context, in *WithFileInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	DownloadExcel(ctx context.Context, in *ByNodeIdsRequest, opts ...grpc.CallOption) (*DownloadExcelResponse, error)
}

type excelServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewExcelServiceClient(cc grpc.ClientConnInterface) ExcelServiceClient {
	return &excelServiceClient{cc}
}

func (c *excelServiceClient) UploadExcel(ctx context.Context, in *WithFileInfoRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.ExcelService/UploadExcel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *excelServiceClient) DownloadExcel(ctx context.Context, in *ByNodeIdsRequest, opts ...grpc.CallOption) (*DownloadExcelResponse, error) {
	out := new(DownloadExcelResponse)
	err := c.cc.Invoke(ctx, "/rpc.ExcelService/DownloadExcel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExcelServiceServer is the server API for ExcelService service.
type ExcelServiceServer interface {
	UploadExcel(context.Context, *WithFileInfoRequest) (*common.SimpleJsonResponse, error)
	DownloadExcel(context.Context, *ByNodeIdsRequest) (*DownloadExcelResponse, error)
}

// UnimplementedExcelServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExcelServiceServer struct {
}

func (*UnimplementedExcelServiceServer) UploadExcel(ctx context.Context, req *WithFileInfoRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadExcel not implemented")
}
func (*UnimplementedExcelServiceServer) DownloadExcel(ctx context.Context, req *ByNodeIdsRequest) (*DownloadExcelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadExcel not implemented")
}

func RegisterExcelServiceServer(s *grpc.Server, srv ExcelServiceServer) {
	s.RegisterService(&_ExcelService_serviceDesc, srv)
}

func _ExcelService_UploadExcel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithFileInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExcelServiceServer).UploadExcel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ExcelService/UploadExcel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExcelServiceServer).UploadExcel(ctx, req.(*WithFileInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExcelService_DownloadExcel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByNodeIdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExcelServiceServer).DownloadExcel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ExcelService/DownloadExcel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExcelServiceServer).DownloadExcel(ctx, req.(*ByNodeIdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExcelService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.ExcelService",
	HandlerType: (*ExcelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadExcel",
			Handler:    _ExcelService_UploadExcel_Handler,
		},
		{
			MethodName: "DownloadExcel",
			Handler:    _ExcelService_DownloadExcel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/cmdb.proto",
}

// TableServiceClient is the client API for TableService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TableServiceClient interface {
	CreateTable(ctx context.Context, in *WithTableRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error)
	CreateTableGroup(ctx context.Context, in *WithTableGroupRequest, opts ...grpc.CallOption) (*CreateTableGroupResponse, error)
	ClearTable(ctx context.Context, in *WithTableRequest, opts ...grpc.CallOption) (*ClearTableResponse, error)
}

type tableServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTableServiceClient(cc grpc.ClientConnInterface) TableServiceClient {
	return &tableServiceClient{cc}
}

func (c *tableServiceClient) CreateTable(ctx context.Context, in *WithTableRequest, opts ...grpc.CallOption) (*common.SimpleJsonResponse, error) {
	out := new(common.SimpleJsonResponse)
	err := c.cc.Invoke(ctx, "/rpc.TableService/CreateTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tableServiceClient) CreateTableGroup(ctx context.Context, in *WithTableGroupRequest, opts ...grpc.CallOption) (*CreateTableGroupResponse, error) {
	out := new(CreateTableGroupResponse)
	err := c.cc.Invoke(ctx, "/rpc.TableService/CreateTableGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tableServiceClient) ClearTable(ctx context.Context, in *WithTableRequest, opts ...grpc.CallOption) (*ClearTableResponse, error) {
	out := new(ClearTableResponse)
	err := c.cc.Invoke(ctx, "/rpc.TableService/ClearTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TableServiceServer is the server API for TableService service.
type TableServiceServer interface {
	CreateTable(context.Context, *WithTableRequest) (*common.SimpleJsonResponse, error)
	CreateTableGroup(context.Context, *WithTableGroupRequest) (*CreateTableGroupResponse, error)
	ClearTable(context.Context, *WithTableRequest) (*ClearTableResponse, error)
}

// UnimplementedTableServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTableServiceServer struct {
}

func (*UnimplementedTableServiceServer) CreateTable(ctx context.Context, req *WithTableRequest) (*common.SimpleJsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTable not implemented")
}
func (*UnimplementedTableServiceServer) CreateTableGroup(ctx context.Context, req *WithTableGroupRequest) (*CreateTableGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTableGroup not implemented")
}
func (*UnimplementedTableServiceServer) ClearTable(ctx context.Context, req *WithTableRequest) (*ClearTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearTable not implemented")
}

func RegisterTableServiceServer(s *grpc.Server, srv TableServiceServer) {
	s.RegisterService(&_TableService_serviceDesc, srv)
}

func _TableService_CreateTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TableServiceServer).CreateTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TableService/CreateTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TableServiceServer).CreateTable(ctx, req.(*WithTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TableService_CreateTableGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithTableGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TableServiceServer).CreateTableGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TableService/CreateTableGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TableServiceServer).CreateTableGroup(ctx, req.(*WithTableGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TableService_ClearTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TableServiceServer).ClearTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TableService/ClearTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TableServiceServer).ClearTable(ctx, req.(*WithTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TableService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.TableService",
	HandlerType: (*TableServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTable",
			Handler:    _TableService_CreateTable_Handler,
		},
		{
			MethodName: "CreateTableGroup",
			Handler:    _TableService_CreateTableGroup_Handler,
		},
		{
			MethodName: "ClearTable",
			Handler:    _TableService_ClearTable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/grpc/cmdb.proto",
}
