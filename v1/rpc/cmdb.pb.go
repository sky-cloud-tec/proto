// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: src/grpc/cmdb.proto

package rpc

import (
	cmdb "github.com/sky-cloud-tec/proto/v1/cmdb"
	common "github.com/sky-cloud-tec/proto/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ByJqlAndUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jql  string `protobuf:"bytes,10,opt,name=jql,proto3" json:"jql,omitempty"`
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ByJqlAndUsernameRequest) Reset() {
	*x = ByJqlAndUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByJqlAndUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByJqlAndUsernameRequest) ProtoMessage() {}

func (x *ByJqlAndUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByJqlAndUsernameRequest.ProtoReflect.Descriptor instead.
func (*ByJqlAndUsernameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{0}
}

func (x *ByJqlAndUsernameRequest) GetJql() string {
	if x != nil {
		return x.Jql
	}
	return ""
}

func (x *ByJqlAndUsernameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ByNodeAndUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *cmdb.Node `protobuf:"bytes,20,opt,name=node,proto3" json:"node,omitempty"`
	Name string     `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ByNodeAndUsernameRequest) Reset() {
	*x = ByNodeAndUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNodeAndUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNodeAndUsernameRequest) ProtoMessage() {}

func (x *ByNodeAndUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNodeAndUsernameRequest.ProtoReflect.Descriptor instead.
func (*ByNodeAndUsernameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{1}
}

func (x *ByNodeAndUsernameRequest) GetNode() *cmdb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ByNodeAndUsernameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
	Name string     `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateNodeRequest) Reset() {
	*x = CreateNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeRequest) ProtoMessage() {}

func (x *CreateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeRequest.ProtoReflect.Descriptor instead.
func (*CreateNodeRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNodeRequest) GetNode() *cmdb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *CreateNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WithTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table    *cmdb.Table `protobuf:"bytes,10,opt,name=table,proto3" json:"table,omitempty"`
	Username string      `protobuf:"bytes,20,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *WithTableRequest) Reset() {
	*x = WithTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithTableRequest) ProtoMessage() {}

func (x *WithTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithTableRequest.ProtoReflect.Descriptor instead.
func (*WithTableRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{3}
}

func (x *WithTableRequest) GetTable() *cmdb.Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *WithTableRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type UpdateNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node   *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
	NodeId string     `protobuf:"bytes,20,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Name   string     `protobuf:"bytes,30,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateNodeRequest) Reset() {
	*x = UpdateNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeRequest) ProtoMessage() {}

func (x *UpdateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNodeRequest) GetNode() *cmdb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *UpdateNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UpdateNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WithNodesAndUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node []*cmdb.Node `protobuf:"bytes,20,rep,name=node,proto3" json:"node,omitempty"`
	Name string       `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WithNodesAndUsernameRequest) Reset() {
	*x = WithNodesAndUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithNodesAndUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithNodesAndUsernameRequest) ProtoMessage() {}

func (x *WithNodesAndUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithNodesAndUsernameRequest.ProtoReflect.Descriptor instead.
func (*WithNodesAndUsernameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{5}
}

func (x *WithNodesAndUsernameRequest) GetNode() []*cmdb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *WithNodesAndUsernameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WithNodesAndUsernameAndRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node        []*cmdb.Node `protobuf:"bytes,10,rep,name=node,proto3" json:"node,omitempty"`
	Name        string       `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	DstLabel    string       `protobuf:"bytes,30,opt,name=dstLabel,proto3" json:"dstLabel,omitempty"`
	DstKey      string       `protobuf:"bytes,40,opt,name=dstKey,proto3" json:"dstKey,omitempty"`
	DstValue    string       `protobuf:"bytes,50,opt,name=dstValue,proto3" json:"dstValue,omitempty"`
	RelationKey string       `protobuf:"bytes,60,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
}

func (x *WithNodesAndUsernameAndRelationRequest) Reset() {
	*x = WithNodesAndUsernameAndRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithNodesAndUsernameAndRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithNodesAndUsernameAndRelationRequest) ProtoMessage() {}

func (x *WithNodesAndUsernameAndRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithNodesAndUsernameAndRelationRequest.ProtoReflect.Descriptor instead.
func (*WithNodesAndUsernameAndRelationRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{6}
}

func (x *WithNodesAndUsernameAndRelationRequest) GetNode() []*cmdb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *WithNodesAndUsernameAndRelationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WithNodesAndUsernameAndRelationRequest) GetDstLabel() string {
	if x != nil {
		return x.DstLabel
	}
	return ""
}

func (x *WithNodesAndUsernameAndRelationRequest) GetDstKey() string {
	if x != nil {
		return x.DstKey
	}
	return ""
}

func (x *WithNodesAndUsernameAndRelationRequest) GetDstValue() string {
	if x != nil {
		return x.DstValue
	}
	return ""
}

func (x *WithNodesAndUsernameAndRelationRequest) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

type ByNodeIdAndUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelKey string `protobuf:"bytes,10,opt,name=model_key,json=modelKey,proto3" json:"model_key,omitempty"`
	NodeId   string `protobuf:"bytes,20,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Username string `protobuf:"bytes,30,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *ByNodeIdAndUsernameRequest) Reset() {
	*x = ByNodeIdAndUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNodeIdAndUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNodeIdAndUsernameRequest) ProtoMessage() {}

func (x *ByNodeIdAndUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNodeIdAndUsernameRequest.ProtoReflect.Descriptor instead.
func (*ByNodeIdAndUsernameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{7}
}

func (x *ByNodeIdAndUsernameRequest) GetModelKey() string {
	if x != nil {
		return x.ModelKey
	}
	return ""
}

func (x *ByNodeIdAndUsernameRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ByNodeIdAndUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ByNodeNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelKey string `protobuf:"bytes,10,opt,name=model_key,json=modelKey,proto3" json:"model_key,omitempty"`
	Name     string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ByNodeNameRequest) Reset() {
	*x = ByNodeNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNodeNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNodeNameRequest) ProtoMessage() {}

func (x *ByNodeNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNodeNameRequest.ProtoReflect.Descriptor instead.
func (*ByNodeNameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{8}
}

func (x *ByNodeNameRequest) GetModelKey() string {
	if x != nil {
		return x.ModelKey
	}
	return ""
}

func (x *ByNodeNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ByNodeIdAndRelationNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,10,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Name   string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ByNodeIdAndRelationNameRequest) Reset() {
	*x = ByNodeIdAndRelationNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNodeIdAndRelationNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNodeIdAndRelationNameRequest) ProtoMessage() {}

func (x *ByNodeIdAndRelationNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNodeIdAndRelationNameRequest.ProtoReflect.Descriptor instead.
func (*ByNodeIdAndRelationNameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{9}
}

func (x *ByNodeIdAndRelationNameRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ByNodeIdAndRelationNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ByModelIdAndUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId string `protobuf:"bytes,20,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Name    string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ByModelIdAndUsernameRequest) Reset() {
	*x = ByModelIdAndUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByModelIdAndUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByModelIdAndUsernameRequest) ProtoMessage() {}

func (x *ByModelIdAndUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByModelIdAndUsernameRequest.ProtoReflect.Descriptor instead.
func (*ByModelIdAndUsernameRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{10}
}

func (x *ByModelIdAndUsernameRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *ByModelIdAndUsernameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ByNodeIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,10,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ByNodeIdsRequest) Reset() {
	*x = ByNodeIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNodeIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNodeIdsRequest) ProtoMessage() {}

func (x *ByNodeIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNodeIdsRequest.ProtoReflect.Descriptor instead.
func (*ByNodeIdsRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{11}
}

func (x *ByNodeIdsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ByNodeIdsAndLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []string `protobuf:"bytes,10,rep,name=ids,proto3" json:"ids,omitempty"`
	Label string   `protobuf:"bytes,20,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *ByNodeIdsAndLabelRequest) Reset() {
	*x = ByNodeIdsAndLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByNodeIdsAndLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByNodeIdsAndLabelRequest) ProtoMessage() {}

func (x *ByNodeIdsAndLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByNodeIdsAndLabelRequest.ProtoReflect.Descriptor instead.
func (*ByNodeIdsAndLabelRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{12}
}

func (x *ByNodeIdsAndLabelRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ByNodeIdsAndLabelRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type ByModelKeyAndPropertiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelKey string `protobuf:"bytes,10,opt,name=model_key,json=modelKey,proto3" json:"model_key,omitempty"`
	Property string `protobuf:"bytes,20,opt,name=property,proto3" json:"property,omitempty"`
}

func (x *ByModelKeyAndPropertiesRequest) Reset() {
	*x = ByModelKeyAndPropertiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByModelKeyAndPropertiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByModelKeyAndPropertiesRequest) ProtoMessage() {}

func (x *ByModelKeyAndPropertiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByModelKeyAndPropertiesRequest.ProtoReflect.Descriptor instead.
func (*ByModelKeyAndPropertiesRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{13}
}

func (x *ByModelKeyAndPropertiesRequest) GetModelKey() string {
	if x != nil {
		return x.ModelKey
	}
	return ""
}

func (x *ByModelKeyAndPropertiesRequest) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

type WithSearchParamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label           string   `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	Properties      string   `protobuf:"bytes,20,opt,name=properties,proto3" json:"properties,omitempty"`                                  // json string 精准查询
	VagueProperties string   `protobuf:"bytes,30,opt,name=vague_properties,json=vagueProperties,proto3" json:"vague_properties,omitempty"` // json string 模糊查询
	Page            int32    `protobuf:"varint,40,opt,name=page,proto3" json:"page,omitempty"`
	Size            int32    `protobuf:"varint,50,opt,name=size,proto3" json:"size,omitempty"`
	Sort            []string `protobuf:"bytes,60,rep,name=sort,proto3" json:"sort,omitempty"`
	Desc            []string `protobuf:"bytes,70,rep,name=desc,proto3" json:"desc,omitempty"`
	Username        string   `protobuf:"bytes,80,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *WithSearchParamRequest) Reset() {
	*x = WithSearchParamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithSearchParamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithSearchParamRequest) ProtoMessage() {}

func (x *WithSearchParamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithSearchParamRequest.ProtoReflect.Descriptor instead.
func (*WithSearchParamRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{14}
}

func (x *WithSearchParamRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *WithSearchParamRequest) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

func (x *WithSearchParamRequest) GetVagueProperties() string {
	if x != nil {
		return x.VagueProperties
	}
	return ""
}

func (x *WithSearchParamRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *WithSearchParamRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *WithSearchParamRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *WithSearchParamRequest) GetDesc() []string {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *WithSearchParamRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type BySqlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql string `protobuf:"bytes,10,opt,name=sql,proto3" json:"sql,omitempty"`
}

func (x *BySqlRequest) Reset() {
	*x = BySqlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BySqlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BySqlRequest) ProtoMessage() {}

func (x *BySqlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BySqlRequest.ProtoReflect.Descriptor instead.
func (*BySqlRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{15}
}

func (x *BySqlRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

type SearchNodeAndCountByCqlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int32        `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`       // 数据总数
	PageSize int32        `protobuf:"varint,20,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 当前页数据量
	AllPage  int32        `protobuf:"varint,30,opt,name=allPage,proto3" json:"allPage,omitempty"`   // 总页数
	Nodes    []*cmdb.Node `protobuf:"bytes,40,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *SearchNodeAndCountByCqlResponse) Reset() {
	*x = SearchNodeAndCountByCqlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchNodeAndCountByCqlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNodeAndCountByCqlResponse) ProtoMessage() {}

func (x *SearchNodeAndCountByCqlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNodeAndCountByCqlResponse.ProtoReflect.Descriptor instead.
func (*SearchNodeAndCountByCqlResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{16}
}

func (x *SearchNodeAndCountByCqlResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchNodeAndCountByCqlResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchNodeAndCountByCqlResponse) GetAllPage() int32 {
	if x != nil {
		return x.AllPage
	}
	return 0
}

func (x *SearchNodeAndCountByCqlResponse) GetNodes() []*cmdb.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type WithTableGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableGroup *cmdb.TableGroup `protobuf:"bytes,10,opt,name=table_group,json=tableGroup,proto3" json:"table_group,omitempty"`
}

func (x *WithTableGroupRequest) Reset() {
	*x = WithTableGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithTableGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithTableGroupRequest) ProtoMessage() {}

func (x *WithTableGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithTableGroupRequest.ProtoReflect.Descriptor instead.
func (*WithTableGroupRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{17}
}

func (x *WithTableGroupRequest) GetTableGroup() *cmdb.TableGroup {
	if x != nil {
		return x.TableGroup
	}
	return nil
}

type ByPageAndKeywordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int32  `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
	Size    int32  `protobuf:"varint,20,opt,name=size,proto3" json:"size,omitempty"`
	Keyword string `protobuf:"bytes,30,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *ByPageAndKeywordRequest) Reset() {
	*x = ByPageAndKeywordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByPageAndKeywordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByPageAndKeywordRequest) ProtoMessage() {}

func (x *ByPageAndKeywordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByPageAndKeywordRequest.ProtoReflect.Descriptor instead.
func (*ByPageAndKeywordRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{18}
}

func (x *ByPageAndKeywordRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ByPageAndKeywordRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ByPageAndKeywordRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type ByJqlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jql string `protobuf:"bytes,10,opt,name=jql,proto3" json:"jql,omitempty"`
}

func (x *ByJqlRequest) Reset() {
	*x = ByJqlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByJqlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByJqlRequest) ProtoMessage() {}

func (x *ByJqlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByJqlRequest.ProtoReflect.Descriptor instead.
func (*ByJqlRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{19}
}

func (x *ByJqlRequest) GetJql() string {
	if x != nil {
		return x.Jql
	}
	return ""
}

type ByCqlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cql string `protobuf:"bytes,10,opt,name=cql,proto3" json:"cql,omitempty"`
}

func (x *ByCqlRequest) Reset() {
	*x = ByCqlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByCqlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByCqlRequest) ProtoMessage() {}

func (x *ByCqlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByCqlRequest.ProtoReflect.Descriptor instead.
func (*ByCqlRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{20}
}

func (x *ByCqlRequest) GetCql() string {
	if x != nil {
		return x.Cql
	}
	return ""
}

type ByModelIdAndRelationPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId  string                 `protobuf:"bytes,10,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	Property *cmdb.RelationProperty `protobuf:"bytes,20,opt,name=property,proto3" json:"property,omitempty"`
}

func (x *ByModelIdAndRelationPropertyRequest) Reset() {
	*x = ByModelIdAndRelationPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByModelIdAndRelationPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByModelIdAndRelationPropertyRequest) ProtoMessage() {}

func (x *ByModelIdAndRelationPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByModelIdAndRelationPropertyRequest.ProtoReflect.Descriptor instead.
func (*ByModelIdAndRelationPropertyRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{21}
}

func (x *ByModelIdAndRelationPropertyRequest) GetModelId() string {
	if x != nil {
		return x.ModelId
	}
	return ""
}

func (x *ByModelIdAndRelationPropertyRequest) GetProperty() *cmdb.RelationProperty {
	if x != nil {
		return x.Property
	}
	return nil
}

type ByLabelNameAndPropertiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelName  string `protobuf:"bytes,10,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	Properties string `protobuf:"bytes,20,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *ByLabelNameAndPropertiesRequest) Reset() {
	*x = ByLabelNameAndPropertiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByLabelNameAndPropertiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByLabelNameAndPropertiesRequest) ProtoMessage() {}

func (x *ByLabelNameAndPropertiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByLabelNameAndPropertiesRequest.ProtoReflect.Descriptor instead.
func (*ByLabelNameAndPropertiesRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{22}
}

func (x *ByLabelNameAndPropertiesRequest) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *ByLabelNameAndPropertiesRequest) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type WithFileInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File     []byte `protobuf:"bytes,10,opt,name=file,proto3" json:"file,omitempty"`
	Filename string `protobuf:"bytes,20,opt,name=filename,proto3" json:"filename,omitempty"`
	Username string `protobuf:"bytes,30,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *WithFileInfoRequest) Reset() {
	*x = WithFileInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithFileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithFileInfoRequest) ProtoMessage() {}

func (x *WithFileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithFileInfoRequest.ProtoReflect.Descriptor instead.
func (*WithFileInfoRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{23}
}

func (x *WithFileInfoRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *WithFileInfoRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *WithFileInfoRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CreateNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *CreateNodeResponse) Reset() {
	*x = CreateNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeResponse) ProtoMessage() {}

func (x *CreateNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeResponse.ProtoReflect.Descriptor instead.
func (*CreateNodeResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{24}
}

func (x *CreateNodeResponse) GetNode() *cmdb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type CreateNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNodesResponse) Reset() {
	*x = CreateNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodesResponse) ProtoMessage() {}

func (x *CreateNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodesResponse.ProtoReflect.Descriptor instead.
func (*CreateNodesResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{25}
}

type UpdateNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *UpdateNodeResponse) Reset() {
	*x = UpdateNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeResponse) ProtoMessage() {}

func (x *UpdateNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodeResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateNodeResponse) GetNode() *cmdb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type ExistsNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,10,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsNodeResponse) Reset() {
	*x = ExistsNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsNodeResponse) ProtoMessage() {}

func (x *ExistsNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsNodeResponse.ProtoReflect.Descriptor instead.
func (*ExistsNodeResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{27}
}

func (x *ExistsNodeResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type UpdateNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNodesResponse) Reset() {
	*x = UpdateNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodesResponse) ProtoMessage() {}

func (x *UpdateNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodesResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodesResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{28}
}

type DeleteNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNodeResponse) Reset() {
	*x = DeleteNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeResponse) ProtoMessage() {}

func (x *DeleteNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeResponse.ProtoReflect.Descriptor instead.
func (*DeleteNodeResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{29}
}

type DeleteNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNodesResponse) Reset() {
	*x = DeleteNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodesResponse) ProtoMessage() {}

func (x *DeleteNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodesResponse.ProtoReflect.Descriptor instead.
func (*DeleteNodesResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{30}
}

type ListNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int32        `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`       // 数据总数
	PageSize int32        `protobuf:"varint,20,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 当前页数据量
	AllPage  int32        `protobuf:"varint,30,opt,name=allPage,proto3" json:"allPage,omitempty"`   // 总页数
	Nodes    []*cmdb.Node `protobuf:"bytes,40,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ListNodeResponse) Reset() {
	*x = ListNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeResponse) ProtoMessage() {}

func (x *ListNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeResponse.ProtoReflect.Descriptor instead.
func (*ListNodeResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{31}
}

func (x *ListNodeResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListNodeResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListNodeResponse) GetAllPage() int32 {
	if x != nil {
		return x.AllPage
	}
	return 0
}

func (x *ListNodeResponse) GetNodes() []*cmdb.Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type GetNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *cmdb.Node `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{32}
}

func (x *GetNodeResponse) GetNode() *cmdb.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type CountNodeRelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountNodeRelationsResponse) Reset() {
	*x = CountNodeRelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountNodeRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountNodeRelationsResponse) ProtoMessage() {}

func (x *CountNodeRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountNodeRelationsResponse.ProtoReflect.Descriptor instead.
func (*CountNodeRelationsResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{33}
}

func (x *CountNodeRelationsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SearchNodeAutoCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strs []string `protobuf:"bytes,10,rep,name=strs,proto3" json:"strs,omitempty"`
}

func (x *SearchNodeAutoCompleteResponse) Reset() {
	*x = SearchNodeAutoCompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchNodeAutoCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNodeAutoCompleteResponse) ProtoMessage() {}

func (x *SearchNodeAutoCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNodeAutoCompleteResponse.ProtoReflect.Descriptor instead.
func (*SearchNodeAutoCompleteResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{34}
}

func (x *SearchNodeAutoCompleteResponse) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

type SearchRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRef map[string]string `protobuf:"bytes,10,rep,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SearchRelationResponse) Reset() {
	*x = SearchRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRelationResponse) ProtoMessage() {}

func (x *SearchRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRelationResponse.ProtoReflect.Descriptor instead.
func (*SearchRelationResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{35}
}

func (x *SearchRelationResponse) GetUserRef() map[string]string {
	if x != nil {
		return x.UserRef
	}
	return nil
}

type GetNodeRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool  `protobuf:"varint,10,opt,name=exists,proto3" json:"exists,omitempty"`
	Link   int32 `protobuf:"varint,20,opt,name=link,proto3" json:"link,omitempty"`     // 当前节点为头节点,关联了多少节点
	Linked int32 `protobuf:"varint,30,opt,name=linked,proto3" json:"linked,omitempty"` // 当前节点为尾,被多少个节点关联
}

func (x *GetNodeRelationResponse) Reset() {
	*x = GetNodeRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRelationResponse) ProtoMessage() {}

func (x *GetNodeRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRelationResponse.ProtoReflect.Descriptor instead.
func (*GetNodeRelationResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{36}
}

func (x *GetNodeRelationResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *GetNodeRelationResponse) GetLink() int32 {
	if x != nil {
		return x.Link
	}
	return 0
}

func (x *GetNodeRelationResponse) GetLinked() int32 {
	if x != nil {
		return x.Linked
	}
	return 0
}

type DownloadExcelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []byte `protobuf:"bytes,10,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *DownloadExcelResponse) Reset() {
	*x = DownloadExcelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadExcelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadExcelResponse) ProtoMessage() {}

func (x *DownloadExcelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadExcelResponse.ProtoReflect.Descriptor instead.
func (*DownloadExcelResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{37}
}

func (x *DownloadExcelResponse) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type GetNodeCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetNodeCountResponse) Reset() {
	*x = GetNodeCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeCountResponse) ProtoMessage() {}

func (x *GetNodeCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeCountResponse.ProtoReflect.Descriptor instead.
func (*GetNodeCountResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{38}
}

func (x *GetNodeCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TreeStructRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root         string `protobuf:"bytes,10,opt,name=root,proto3" json:"root,omitempty"`
	RelationType string `protobuf:"bytes,20,opt,name=relation_type,json=relationType,proto3" json:"relation_type,omitempty"`
}

func (x *TreeStructRequest) Reset() {
	*x = TreeStructRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeStructRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeStructRequest) ProtoMessage() {}

func (x *TreeStructRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeStructRequest.ProtoReflect.Descriptor instead.
func (*TreeStructRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{39}
}

func (x *TreeStructRequest) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *TreeStructRequest) GetRelationType() string {
	if x != nil {
		return x.RelationType
	}
	return ""
}

type TreeStructResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TreeStructResponse) Reset() {
	*x = TreeStructResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeStructResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeStructResponse) ProtoMessage() {}

func (x *TreeStructResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeStructResponse.ProtoReflect.Descriptor instead.
func (*TreeStructResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{40}
}

func (x *TreeStructResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcKey      string `protobuf:"bytes,10,opt,name=srcKey,proto3" json:"srcKey,omitempty"`
	SrcLabel    string `protobuf:"bytes,20,opt,name=srcLabel,proto3" json:"srcLabel,omitempty"`
	SrcValue    string `protobuf:"bytes,30,opt,name=srcValue,proto3" json:"srcValue,omitempty"`
	DstKey      string `protobuf:"bytes,40,opt,name=dstKey,proto3" json:"dstKey,omitempty"`
	DstLabel    string `protobuf:"bytes,50,opt,name=dstLabel,proto3" json:"dstLabel,omitempty"`
	DstValue    string `protobuf:"bytes,60,opt,name=dstValue,proto3" json:"dstValue,omitempty"`
	RelationKey string `protobuf:"bytes,70,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
}

func (x *CreateRelationRequest) Reset() {
	*x = CreateRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationRequest) ProtoMessage() {}

func (x *CreateRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationRequest.ProtoReflect.Descriptor instead.
func (*CreateRelationRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{41}
}

func (x *CreateRelationRequest) GetSrcKey() string {
	if x != nil {
		return x.SrcKey
	}
	return ""
}

func (x *CreateRelationRequest) GetSrcLabel() string {
	if x != nil {
		return x.SrcLabel
	}
	return ""
}

func (x *CreateRelationRequest) GetSrcValue() string {
	if x != nil {
		return x.SrcValue
	}
	return ""
}

func (x *CreateRelationRequest) GetDstKey() string {
	if x != nil {
		return x.DstKey
	}
	return ""
}

func (x *CreateRelationRequest) GetDstLabel() string {
	if x != nil {
		return x.DstLabel
	}
	return ""
}

func (x *CreateRelationRequest) GetDstValue() string {
	if x != nil {
		return x.DstValue
	}
	return ""
}

func (x *CreateRelationRequest) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

type ClearRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcId       string `protobuf:"bytes,10,opt,name=srcId,proto3" json:"srcId,omitempty"`
	SrcLabel    string `protobuf:"bytes,20,opt,name=srcLabel,proto3" json:"srcLabel,omitempty"`
	DstId       string `protobuf:"bytes,30,opt,name=dstId,proto3" json:"dstId,omitempty"`
	DstLabel    string `protobuf:"bytes,40,opt,name=dstLabel,proto3" json:"dstLabel,omitempty"`
	RelationKey string `protobuf:"bytes,50,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
}

func (x *ClearRelationRequest) Reset() {
	*x = ClearRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRelationRequest) ProtoMessage() {}

func (x *ClearRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRelationRequest.ProtoReflect.Descriptor instead.
func (*ClearRelationRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{42}
}

func (x *ClearRelationRequest) GetSrcId() string {
	if x != nil {
		return x.SrcId
	}
	return ""
}

func (x *ClearRelationRequest) GetSrcLabel() string {
	if x != nil {
		return x.SrcLabel
	}
	return ""
}

func (x *ClearRelationRequest) GetDstId() string {
	if x != nil {
		return x.DstId
	}
	return ""
}

func (x *ClearRelationRequest) GetDstLabel() string {
	if x != nil {
		return x.DstLabel
	}
	return ""
}

func (x *ClearRelationRequest) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

type ClearRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearRelationResponse) Reset() {
	*x = ClearRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRelationResponse) ProtoMessage() {}

func (x *ClearRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRelationResponse.ProtoReflect.Descriptor instead.
func (*ClearRelationResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{43}
}

type CreateRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRelationResponse) Reset() {
	*x = CreateRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRelationResponse) ProtoMessage() {}

func (x *CreateRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRelationResponse.ProtoReflect.Descriptor instead.
func (*CreateRelationResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{44}
}

type ClearAllRelationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	ModelKey string `protobuf:"bytes,20,opt,name=modelKey,proto3" json:"modelKey,omitempty"`
}

func (x *ClearAllRelationRequest) Reset() {
	*x = ClearAllRelationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAllRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAllRelationRequest) ProtoMessage() {}

func (x *ClearAllRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAllRelationRequest.ProtoReflect.Descriptor instead.
func (*ClearAllRelationRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{45}
}

func (x *ClearAllRelationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClearAllRelationRequest) GetModelKey() string {
	if x != nil {
		return x.ModelKey
	}
	return ""
}

type ClearAllRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearAllRelationResponse) Reset() {
	*x = ClearAllRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAllRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAllRelationResponse) ProtoMessage() {}

func (x *ClearAllRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAllRelationResponse.ProtoReflect.Descriptor instead.
func (*ClearAllRelationResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{46}
}

type GetNodeRelationTreeDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root         string `protobuf:"bytes,10,opt,name=root,proto3" json:"root,omitempty"`
	NodeId       string `protobuf:"bytes,20,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	RelationType string `protobuf:"bytes,30,opt,name=relationType,proto3" json:"relationType,omitempty"`
}

func (x *GetNodeRelationTreeDetailRequest) Reset() {
	*x = GetNodeRelationTreeDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeRelationTreeDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRelationTreeDetailRequest) ProtoMessage() {}

func (x *GetNodeRelationTreeDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRelationTreeDetailRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRelationTreeDetailRequest) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{47}
}

func (x *GetNodeRelationTreeDetailRequest) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *GetNodeRelationTreeDetailRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *GetNodeRelationTreeDetailRequest) GetRelationType() string {
	if x != nil {
		return x.RelationType
	}
	return ""
}

type CreateTableGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTableGroupResponse) Reset() {
	*x = CreateTableGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableGroupResponse) ProtoMessage() {}

func (x *CreateTableGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateTableGroupResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{48}
}

func (x *CreateTableGroupResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNodeRelationTreeDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetNodeRelationTreeDetailItem `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetNodeRelationTreeDetailResponse) Reset() {
	*x = GetNodeRelationTreeDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeRelationTreeDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRelationTreeDetailResponse) ProtoMessage() {}

func (x *GetNodeRelationTreeDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRelationTreeDetailResponse.ProtoReflect.Descriptor instead.
func (*GetNodeRelationTreeDetailResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{49}
}

func (x *GetNodeRelationTreeDetailResponse) GetItems() []*GetNodeRelationTreeDetailItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetNodeRelationTreeDetailItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon      string   `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty"`
	ModelKey  string   `protobuf:"bytes,20,opt,name=modelKey,proto3" json:"modelKey,omitempty"`
	ModelName string   `protobuf:"bytes,30,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Ids       []string `protobuf:"bytes,40,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetNodeRelationTreeDetailItem) Reset() {
	*x = GetNodeRelationTreeDetailItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeRelationTreeDetailItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRelationTreeDetailItem) ProtoMessage() {}

func (x *GetNodeRelationTreeDetailItem) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRelationTreeDetailItem.ProtoReflect.Descriptor instead.
func (*GetNodeRelationTreeDetailItem) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{50}
}

func (x *GetNodeRelationTreeDetailItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GetNodeRelationTreeDetailItem) GetModelKey() string {
	if x != nil {
		return x.ModelKey
	}
	return ""
}

func (x *GetNodeRelationTreeDetailItem) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *GetNodeRelationTreeDetailItem) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type CreateNodesAndRelationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNodesAndRelationResponse) Reset() {
	*x = CreateNodesAndRelationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_grpc_cmdb_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodesAndRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodesAndRelationResponse) ProtoMessage() {}

func (x *CreateNodesAndRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_grpc_cmdb_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodesAndRelationResponse.ProtoReflect.Descriptor instead.
func (*CreateNodesAndRelationResponse) Descriptor() ([]byte, []int) {
	return file_src_grpc_cmdb_proto_rawDescGZIP(), []int{51}
}

var File_src_grpc_cmdb_proto protoreflect.FileDescriptor

var file_src_grpc_cmdb_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6d, 0x64, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a, 0x15, 0x73, 0x72, 0x63, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x73, 0x72, 0x63, 0x2f, 0x63, 0x6d, 0x64, 0x62, 0x2f, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x17, 0x42, 0x79, 0x4a, 0x71, 0x6c, 0x41,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x71, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x71, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x18, 0x42, 0x79, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x51, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x1b, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x26, 0x57, 0x69, 0x74,
	0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x6e, 0x0a, 0x1a, 0x42, 0x79, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x11, 0x42, 0x79, 0x4e,
	0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x4d, 0x0a, 0x1e, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c,
	0x0a, 0x1b, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x10,
	0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x42, 0x0a, 0x18, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x41,
	0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x59, 0x0a, 0x1e, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x22, 0xe5, 0x01, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61,
	0x67, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x3c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x46, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x0c, 0x42, 0x79, 0x53,
	0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x22, 0x8f, 0x01, 0x0a, 0x1f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x43, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4a, 0x0a,
	0x15, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6d,
	0x64, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x5b, 0x0a, 0x17, 0x42, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x20, 0x0a, 0x0c, 0x42, 0x79, 0x4a, 0x71, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x71, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x71, 0x6c, 0x22, 0x20, 0x0a, 0x0c, 0x42, 0x79, 0x43, 0x71,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x71, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x71, 0x6c, 0x22, 0x74, 0x0a, 0x23, 0x42, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x22, 0x60, 0x0a, 0x1f, 0x42, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x61, 0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64, 0x62,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x34, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6d, 0x64,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x31, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x63, 0x6d, 0x64, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x22, 0x32, 0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x1e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x1a, 0x3a, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0x2c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x4c, 0x0a, 0x11, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x28,
	0x0a, 0x12, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x72, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x72,
	0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x72,
	0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x72, 0x63, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x73,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x72, 0x63, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x72,
	0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x72, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x73, 0x74, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x17, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x22, 0x1a, 0x0a,
	0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2a, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x21, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x7f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x28,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xef, 0x0d, 0x0a, 0x0b,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x79, 0x4a, 0x71, 0x6c, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e,
	0x6f, 0x64, 0x65, 0x42, 0x79, 0x43, 0x71, 0x6c, 0x12, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x6f, 0x64,
	0x65, 0x42, 0x79, 0x53, 0x71, 0x6c, 0x12, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x53,
	0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43,
	0x71, 0x6c, 0x12, 0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x71, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x11, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4a, 0x71, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x6f, 0x34, 0x6a, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e,
	0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x6f, 0x34, 0x6a, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x20, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x41, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x6f, 0x34, 0x6a, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0a, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x6f, 0x34, 0x6a, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xd9, 0x04,
	0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4a, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a,
	0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4a, 0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x65, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72,
	0x65, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xd4, 0x05, 0x0a, 0x0c, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x42, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0f, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x28, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x28, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x32, 0x9b, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x78, 0x63, 0x65, 0x6c,
	0x12, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x12, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x45,
	0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa3,
	0x01, 0x0a, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x42, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x15,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x0a, 0x16, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x6b, 0x79, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x25,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6b, 0x79, 0x2d, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x74, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_grpc_cmdb_proto_rawDescOnce sync.Once
	file_src_grpc_cmdb_proto_rawDescData = file_src_grpc_cmdb_proto_rawDesc
)

func file_src_grpc_cmdb_proto_rawDescGZIP() []byte {
	file_src_grpc_cmdb_proto_rawDescOnce.Do(func() {
		file_src_grpc_cmdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_grpc_cmdb_proto_rawDescData)
	})
	return file_src_grpc_cmdb_proto_rawDescData
}

var file_src_grpc_cmdb_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_src_grpc_cmdb_proto_goTypes = []interface{}{
	(*ByJqlAndUsernameRequest)(nil),                // 0: rpc.ByJqlAndUsernameRequest
	(*ByNodeAndUsernameRequest)(nil),               // 1: rpc.ByNodeAndUsernameRequest
	(*CreateNodeRequest)(nil),                      // 2: rpc.CreateNodeRequest
	(*WithTableRequest)(nil),                       // 3: rpc.WithTableRequest
	(*UpdateNodeRequest)(nil),                      // 4: rpc.UpdateNodeRequest
	(*WithNodesAndUsernameRequest)(nil),            // 5: rpc.WithNodesAndUsernameRequest
	(*WithNodesAndUsernameAndRelationRequest)(nil), // 6: rpc.WithNodesAndUsernameAndRelationRequest
	(*ByNodeIdAndUsernameRequest)(nil),             // 7: rpc.ByNodeIdAndUsernameRequest
	(*ByNodeNameRequest)(nil),                      // 8: rpc.ByNodeNameRequest
	(*ByNodeIdAndRelationNameRequest)(nil),         // 9: rpc.ByNodeIdAndRelationNameRequest
	(*ByModelIdAndUsernameRequest)(nil),            // 10: rpc.ByModelIdAndUsernameRequest
	(*ByNodeIdsRequest)(nil),                       // 11: rpc.ByNodeIdsRequest
	(*ByNodeIdsAndLabelRequest)(nil),               // 12: rpc.ByNodeIdsAndLabelRequest
	(*ByModelKeyAndPropertiesRequest)(nil),         // 13: rpc.ByModelKeyAndPropertiesRequest
	(*WithSearchParamRequest)(nil),                 // 14: rpc.WithSearchParamRequest
	(*BySqlRequest)(nil),                           // 15: rpc.BySqlRequest
	(*SearchNodeAndCountByCqlResponse)(nil),        // 16: rpc.SearchNodeAndCountByCqlResponse
	(*WithTableGroupRequest)(nil),                  // 17: rpc.WithTableGroupRequest
	(*ByPageAndKeywordRequest)(nil),                // 18: rpc.ByPageAndKeywordRequest
	(*ByJqlRequest)(nil),                           // 19: rpc.ByJqlRequest
	(*ByCqlRequest)(nil),                           // 20: rpc.ByCqlRequest
	(*ByModelIdAndRelationPropertyRequest)(nil),    // 21: rpc.ByModelIdAndRelationPropertyRequest
	(*ByLabelNameAndPropertiesRequest)(nil),        // 22: rpc.ByLabelNameAndPropertiesRequest
	(*WithFileInfoRequest)(nil),                    // 23: rpc.WithFileInfoRequest
	(*CreateNodeResponse)(nil),                     // 24: rpc.CreateNodeResponse
	(*CreateNodesResponse)(nil),                    // 25: rpc.CreateNodesResponse
	(*UpdateNodeResponse)(nil),                     // 26: rpc.UpdateNodeResponse
	(*ExistsNodeResponse)(nil),                     // 27: rpc.ExistsNodeResponse
	(*UpdateNodesResponse)(nil),                    // 28: rpc.UpdateNodesResponse
	(*DeleteNodeResponse)(nil),                     // 29: rpc.DeleteNodeResponse
	(*DeleteNodesResponse)(nil),                    // 30: rpc.DeleteNodesResponse
	(*ListNodeResponse)(nil),                       // 31: rpc.ListNodeResponse
	(*GetNodeResponse)(nil),                        // 32: rpc.GetNodeResponse
	(*CountNodeRelationsResponse)(nil),             // 33: rpc.CountNodeRelationsResponse
	(*SearchNodeAutoCompleteResponse)(nil),         // 34: rpc.SearchNodeAutoCompleteResponse
	(*SearchRelationResponse)(nil),                 // 35: rpc.SearchRelationResponse
	(*GetNodeRelationResponse)(nil),                // 36: rpc.GetNodeRelationResponse
	(*DownloadExcelResponse)(nil),                  // 37: rpc.DownloadExcelResponse
	(*GetNodeCountResponse)(nil),                   // 38: rpc.GetNodeCountResponse
	(*TreeStructRequest)(nil),                      // 39: rpc.TreeStructRequest
	(*TreeStructResponse)(nil),                     // 40: rpc.TreeStructResponse
	(*CreateRelationRequest)(nil),                  // 41: rpc.CreateRelationRequest
	(*ClearRelationRequest)(nil),                   // 42: rpc.ClearRelationRequest
	(*ClearRelationResponse)(nil),                  // 43: rpc.ClearRelationResponse
	(*CreateRelationResponse)(nil),                 // 44: rpc.CreateRelationResponse
	(*ClearAllRelationRequest)(nil),                // 45: rpc.ClearAllRelationRequest
	(*ClearAllRelationResponse)(nil),               // 46: rpc.ClearAllRelationResponse
	(*GetNodeRelationTreeDetailRequest)(nil),       // 47: rpc.GetNodeRelationTreeDetailRequest
	(*CreateTableGroupResponse)(nil),               // 48: rpc.CreateTableGroupResponse
	(*GetNodeRelationTreeDetailResponse)(nil),      // 49: rpc.GetNodeRelationTreeDetailResponse
	(*GetNodeRelationTreeDetailItem)(nil),          // 50: rpc.GetNodeRelationTreeDetailItem
	(*CreateNodesAndRelationResponse)(nil),         // 51: rpc.CreateNodesAndRelationResponse
	nil,                                            // 52: rpc.SearchRelationResponse.UserRefEntry
	(*cmdb.Node)(nil),                              // 53: cmdb.Node
	(*cmdb.Table)(nil),                             // 54: cmdb.Table
	(*cmdb.TableGroup)(nil),                        // 55: cmdb.TableGroup
	(*cmdb.RelationProperty)(nil),                  // 56: cmdb.RelationProperty
	(*common.SimpleJsonRequest)(nil),               // 57: common.SimpleJsonRequest
	(*common.SimpleJsonResponse)(nil),              // 58: common.SimpleJsonResponse
}
var file_src_grpc_cmdb_proto_depIdxs = []int32{
	53, // 0: rpc.ByNodeAndUsernameRequest.node:type_name -> cmdb.Node
	53, // 1: rpc.CreateNodeRequest.node:type_name -> cmdb.Node
	54, // 2: rpc.WithTableRequest.table:type_name -> cmdb.Table
	53, // 3: rpc.UpdateNodeRequest.node:type_name -> cmdb.Node
	53, // 4: rpc.WithNodesAndUsernameRequest.node:type_name -> cmdb.Node
	53, // 5: rpc.WithNodesAndUsernameAndRelationRequest.node:type_name -> cmdb.Node
	53, // 6: rpc.SearchNodeAndCountByCqlResponse.nodes:type_name -> cmdb.Node
	55, // 7: rpc.WithTableGroupRequest.table_group:type_name -> cmdb.TableGroup
	56, // 8: rpc.ByModelIdAndRelationPropertyRequest.property:type_name -> cmdb.RelationProperty
	53, // 9: rpc.CreateNodeResponse.node:type_name -> cmdb.Node
	53, // 10: rpc.UpdateNodeResponse.node:type_name -> cmdb.Node
	53, // 11: rpc.ListNodeResponse.nodes:type_name -> cmdb.Node
	53, // 12: rpc.GetNodeResponse.node:type_name -> cmdb.Node
	52, // 13: rpc.SearchRelationResponse.user_ref:type_name -> rpc.SearchRelationResponse.UserRefEntry
	50, // 14: rpc.GetNodeRelationTreeDetailResponse.items:type_name -> rpc.GetNodeRelationTreeDetailItem
	0,  // 15: rpc.NodeService.SearchNode:input_type -> rpc.ByJqlAndUsernameRequest
	14, // 16: rpc.NodeService.SearchNodeByCql:input_type -> rpc.WithSearchParamRequest
	15, // 17: rpc.NodeService.SearchNodeBySql:input_type -> rpc.BySqlRequest
	14, // 18: rpc.NodeService.SearchNodeAndCountByCql:input_type -> rpc.WithSearchParamRequest
	19, // 19: rpc.NodeService.SearchNodeAutoComplete:input_type -> rpc.ByJqlRequest
	2,  // 20: rpc.NodeService.CreateNode:input_type -> rpc.CreateNodeRequest
	2,  // 21: rpc.NodeService.CreateNeo4jNode:input_type -> rpc.CreateNodeRequest
	5,  // 22: rpc.NodeService.CreateNodes:input_type -> rpc.WithNodesAndUsernameRequest
	6,  // 23: rpc.NodeService.CreateNodesAndRelation:input_type -> rpc.WithNodesAndUsernameAndRelationRequest
	4,  // 24: rpc.NodeService.UpdateNode:input_type -> rpc.UpdateNodeRequest
	5,  // 25: rpc.NodeService.UpdateNeo4jNode:input_type -> rpc.WithNodesAndUsernameRequest
	5,  // 26: rpc.NodeService.UpdateNodes:input_type -> rpc.WithNodesAndUsernameRequest
	7,  // 27: rpc.NodeService.DeleteNode:input_type -> rpc.ByNodeIdAndUsernameRequest
	7,  // 28: rpc.NodeService.DeleteNodeAndRelation:input_type -> rpc.ByNodeIdAndUsernameRequest
	7,  // 29: rpc.NodeService.DeleteNeo4jNode:input_type -> rpc.ByNodeIdAndUsernameRequest
	12, // 30: rpc.NodeService.DeleteNodes:input_type -> rpc.ByNodeIdsAndLabelRequest
	14, // 31: rpc.NodeService.ListNode:input_type -> rpc.WithSearchParamRequest
	7,  // 32: rpc.NodeService.GetNode:input_type -> rpc.ByNodeIdAndUsernameRequest
	8,  // 33: rpc.NodeService.GetNodeByName:input_type -> rpc.ByNodeNameRequest
	13, // 34: rpc.NodeService.ExistsNode:input_type -> rpc.ByModelKeyAndPropertiesRequest
	7,  // 35: rpc.NodeService.GetNeo4jNode:input_type -> rpc.ByNodeIdAndUsernameRequest
	22, // 36: rpc.NodeService.GetNodeCount:input_type -> rpc.ByLabelNameAndPropertiesRequest
	39, // 37: rpc.NodeService.GetTreeStructNodes:input_type -> rpc.TreeStructRequest
	11, // 38: rpc.RelationService.SearchNodeRelation:input_type -> rpc.ByNodeIdsRequest
	9,  // 39: rpc.RelationService.CountNodeRelations:input_type -> rpc.ByNodeIdAndRelationNameRequest
	19, // 40: rpc.RelationService.GetNodeRelation:input_type -> rpc.ByJqlRequest
	41, // 41: rpc.RelationService.CreateRelation:input_type -> rpc.CreateRelationRequest
	42, // 42: rpc.RelationService.ClearRelation:input_type -> rpc.ClearRelationRequest
	45, // 43: rpc.RelationService.ClearAllRelation:input_type -> rpc.ClearAllRelationRequest
	47, // 44: rpc.RelationService.GetNodeRelationTreeDetail:input_type -> rpc.GetNodeRelationTreeDetailRequest
	18, // 45: rpc.ModelService.ListModel:input_type -> rpc.ByPageAndKeywordRequest
	57, // 46: rpc.ModelService.CreateModel:input_type -> common.SimpleJsonRequest
	57, // 47: rpc.ModelService.UpdateModel:input_type -> common.SimpleJsonRequest
	10, // 48: rpc.ModelService.DeleteModel:input_type -> rpc.ByModelIdAndUsernameRequest
	57, // 49: rpc.ModelService.GetModel:input_type -> common.SimpleJsonRequest
	57, // 50: rpc.ModelService.GetModelByLabel:input_type -> common.SimpleJsonRequest
	21, // 51: rpc.ModelService.BindingProperty:input_type -> rpc.ByModelIdAndRelationPropertyRequest
	21, // 52: rpc.ModelService.DeleteBindingProperty:input_type -> rpc.ByModelIdAndRelationPropertyRequest
	57, // 53: rpc.ModelService.GetBindingProperties:input_type -> common.SimpleJsonRequest
	23, // 54: rpc.ExcelService.UploadExcel:input_type -> rpc.WithFileInfoRequest
	11, // 55: rpc.ExcelService.DownloadExcel:input_type -> rpc.ByNodeIdsRequest
	3,  // 56: rpc.TableService.CreateTable:input_type -> rpc.WithTableRequest
	17, // 57: rpc.TableService.CreateTableGroup:input_type -> rpc.WithTableGroupRequest
	58, // 58: rpc.NodeService.SearchNode:output_type -> common.SimpleJsonResponse
	58, // 59: rpc.NodeService.SearchNodeByCql:output_type -> common.SimpleJsonResponse
	58, // 60: rpc.NodeService.SearchNodeBySql:output_type -> common.SimpleJsonResponse
	16, // 61: rpc.NodeService.SearchNodeAndCountByCql:output_type -> rpc.SearchNodeAndCountByCqlResponse
	34, // 62: rpc.NodeService.SearchNodeAutoComplete:output_type -> rpc.SearchNodeAutoCompleteResponse
	24, // 63: rpc.NodeService.CreateNode:output_type -> rpc.CreateNodeResponse
	24, // 64: rpc.NodeService.CreateNeo4jNode:output_type -> rpc.CreateNodeResponse
	25, // 65: rpc.NodeService.CreateNodes:output_type -> rpc.CreateNodesResponse
	51, // 66: rpc.NodeService.CreateNodesAndRelation:output_type -> rpc.CreateNodesAndRelationResponse
	26, // 67: rpc.NodeService.UpdateNode:output_type -> rpc.UpdateNodeResponse
	26, // 68: rpc.NodeService.UpdateNeo4jNode:output_type -> rpc.UpdateNodeResponse
	28, // 69: rpc.NodeService.UpdateNodes:output_type -> rpc.UpdateNodesResponse
	29, // 70: rpc.NodeService.DeleteNode:output_type -> rpc.DeleteNodeResponse
	29, // 71: rpc.NodeService.DeleteNodeAndRelation:output_type -> rpc.DeleteNodeResponse
	29, // 72: rpc.NodeService.DeleteNeo4jNode:output_type -> rpc.DeleteNodeResponse
	30, // 73: rpc.NodeService.DeleteNodes:output_type -> rpc.DeleteNodesResponse
	31, // 74: rpc.NodeService.ListNode:output_type -> rpc.ListNodeResponse
	32, // 75: rpc.NodeService.GetNode:output_type -> rpc.GetNodeResponse
	32, // 76: rpc.NodeService.GetNodeByName:output_type -> rpc.GetNodeResponse
	27, // 77: rpc.NodeService.ExistsNode:output_type -> rpc.ExistsNodeResponse
	32, // 78: rpc.NodeService.GetNeo4jNode:output_type -> rpc.GetNodeResponse
	38, // 79: rpc.NodeService.GetNodeCount:output_type -> rpc.GetNodeCountResponse
	40, // 80: rpc.NodeService.GetTreeStructNodes:output_type -> rpc.TreeStructResponse
	35, // 81: rpc.RelationService.SearchNodeRelation:output_type -> rpc.SearchRelationResponse
	33, // 82: rpc.RelationService.CountNodeRelations:output_type -> rpc.CountNodeRelationsResponse
	36, // 83: rpc.RelationService.GetNodeRelation:output_type -> rpc.GetNodeRelationResponse
	44, // 84: rpc.RelationService.CreateRelation:output_type -> rpc.CreateRelationResponse
	43, // 85: rpc.RelationService.ClearRelation:output_type -> rpc.ClearRelationResponse
	46, // 86: rpc.RelationService.ClearAllRelation:output_type -> rpc.ClearAllRelationResponse
	49, // 87: rpc.RelationService.GetNodeRelationTreeDetail:output_type -> rpc.GetNodeRelationTreeDetailResponse
	58, // 88: rpc.ModelService.ListModel:output_type -> common.SimpleJsonResponse
	58, // 89: rpc.ModelService.CreateModel:output_type -> common.SimpleJsonResponse
	58, // 90: rpc.ModelService.UpdateModel:output_type -> common.SimpleJsonResponse
	58, // 91: rpc.ModelService.DeleteModel:output_type -> common.SimpleJsonResponse
	58, // 92: rpc.ModelService.GetModel:output_type -> common.SimpleJsonResponse
	58, // 93: rpc.ModelService.GetModelByLabel:output_type -> common.SimpleJsonResponse
	58, // 94: rpc.ModelService.BindingProperty:output_type -> common.SimpleJsonResponse
	58, // 95: rpc.ModelService.DeleteBindingProperty:output_type -> common.SimpleJsonResponse
	58, // 96: rpc.ModelService.GetBindingProperties:output_type -> common.SimpleJsonResponse
	58, // 97: rpc.ExcelService.UploadExcel:output_type -> common.SimpleJsonResponse
	37, // 98: rpc.ExcelService.DownloadExcel:output_type -> rpc.DownloadExcelResponse
	58, // 99: rpc.TableService.CreateTable:output_type -> common.SimpleJsonResponse
	48, // 100: rpc.TableService.CreateTableGroup:output_type -> rpc.CreateTableGroupResponse
	58, // [58:101] is the sub-list for method output_type
	15, // [15:58] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_src_grpc_cmdb_proto_init() }
func file_src_grpc_cmdb_proto_init() {
	if File_src_grpc_cmdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_grpc_cmdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByJqlAndUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNodeAndUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithNodesAndUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithNodesAndUsernameAndRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNodeIdAndUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNodeNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNodeIdAndRelationNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByModelIdAndUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNodeIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByNodeIdsAndLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByModelKeyAndPropertiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithSearchParamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BySqlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchNodeAndCountByCqlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithTableGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByPageAndKeywordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByJqlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByCqlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByModelIdAndRelationPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByLabelNameAndPropertiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithFileInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistsNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountNodeRelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchNodeAutoCompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadExcelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeStructRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeStructResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearAllRelationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearAllRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeRelationTreeDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeRelationTreeDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeRelationTreeDetailItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_grpc_cmdb_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodesAndRelationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_grpc_cmdb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_src_grpc_cmdb_proto_goTypes,
		DependencyIndexes: file_src_grpc_cmdb_proto_depIdxs,
		MessageInfos:      file_src_grpc_cmdb_proto_msgTypes,
	}.Build()
	File_src_grpc_cmdb_proto = out.File
	file_src_grpc_cmdb_proto_rawDesc = nil
	file_src_grpc_cmdb_proto_goTypes = nil
	file_src_grpc_cmdb_proto_depIdxs = nil
}
