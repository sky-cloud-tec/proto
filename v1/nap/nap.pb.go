// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: src/nap/nap.proto

package nap

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicyTicketStage int32

const (
	PolicyTicketStage_UNKNOWN_POLICY_TICKET_STAGE PolicyTicketStage = 0
	PolicyTicketStage_CREATED                     PolicyTicketStage = 1  // 已创建
	PolicyTicketStage_ROUTE_ANALYZED              PolicyTicketStage = 2  // 路径分析完成
	PolicyTicketStage_OBJECT_ANALYZED             PolicyTicketStage = 3  // 对象分析完成
	PolicyTicketStage_AUDITED                     PolicyTicketStage = 4  // 被批准
	PolicyTicketStage_DECLINED                    PolicyTicketStage = 5  // 被拒绝
	PolicyTicketStage_DISPATCH_PENDING            PolicyTicketStage = 6  // 等待下发(包括未设置下发时间和已经设置下发时间但是未开始)
	PolicyTicketStage_DISPATCHING                 PolicyTicketStage = 7  // 正在下发
	PolicyTicketStage_DISPATCHED                  PolicyTicketStage = 8  // 已下发完成
	PolicyTicketStage_ROLLBACK_PENDING            PolicyTicketStage = 9  // 等待回滚(已经设置回滚时间)
	PolicyTicketStage_ROLLING_BACK                PolicyTicketStage = 10 // 正在回滚
	PolicyTicketStage_ROLLED_BACK                 PolicyTicketStage = 11 // 回滚完成
	PolicyTicketStage_ROUTE_ANALYZED_ERROR        PolicyTicketStage = 12 // 路径分析出错
	PolicyTicketStage_OBJECT_ANALYZED_ERROR       PolicyTicketStage = 13 // 对象分析出错
	PolicyTicketStage_DISPATCHING_ERROR           PolicyTicketStage = 14 // 下发出错
	PolicyTicketStage_ROLLING_BACK_ERROR          PolicyTicketStage = 15 // 回滚出错
	PolicyTicketStage_ERROR                       PolicyTicketStage = 16 // 出错
)

// Enum value maps for PolicyTicketStage.
var (
	PolicyTicketStage_name = map[int32]string{
		0:  "UNKNOWN_POLICY_TICKET_STAGE",
		1:  "CREATED",
		2:  "ROUTE_ANALYZED",
		3:  "OBJECT_ANALYZED",
		4:  "AUDITED",
		5:  "DECLINED",
		6:  "DISPATCH_PENDING",
		7:  "DISPATCHING",
		8:  "DISPATCHED",
		9:  "ROLLBACK_PENDING",
		10: "ROLLING_BACK",
		11: "ROLLED_BACK",
		12: "ROUTE_ANALYZED_ERROR",
		13: "OBJECT_ANALYZED_ERROR",
		14: "DISPATCHING_ERROR",
		15: "ROLLING_BACK_ERROR",
		16: "ERROR",
	}
	PolicyTicketStage_value = map[string]int32{
		"UNKNOWN_POLICY_TICKET_STAGE": 0,
		"CREATED":                     1,
		"ROUTE_ANALYZED":              2,
		"OBJECT_ANALYZED":             3,
		"AUDITED":                     4,
		"DECLINED":                    5,
		"DISPATCH_PENDING":            6,
		"DISPATCHING":                 7,
		"DISPATCHED":                  8,
		"ROLLBACK_PENDING":            9,
		"ROLLING_BACK":                10,
		"ROLLED_BACK":                 11,
		"ROUTE_ANALYZED_ERROR":        12,
		"OBJECT_ANALYZED_ERROR":       13,
		"DISPATCHING_ERROR":           14,
		"ROLLING_BACK_ERROR":          15,
		"ERROR":                       16,
	}
)

func (x PolicyTicketStage) Enum() *PolicyTicketStage {
	p := new(PolicyTicketStage)
	*p = x
	return p
}

func (x PolicyTicketStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyTicketStage) Descriptor() protoreflect.EnumDescriptor {
	return file_src_nap_nap_proto_enumTypes[0].Descriptor()
}

func (PolicyTicketStage) Type() protoreflect.EnumType {
	return &file_src_nap_nap_proto_enumTypes[0]
}

func (x PolicyTicketStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyTicketStage.Descriptor instead.
func (PolicyTicketStage) EnumDescriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{0}
}

type CapType int32

const (
	CapType_UNKNOWN_CAP_TYPE         CapType = 0
	CapType_POLICY_SEARCH            CapType = 1
	CapType_POLICY_TICKET            CapType = 2
	CapType_NSXT_POLICY_TICKET       CapType = 3 // NSX-T防火墙策略开通
	CapType_OBJECTS_MANAGER          CapType = 4
	CapType_NAT_MANAGER              CapType = 5
	CapType_DEVICE_DISCOVERER        CapType = 6
	CapType_NAT_AND_POLICY           CapType = 7
	CapType_POLICY_TRACE             CapType = 8
	CapType_SWITCH_INTERFACE_CONFIG  CapType = 9  //接口配置
	CapType_POLICY_CHANGE_REPORT     CapType = 10 //策略变更查询
	CapType_POLICY_COMPLIANCE_RULE   CapType = 11 //策略合规规则
	CapType_DEVICE_QUOTA_MAX_DEVICES CapType = 12
)

// Enum value maps for CapType.
var (
	CapType_name = map[int32]string{
		0:  "UNKNOWN_CAP_TYPE",
		1:  "POLICY_SEARCH",
		2:  "POLICY_TICKET",
		3:  "NSXT_POLICY_TICKET",
		4:  "OBJECTS_MANAGER",
		5:  "NAT_MANAGER",
		6:  "DEVICE_DISCOVERER",
		7:  "NAT_AND_POLICY",
		8:  "POLICY_TRACE",
		9:  "SWITCH_INTERFACE_CONFIG",
		10: "POLICY_CHANGE_REPORT",
		11: "POLICY_COMPLIANCE_RULE",
		12: "DEVICE_QUOTA_MAX_DEVICES",
	}
	CapType_value = map[string]int32{
		"UNKNOWN_CAP_TYPE":         0,
		"POLICY_SEARCH":            1,
		"POLICY_TICKET":            2,
		"NSXT_POLICY_TICKET":       3,
		"OBJECTS_MANAGER":          4,
		"NAT_MANAGER":              5,
		"DEVICE_DISCOVERER":        6,
		"NAT_AND_POLICY":           7,
		"POLICY_TRACE":             8,
		"SWITCH_INTERFACE_CONFIG":  9,
		"POLICY_CHANGE_REPORT":     10,
		"POLICY_COMPLIANCE_RULE":   11,
		"DEVICE_QUOTA_MAX_DEVICES": 12,
	}
)

func (x CapType) Enum() *CapType {
	p := new(CapType)
	*p = x
	return p
}

func (x CapType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CapType) Descriptor() protoreflect.EnumDescriptor {
	return file_src_nap_nap_proto_enumTypes[1].Descriptor()
}

func (CapType) Type() protoreflect.EnumType {
	return &file_src_nap_nap_proto_enumTypes[1]
}

func (x CapType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CapType.Descriptor instead.
func (CapType) EnumDescriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{1}
}

type DeviceState int32

const (
	DeviceState_UNKNOWN DeviceState = 0
	DeviceState_RUNNING DeviceState = 1
	DeviceState_DOWN    DeviceState = 2
)

// Enum value maps for DeviceState.
var (
	DeviceState_name = map[int32]string{
		0: "UNKNOWN",
		1: "RUNNING",
		2: "DOWN",
	}
	DeviceState_value = map[string]int32{
		"UNKNOWN": 0,
		"RUNNING": 1,
		"DOWN":    2,
	}
)

func (x DeviceState) Enum() *DeviceState {
	p := new(DeviceState)
	*p = x
	return p
}

func (x DeviceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceState) Descriptor() protoreflect.EnumDescriptor {
	return file_src_nap_nap_proto_enumTypes[2].Descriptor()
}

func (DeviceState) Type() protoreflect.EnumType {
	return &file_src_nap_nap_proto_enumTypes[2]
}

func (x DeviceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceState.Descriptor instead.
func (DeviceState) EnumDescriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{2}
}

type FromType int32

const (
	FromType_SYNC   FromType = 0
	FromType_IMPORT FromType = 1
)

// Enum value maps for FromType.
var (
	FromType_name = map[int32]string{
		0: "SYNC",
		1: "IMPORT",
	}
	FromType_value = map[string]int32{
		"SYNC":   0,
		"IMPORT": 1,
	}
)

func (x FromType) Enum() *FromType {
	p := new(FromType)
	*p = x
	return p
}

func (x FromType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FromType) Descriptor() protoreflect.EnumDescriptor {
	return file_src_nap_nap_proto_enumTypes[3].Descriptor()
}

func (FromType) Type() protoreflect.EnumType {
	return &file_src_nap_nap_proto_enumTypes[3]
}

func (x FromType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FromType.Descriptor instead.
func (FromType) EnumDescriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{3}
}

type PullResult int32

const (
	PullResult_UPDATED   PullResult = 0
	PullResult_UNCHANGED PullResult = 1
)

// Enum value maps for PullResult.
var (
	PullResult_name = map[int32]string{
		0: "UPDATED",
		1: "UNCHANGED",
	}
	PullResult_value = map[string]int32{
		"UPDATED":   0,
		"UNCHANGED": 1,
	}
)

func (x PullResult) Enum() *PullResult {
	p := new(PullResult)
	*p = x
	return p
}

func (x PullResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PullResult) Descriptor() protoreflect.EnumDescriptor {
	return file_src_nap_nap_proto_enumTypes[4].Descriptor()
}

func (PullResult) Type() protoreflect.EnumType {
	return &file_src_nap_nap_proto_enumTypes[4]
}

func (x PullResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PullResult.Descriptor instead.
func (PullResult) EnumDescriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{4}
}

type ResourceObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ResourceObject) Reset() {
	*x = ResourceObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceObject) ProtoMessage() {}

func (x *ResourceObject) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceObject.ProtoReflect.Descriptor instead.
func (*ResourceObject) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResourceObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceObject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type RawConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	Device     string   `protobuf:"bytes,20,opt,name=device,proto3" json:"device,omitempty"`
	DeviceType string   `protobuf:"bytes,23,opt,name=deviceType,proto3" json:"deviceType,omitempty"`        // device type firewall | switch etc.
	From       FromType `protobuf:"varint,25,opt,name=from,proto3,enum=nap.FromType" json:"from,omitempty"` // sync | import
	Source     string   `protobuf:"bytes,26,opt,name=source,proto3" json:"source,omitempty"`                // import by user(id) or sync by task(id)
	Version    int32    `protobuf:"varint,27,opt,name=version,proto3" json:"version,omitempty"`             // auto inc version number
	CreatedAt  int64    `protobuf:"varint,30,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Active     bool     `protobuf:"varint,40,opt,name=active,proto3" json:"active,omitempty"` // 标记当前的对象配置是从哪个raw config 解析出来的
	Raw        string   `protobuf:"bytes,50,opt,name=raw,proto3" json:"raw,omitempty"`        // raw text
}

func (x *RawConfig) Reset() {
	*x = RawConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawConfig) ProtoMessage() {}

func (x *RawConfig) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawConfig.ProtoReflect.Descriptor instead.
func (*RawConfig) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{1}
}

func (x *RawConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RawConfig) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *RawConfig) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *RawConfig) GetFrom() FromType {
	if x != nil {
		return x.From
	}
	return FromType_SYNC
}

func (x *RawConfig) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RawConfig) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RawConfig) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RawConfig) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *RawConfig) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"` // json字符串
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{2}
}

func (x *Address) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type Interfaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Interfaces) Reset() {
	*x = Interfaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interfaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interfaces) ProtoMessage() {}

func (x *Interfaces) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interfaces.ProtoReflect.Descriptor instead.
func (*Interfaces) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{3}
}

func (x *Interfaces) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Zones struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Zones) Reset() {
	*x = Zones{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zones) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zones) ProtoMessage() {}

func (x *Zones) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zones.ProtoReflect.Descriptor instead.
func (*Zones) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{4}
}

func (x *Zones) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type ZonePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	From   string `protobuf:"bytes,10,opt,name=from,proto3" json:"from,omitempty"`     // from zone
	To     string `protobuf:"bytes,20,opt,name=to,proto3" json:"to,omitempty"`         // to zone
	Policy string `protobuf:"bytes,30,opt,name=policy,proto3" json:"policy,omitempty"` // policy name
}

func (x *ZonePair) Reset() {
	*x = ZonePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZonePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonePair) ProtoMessage() {}

func (x *ZonePair) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonePair.ProtoReflect.Descriptor instead.
func (*ZonePair) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{5}
}

func (x *ZonePair) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZonePair) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ZonePair) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *ZonePair) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

type NatObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *NatObjects) Reset() {
	*x = NatObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NatObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatObjects) ProtoMessage() {}

func (x *NatObjects) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatObjects.ProtoReflect.Descriptor instead.
func (*NatObjects) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{6}
}

func (x *NatObjects) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type NatPools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *NatPools) Reset() {
	*x = NatPools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NatPools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatPools) ProtoMessage() {}

func (x *NatPools) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatPools.ProtoReflect.Descriptor instead.
func (*NatPools) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{7}
}

func (x *NatPools) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type RuleSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *RuleSet) Reset() {
	*x = RuleSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleSet) ProtoMessage() {}

func (x *RuleSet) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleSet.ProtoReflect.Descriptor instead.
func (*RuleSet) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{8}
}

func (x *RuleSet) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Vips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Vips) Reset() {
	*x = Vips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vips) ProtoMessage() {}

func (x *Vips) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vips.ProtoReflect.Descriptor instead.
func (*Vips) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{9}
}

func (x *Vips) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Schedules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Schedules) Reset() {
	*x = Schedules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedules) ProtoMessage() {}

func (x *Schedules) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedules.ProtoReflect.Descriptor instead.
func (*Schedules) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{10}
}

func (x *Schedules) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Services struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Services) Reset() {
	*x = Services{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Services) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Services) ProtoMessage() {}

func (x *Services) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Services.ProtoReflect.Descriptor instead.
func (*Services) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{11}
}

func (x *Services) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Routes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Routes) Reset() {
	*x = Routes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Routes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Routes) ProtoMessage() {}

func (x *Routes) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Routes.ProtoReflect.Descriptor instead.
func (*Routes) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{12}
}

func (x *Routes) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Policies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Policies) Reset() {
	*x = Policies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policies) ProtoMessage() {}

func (x *Policies) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policies.ProtoReflect.Descriptor instead.
func (*Policies) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{13}
}

func (x *Policies) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Applications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Applications) Reset() {
	*x = Applications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Applications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Applications) ProtoMessage() {}

func (x *Applications) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Applications.ProtoReflect.Descriptor instead.
func (*Applications) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{14}
}

func (x *Applications) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type HitCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *HitCounts) Reset() {
	*x = HitCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitCounts) ProtoMessage() {}

func (x *HitCounts) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitCounts.ProtoReflect.Descriptor instead.
func (*HitCounts) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{15}
}

func (x *HitCounts) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type UserIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *UserIDs) Reset() {
	*x = UserIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIDs) ProtoMessage() {}

func (x *UserIDs) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIDs.ProtoReflect.Descriptor instead.
func (*UserIDs) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{16}
}

func (x *UserIDs) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type AccessGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *AccessGroups) Reset() {
	*x = AccessGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessGroups) ProtoMessage() {}

func (x *AccessGroups) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessGroups.ProtoReflect.Descriptor instead.
func (*AccessGroups) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{17}
}

func (x *AccessGroups) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Vrfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json
}

func (x *Vrfs) Reset() {
	*x = Vrfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vrfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vrfs) ProtoMessage() {}

func (x *Vrfs) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vrfs.ProtoReflect.Descriptor instead.
func (*Vrfs) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{18}
}

func (x *Vrfs) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Vlans struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Vlans) Reset() {
	*x = Vlans{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vlans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vlans) ProtoMessage() {}

func (x *Vlans) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vlans.ProtoReflect.Descriptor instead.
func (*Vlans) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{19}
}

func (x *Vlans) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Pbrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *Pbrs) Reset() {
	*x = Pbrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pbrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pbrs) ProtoMessage() {}

func (x *Pbrs) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pbrs.ProtoReflect.Descriptor instead.
func (*Pbrs) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{20}
}

func (x *Pbrs) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type Profiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json
}

func (x *Profiles) Reset() {
	*x = Profiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profiles) ProtoMessage() {}

func (x *Profiles) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profiles.ProtoReflect.Descriptor instead.
func (*Profiles) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{21}
}

func (x *Profiles) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type ApplicationGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *ApplicationGroups) Reset() {
	*x = ApplicationGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationGroups) ProtoMessage() {}

func (x *ApplicationGroups) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationGroups.ProtoReflect.Descriptor instead.
func (*ApplicationGroups) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{22}
}

func (x *ApplicationGroups) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

type UrlCategorys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonStr string `protobuf:"bytes,1,opt,name=json_str,json=jsonStr,proto3" json:"json_str,omitempty"` // json字符串
}

func (x *UrlCategorys) Reset() {
	*x = UrlCategorys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_nap_nap_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlCategorys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlCategorys) ProtoMessage() {}

func (x *UrlCategorys) ProtoReflect() protoreflect.Message {
	mi := &file_src_nap_nap_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlCategorys.ProtoReflect.Descriptor instead.
func (*UrlCategorys) Descriptor() ([]byte, []int) {
	return file_src_nap_nap_proto_rawDescGZIP(), []int{23}
}

func (x *UrlCategorys) GetJsonStr() string {
	if x != nil {
		return x.JsonStr
	}
	return ""
}

var File_src_nap_nap_proto protoreflect.FileDescriptor

var file_src_nap_nap_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x72, 0x63, 0x2f, 0x6e, 0x61, 0x70, 0x2f, 0x6e, 0x61, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6e, 0x61, 0x70, 0x22, 0x48, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6e, 0x61, 0x70, 0x2e, 0x46, 0x72, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x1d, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x22,
	0x0a, 0x05, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x22, 0x56, 0x0a, 0x08, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x27, 0x0a, 0x0a, 0x4e, 0x61,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x22, 0x25, 0x0a, 0x08, 0x4e, 0x61, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x24, 0x0a, 0x07, 0x52, 0x75,
	0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x22, 0x21, 0x0a, 0x04, 0x56, 0x69, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x22, 0x26, 0x0a, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x25, 0x0a, 0x08, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x22, 0x23, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x25, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x29,
	0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x26, 0x0a, 0x09, 0x48, 0x69, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x22, 0x24, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x29, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x22, 0x21, 0x0a, 0x04, 0x56, 0x72, 0x66, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x22, 0x0a, 0x05, 0x56, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x21, 0x0a, 0x04, 0x50, 0x62, 0x72,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x22, 0x25, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x22, 0x2e, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x22, 0x29, 0x0a, 0x0c, 0x55, 0x72, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x2a, 0xe4,
	0x02, 0x0a, 0x11, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x41, 0x4e, 0x41, 0x4c,
	0x59, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x41, 0x4e, 0x41, 0x4c, 0x59, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x55, 0x44, 0x49, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x43, 0x4c,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x45, 0x44, 0x10, 0x08, 0x12, 0x14, 0x0a,
	0x10, 0x52, 0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x42,
	0x41, 0x43, 0x4b, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x44, 0x5f,
	0x42, 0x41, 0x43, 0x4b, 0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f,
	0x41, 0x4e, 0x41, 0x4c, 0x59, 0x5a, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0c,
	0x12, 0x19, 0x0a, 0x15, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x4e, 0x41, 0x4c, 0x59,
	0x5a, 0x45, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x49, 0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x0e, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x41,
	0x43, 0x4b, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x10, 0x2a, 0xb1, 0x02, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x41, 0x50,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x4e, 0x53, 0x58, 0x54, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x49, 0x43,
	0x4b, 0x45, 0x54, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x53,
	0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x41,
	0x54, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x45, 0x52,
	0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x41, 0x54, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59,
	0x5f, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x57, 0x49, 0x54,
	0x43, 0x48, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x0a, 0x12,
	0x1a, 0x0a, 0x16, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x49,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x10, 0x0b, 0x12, 0x1c, 0x0a, 0x18, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x5f, 0x4d, 0x41, 0x58, 0x5f,
	0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x53, 0x10, 0x0c, 0x2a, 0x31, 0x0a, 0x0b, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x2a, 0x20, 0x0a, 0x08,
	0x46, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x59, 0x4e, 0x43,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x2a, 0x28,
	0x0a, 0x0a, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x01, 0x42, 0x3f, 0x0a, 0x16, 0x6e, 0x65, 0x74, 0x2e,
	0x73, 0x6b, 0x79, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e,
	0x61, 0x70, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6b, 0x79, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x74, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x61, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_src_nap_nap_proto_rawDescOnce sync.Once
	file_src_nap_nap_proto_rawDescData = file_src_nap_nap_proto_rawDesc
)

func file_src_nap_nap_proto_rawDescGZIP() []byte {
	file_src_nap_nap_proto_rawDescOnce.Do(func() {
		file_src_nap_nap_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_nap_nap_proto_rawDescData)
	})
	return file_src_nap_nap_proto_rawDescData
}

var file_src_nap_nap_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_src_nap_nap_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_src_nap_nap_proto_goTypes = []interface{}{
	(PolicyTicketStage)(0),    // 0: nap.PolicyTicketStage
	(CapType)(0),              // 1: nap.CapType
	(DeviceState)(0),          // 2: nap.DeviceState
	(FromType)(0),             // 3: nap.FromType
	(PullResult)(0),           // 4: nap.PullResult
	(*ResourceObject)(nil),    // 5: nap.ResourceObject
	(*RawConfig)(nil),         // 6: nap.RawConfig
	(*Address)(nil),           // 7: nap.Address
	(*Interfaces)(nil),        // 8: nap.Interfaces
	(*Zones)(nil),             // 9: nap.Zones
	(*ZonePair)(nil),          // 10: nap.ZonePair
	(*NatObjects)(nil),        // 11: nap.NatObjects
	(*NatPools)(nil),          // 12: nap.NatPools
	(*RuleSet)(nil),           // 13: nap.RuleSet
	(*Vips)(nil),              // 14: nap.Vips
	(*Schedules)(nil),         // 15: nap.Schedules
	(*Services)(nil),          // 16: nap.Services
	(*Routes)(nil),            // 17: nap.Routes
	(*Policies)(nil),          // 18: nap.Policies
	(*Applications)(nil),      // 19: nap.Applications
	(*HitCounts)(nil),         // 20: nap.HitCounts
	(*UserIDs)(nil),           // 21: nap.UserIDs
	(*AccessGroups)(nil),      // 22: nap.AccessGroups
	(*Vrfs)(nil),              // 23: nap.Vrfs
	(*Vlans)(nil),             // 24: nap.Vlans
	(*Pbrs)(nil),              // 25: nap.Pbrs
	(*Profiles)(nil),          // 26: nap.Profiles
	(*ApplicationGroups)(nil), // 27: nap.ApplicationGroups
	(*UrlCategorys)(nil),      // 28: nap.UrlCategorys
}
var file_src_nap_nap_proto_depIdxs = []int32{
	3, // 0: nap.RawConfig.from:type_name -> nap.FromType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_src_nap_nap_proto_init() }
func file_src_nap_nap_proto_init() {
	if File_src_nap_nap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_nap_nap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interfaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zones); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZonePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NatObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NatPools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Services); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Routes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Policies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Applications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vrfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vlans); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pbrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_nap_nap_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlCategorys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_nap_nap_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_nap_nap_proto_goTypes,
		DependencyIndexes: file_src_nap_nap_proto_depIdxs,
		EnumInfos:         file_src_nap_nap_proto_enumTypes,
		MessageInfos:      file_src_nap_nap_proto_msgTypes,
	}.Build()
	File_src_nap_nap_proto = out.File
	file_src_nap_nap_proto_rawDesc = nil
	file_src_nap_nap_proto_goTypes = nil
	file_src_nap_nap_proto_depIdxs = nil
}
