// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth/auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/sky-cloud-tec/proto/v1/common"
	eventti "github.com/sky-cloud-tec/proto/v1/eventti"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoleList struct {
	Role                 []string `protobuf:"bytes,1,rep,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleList) Reset()         { *m = RoleList{} }
func (m *RoleList) String() string { return proto.CompactTextString(m) }
func (*RoleList) ProtoMessage()    {}
func (*RoleList) Descriptor() ([]byte, []int) {
	return fileDescriptor_712ec48c1eaf43a2, []int{0}
}

func (m *RoleList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleList.Unmarshal(m, b)
}
func (m *RoleList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleList.Marshal(b, m, deterministic)
}
func (m *RoleList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleList.Merge(m, src)
}
func (m *RoleList) XXX_Size() int {
	return xxx_messageInfo_RoleList.Size(m)
}
func (m *RoleList) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleList.DiscardUnknown(m)
}

var xxx_messageInfo_RoleList proto.InternalMessageInfo

func (m *RoleList) GetRole() []string {
	if m != nil {
		return m.Role
	}
	return nil
}

type ServiceName struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceName) Reset()         { *m = ServiceName{} }
func (m *ServiceName) String() string { return proto.CompactTextString(m) }
func (*ServiceName) ProtoMessage()    {}
func (*ServiceName) Descriptor() ([]byte, []int) {
	return fileDescriptor_712ec48c1eaf43a2, []int{1}
}

func (m *ServiceName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceName.Unmarshal(m, b)
}
func (m *ServiceName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceName.Marshal(b, m, deterministic)
}
func (m *ServiceName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceName.Merge(m, src)
}
func (m *ServiceName) XXX_Size() int {
	return xxx_messageInfo_ServiceName.Size(m)
}
func (m *ServiceName) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceName.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceName proto.InternalMessageInfo

func (m *ServiceName) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type ServiceApp struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Role                 []string `protobuf:"bytes,2,rep,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceApp) Reset()         { *m = ServiceApp{} }
func (m *ServiceApp) String() string { return proto.CompactTextString(m) }
func (*ServiceApp) ProtoMessage()    {}
func (*ServiceApp) Descriptor() ([]byte, []int) {
	return fileDescriptor_712ec48c1eaf43a2, []int{2}
}

func (m *ServiceApp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceApp.Unmarshal(m, b)
}
func (m *ServiceApp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceApp.Marshal(b, m, deterministic)
}
func (m *ServiceApp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceApp.Merge(m, src)
}
func (m *ServiceApp) XXX_Size() int {
	return xxx_messageInfo_ServiceApp.Size(m)
}
func (m *ServiceApp) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceApp.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceApp proto.InternalMessageInfo

func (m *ServiceApp) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ServiceApp) GetRole() []string {
	if m != nil {
		return m.Role
	}
	return nil
}

func init() {
	proto.RegisterType((*RoleList)(nil), "auth.RoleList")
	proto.RegisterType((*ServiceName)(nil), "auth.ServiceName")
	proto.RegisterType((*ServiceApp)(nil), "auth.ServiceApp")
}

func init() {
	proto.RegisterFile("auth/auth.proto", fileDescriptor_712ec48c1eaf43a2)
}

var fileDescriptor_712ec48c1eaf43a2 = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0xa5, 0xdf, 0x47, 0x44, 0x86, 0x04, 0x74, 0x8d, 0x91, 0xd4, 0xc4, 0x90, 0x1e, 0x94, 0x0b,
	0x5d, 0xc5, 0x78, 0xd1, 0x53, 0x25, 0xc6, 0x8b, 0x78, 0x80, 0x9b, 0xb7, 0xd2, 0x8e, 0xed, 0x86,
	0xd2, 0x6d, 0xba, 0x53, 0x62, 0x7f, 0xaf, 0x7f, 0xc4, 0xec, 0x2e, 0xa0, 0x26, 0x9a, 0x78, 0xe9,
	0xcc, 0xbc, 0xbe, 0xb7, 0x6f, 0x5e, 0x06, 0x7a, 0x61, 0x45, 0x29, 0xd7, 0x1f, 0xbf, 0x28, 0x25,
	0x49, 0xd6, 0xd4, 0xbd, 0x7b, 0x8c, 0x6b, 0xcc, 0x89, 0x04, 0xdf, 0x54, 0xfb, 0xd3, 0x3d, 0x8a,
	0xe4, 0x6a, 0x25, 0x73, 0x6e, 0x8b, 0x05, 0xbd, 0x33, 0xd8, 0x9f, 0xc9, 0x0c, 0x9f, 0x84, 0x22,
	0xc6, 0xa0, 0x59, 0xca, 0x0c, 0xfb, 0xce, 0xe0, 0xff, 0xb0, 0x3d, 0x33, 0xbd, 0x77, 0x01, 0x9d,
	0x39, 0x96, 0x6b, 0x11, 0xe1, 0x73, 0xb8, 0x42, 0xd6, 0x87, 0x96, 0xb2, 0x63, 0xdf, 0x19, 0x38,
	0xc3, 0xf6, 0x6c, 0x3b, 0x7a, 0xb7, 0x00, 0x1b, 0x62, 0x50, 0x14, 0xbf, 0xf3, 0x76, 0x26, 0xff,
	0x3e, 0x4d, 0xc6, 0xef, 0x0e, 0xb4, 0xe6, 0xcb, 0x3a, 0xa8, 0x28, 0x65, 0x63, 0xe8, 0x3c, 0x22,
	0xed, 0x76, 0x3a, 0xf4, 0x4d, 0xbc, 0x2f, 0x3b, 0xb8, 0x5d, 0x0b, 0x6d, 0x29, 0x5e, 0x83, 0xdd,
	0x01, 0x4c, 0x65, 0x2c, 0x5e, 0x6b, 0x8d, 0xb1, 0x53, 0x7f, 0x9b, 0x5b, 0x3f, 0xa8, 0xa1, 0x49,
	0x1a, 0xe6, 0x09, 0xc6, 0x53, 0x95, 0xb8, 0x5d, 0x7f, 0x13, 0x7f, 0x4e, 0xa5, 0xc8, 0x13, 0xaf,
	0xc1, 0x2e, 0x01, 0x26, 0x25, 0x86, 0x84, 0x46, 0x7c, 0xf0, 0xcd, 0x2f, 0x28, 0x8a, 0x1f, 0x14,
	0x37, 0xd0, 0x8b, 0x31, 0x43, 0xc2, 0x87, 0x37, 0xa1, 0xe8, 0xaf, 0xb2, 0xfb, 0x00, 0x4e, 0x72,
	0x24, 0x5f, 0x2d, 0xeb, 0x28, 0x93, 0x55, 0x6c, 0x0f, 0x60, 0x74, 0x2f, 0xe7, 0x89, 0xa0, 0xb4,
	0x5a, 0x68, 0x09, 0x57, 0xcb, 0x7a, 0x64, 0x08, 0x23, 0xc2, 0x88, 0x1b, 0x12, 0x5f, 0x5f, 0x99,
	0x2b, 0x2f, 0xf6, 0xcc, 0x78, 0xfd, 0x11, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x2f, 0xbf, 0xa0, 0xf9,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SkyAuthClient is the client API for SkyAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SkyAuthClient interface {
	GetRoleList(ctx context.Context, in *ServiceName, opts ...grpc.CallOption) (*RoleList, error)
	ModifyRole(ctx context.Context, in *eventti.AuthRoleChangedMsg, opts ...grpc.CallOption) (*common.String, error)
	CreateRole(ctx context.Context, in *ServiceApp, opts ...grpc.CallOption) (*common.String, error)
	DeleteExistRole(ctx context.Context, in *ServiceApp, opts ...grpc.CallOption) (*common.String, error)
}

type skyAuthClient struct {
	cc grpc.ClientConnInterface
}

func NewSkyAuthClient(cc grpc.ClientConnInterface) SkyAuthClient {
	return &skyAuthClient{cc}
}

func (c *skyAuthClient) GetRoleList(ctx context.Context, in *ServiceName, opts ...grpc.CallOption) (*RoleList, error) {
	out := new(RoleList)
	err := c.cc.Invoke(ctx, "/auth.SkyAuth/GetRoleList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skyAuthClient) ModifyRole(ctx context.Context, in *eventti.AuthRoleChangedMsg, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/auth.SkyAuth/ModifyRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skyAuthClient) CreateRole(ctx context.Context, in *ServiceApp, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/auth.SkyAuth/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skyAuthClient) DeleteExistRole(ctx context.Context, in *ServiceApp, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/auth.SkyAuth/deleteExistRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SkyAuthServer is the server API for SkyAuth service.
type SkyAuthServer interface {
	GetRoleList(context.Context, *ServiceName) (*RoleList, error)
	ModifyRole(context.Context, *eventti.AuthRoleChangedMsg) (*common.String, error)
	CreateRole(context.Context, *ServiceApp) (*common.String, error)
	DeleteExistRole(context.Context, *ServiceApp) (*common.String, error)
}

// UnimplementedSkyAuthServer can be embedded to have forward compatible implementations.
type UnimplementedSkyAuthServer struct {
}

func (*UnimplementedSkyAuthServer) GetRoleList(ctx context.Context, req *ServiceName) (*RoleList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoleList not implemented")
}
func (*UnimplementedSkyAuthServer) ModifyRole(ctx context.Context, req *eventti.AuthRoleChangedMsg) (*common.String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyRole not implemented")
}
func (*UnimplementedSkyAuthServer) CreateRole(ctx context.Context, req *ServiceApp) (*common.String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedSkyAuthServer) DeleteExistRole(ctx context.Context, req *ServiceApp) (*common.String, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExistRole not implemented")
}

func RegisterSkyAuthServer(s *grpc.Server, srv SkyAuthServer) {
	s.RegisterService(&_SkyAuth_serviceDesc, srv)
}

func _SkyAuth_GetRoleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkyAuthServer).GetRoleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.SkyAuth/GetRoleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkyAuthServer).GetRoleList(ctx, req.(*ServiceName))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkyAuth_ModifyRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(eventti.AuthRoleChangedMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkyAuthServer).ModifyRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.SkyAuth/ModifyRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkyAuthServer).ModifyRole(ctx, req.(*eventti.AuthRoleChangedMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkyAuth_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceApp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkyAuthServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.SkyAuth/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkyAuthServer).CreateRole(ctx, req.(*ServiceApp))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkyAuth_DeleteExistRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceApp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkyAuthServer).DeleteExistRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.SkyAuth/DeleteExistRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkyAuthServer).DeleteExistRole(ctx, req.(*ServiceApp))
	}
	return interceptor(ctx, in, info, handler)
}

var _SkyAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.SkyAuth",
	HandlerType: (*SkyAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRoleList",
			Handler:    _SkyAuth_GetRoleList_Handler,
		},
		{
			MethodName: "ModifyRole",
			Handler:    _SkyAuth_ModifyRole_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _SkyAuth_CreateRole_Handler,
		},
		{
			MethodName: "deleteExistRole",
			Handler:    _SkyAuth_DeleteExistRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth/auth.proto",
}
